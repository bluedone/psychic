{"code":"import { __awaiter, __generator } from \"tslib\";\nimport { useState, useEffect } from 'react';\nvar NOTION_OAUTH_URL = 'https://www.notion.com/oauth/authorize';\nexport function useNotionOAuth(connector_id, connection_id, public_key) {\n    var _a = useState(null), authCode = _a[0], setAuthCode = _a[1];\n    var windowObjectReference = null;\n    function authorize() {\n        return __awaiter(this, void 0, void 0, function () {\n            var authorizeResult, url, strWindowFeatures;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, authorizeConnection(null, connector_id, connection_id, public_key)];\n                    case 1:\n                        authorizeResult = _a.sent();\n                        url = authorizeResult.auth_url;\n                        if (windowObjectReference === null || windowObjectReference.closed) {\n                            strWindowFeatures = 'toolbar=no,menubar=no,width=600,height=700,top=100,left=100';\n                            windowObjectReference = window.open(url, 'NotionOAuth', strWindowFeatures);\n                            windowObjectReference.addEventListener('hashchange', handleHashChange);\n                            windowObjectReference.addEventListener('popstate', handlePopState);\n                        }\n                        else {\n                            windowObjectReference.focus();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    function handleHashChange(event) {\n        console.log('hash change');\n        console.log(event);\n        // if (event.data?.notion_oauth_code && event.origin === window.origin) {\n        //     console.log(event.data)\n        //     setAuthCode(event.data.notion_oauth_code);\n        // }\n    }\n    function handlePopState(event) {\n        console.log('pop state');\n        console.log(event);\n        // if (event.data?.notion_oauth_code && event.origin === window.origin) {\n        //     console.log(event.data)\n        //     setAuthCode(event.data.notion_oauth_code);\n        // }\n    }\n    useEffect(function () {\n        // handlePopState({} as PopStateEvent)\n        console.log(\"hello\");\n        // window.addEventListener('hashchange', handleHashChange);\n        // window.addEventListener('popstate', handlePopState);\n        return function () {\n            // window.removeEventListener('hashchange', handleHashChange);\n            // window.removeEventListener('popstate', handlePopState);\n            //   window.removeEventListener('hashchange', handleOAuthMessage);\n        };\n    }, []);\n    return { authorize: authorize, authCode: authCode };\n}\nfunction authorizeConnection(auth_code, connector_id, connection_id, public_key) {\n    return __awaiter(this, void 0, void 0, function () {\n        var baseUrl, url, payload, response, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    baseUrl = \"http://localhost:8080\";\n                    url = baseUrl + '/add-oauth-connection';\n                    payload = {\n                        connection_id: connection_id,\n                        connector_id: connector_id\n                    };\n                    if (auth_code) {\n                        payload.auth_code = auth_code;\n                    }\n                    return [4 /*yield*/, fetch(url, {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json', 'Authorization': \"Bearer \".concat(public_key) },\n                            body: JSON.stringify(payload),\n                        })];\n                case 1:\n                    response = _a.sent();\n                    if (!response.ok) {\n                        throw new Error(\"Authorization failed with status: \".concat(response.status));\n                    }\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    data = _a.sent();\n                    return [2 /*return*/, data.result];\n            }\n        });\n    });\n}\n","references":["/Users/ayanbandyopadhyay/Desktop/sidekick-connectors/sidekick-client/sidekick-web/node_modules/@types/react/ts5.0/index.d.ts"],"dts":{"name":"/Users/ayanbandyopadhyay/Desktop/sidekick-connectors/sidekick-client/sidekick-web/dist/sidekick.d.ts","writeByteOrderMark":false,"text":"export declare function useNotionOAuth(connector_id: string, connection_id: string, public_key: string): {\n    authorize: () => Promise<void>;\n    authCode: string | null;\n};\n"}}
