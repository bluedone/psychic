[
  {
    "title": "Developer's guide to Qdrant",
    "source": "https://github.com/qdrant/qdrant/tree/master/docs/DEVELOPMENT.md",
    "content": "Developer's guide to Qdrant\nProfiling\nThere are several benchmarks implemented in Qdrant. Benchmarks are not included in CI/CD and might take some time to execute.\nSo the expected approach to benchmarking is to run only ones which might be affected by your changes.\nTo run benchmark, use the following command inside a related sub-crate:\n`bash\ncargo bench --bench name_of_banchmark`\nIn this case you will see the execution timings and, if you launched this bench earlier, the difference in execution time.\nExample output:\n`scoring-vector/basic-score-point                                                                            \n                        time:   [111.81 us 112.07 us 112.31 us]\n                        change: [+19.567% +20.454% +21.404%] (p = 0.00 < 0.05)\n                        Performance has regressed.\nFound 9 outliers among 100 measurements (9.00%)\n  3 (3.00%) low severe\n  3 (3.00%) low mild\n  2 (2.00%) high mild\n  1 (1.00%) high severe\nscoring-vector/basic-score-point-10x                                                                            \n                        time:   [111.86 us 112.44 us 113.04 us]\n                        change: [-1.6120% -0.5554% +0.5103%] (p = 0.32 > 0.05)\n                        No change in performance detected.\nFound 1 outliers among 100 measurements (1.00%)\n  1 (1.00%) high mild`\nFlameGraph and call-graph visualisation\nTo run benchmarks with profiler to generate FlameGraph - use the following command:\n`bash\ncargo bench --bench name_of_banchmark -- --profile-time=60`\nThis command will run each benchmark iterator for `60` seconds and generate FlameGraph svg along with profiling records file.\nThese records could later be used to generate visualisation of the call-graph.\n\nUse pprof and the following command to generate `svg` with a call graph:\n`bash\n~/go/bin/pprof -output=profile.svg -svg ${qdrant_root}/target/criterion/${benchmark_name}/${function_name}/profile/profile.pb`\n\nAPI changes\nREST\nQdrant uses the openapi specification to document its API.\nThis means changes to the API must be followed by changes to the specification.\nHere is a quick step-by-step guide:\n\ncode endpoints and model in Rust\nchange specs in `/openapi/*ytt.yaml`\nadd new schema definitions to `src/schema_generator.rs`\nrun `/tools/generate_openapi_models.sh` to generate specs\nupdate integration tests `openapi/tests/openapi_integration` and run them with `./tests/openapi_integration_test.sh`\nexpose file by starting an HTTP server, for instance `python -m http.server`, in `/docs/redoc`\nvalidate specs by browsing redoc on `http://localhost:8000/?v=master`\nvalidate `openapi-merged.yaml` using swagger editor\n\ngRPC\nQdrant uses tonic to serve gRPC traffic.\nOur protocol buffers are defined in `lib/api/src/grpc/proto/*.proto`\n\ndefine request and response types using protocol buffers (use oneOf for enums payloads)\nspecify RPC methods inside the service definition using protocol buffers\n`cargo build` will generate the struct definitions and a service trait\nimplement the service trait in Rust\nstart server `cargo run --bin qdrant`\nrun integration test `./tests/basic_grpc_test.sh`\ngenerate docs `./tools/generate_grpc_docs.sh`\n",
    "tag": "qdrant"
  },
  {
    "title": "Protocol Documentation",
    "source": "https://github.com/qdrant/qdrant/tree/master/docs/grpc/docs.md",
    "content": "Protocol Documentation\n\nTable of Contents\n\n\ncollections.proto\n\nAliasDescription\nAliasOperations\nChangeAliases\nCollectionConfig\nCollectionDescription\nCollectionInfo\nCollectionInfo.PayloadSchemaEntry\nCollectionOperationResponse\nCollectionParams\nCollectionParamsDiff\nCreateAlias\nCreateCollection\nDeleteAlias\nDeleteCollection\nGetCollectionInfoRequest\nGetCollectionInfoResponse\nHnswConfigDiff\nListAliasesRequest\nListAliasesResponse\nListCollectionAliasesRequest\nListCollectionsRequest\nListCollectionsResponse\nOptimizerStatus\nOptimizersConfigDiff\nPayloadIndexParams\nPayloadSchemaInfo\nRenameAlias\nTextIndexParams\nUpdateCollection\nVectorParams\nVectorParamsMap\nVectorParamsMap.MapEntry\nVectorsConfig\n\nWalConfigDiff\n\n\nCollectionStatus\n\nDistance\nPayloadSchemaType\nTokenizerType\n\n\n\ncollections_service.proto\n\nCollections\n\n\n\njson_with_int.proto\n\nListValue\nStruct\nStruct.FieldsEntry\n\nValue\n\n\nNullValue\n\n\n\n\npoints.proto\n\nBatchResult\nClearPayloadPoints\nCondition\nCountPoints\nCountResponse\nCountResult\nCreateFieldIndexCollection\nDeleteFieldIndexCollection\nDeletePayloadPoints\nDeletePoints\nFieldCondition\nFilter\nGeoBoundingBox\nGeoPoint\nGeoRadius\nGetPoints\nGetResponse\nHasIdCondition\nIsEmptyCondition\nLookupLocation\nMatch\nNamedVectors\nNamedVectors.VectorsEntry\nPayloadExcludeSelector\nPayloadIncludeSelector\nPointId\nPointStruct\nPointStruct.PayloadEntry\nPointsIdsList\nPointsOperationResponse\nPointsSelector\nRange\nReadConsistency\nRecommendBatchPoints\nRecommendBatchResponse\nRecommendPoints\nRecommendResponse\nRetrievedPoint\nRetrievedPoint.PayloadEntry\nScoredPoint\nScoredPoint.PayloadEntry\nScrollPoints\nScrollResponse\nSearchBatchPoints\nSearchBatchResponse\nSearchParams\nSearchPoints\nSearchResponse\nSetPayloadPoints\nSetPayloadPoints.PayloadEntry\nUpdateResult\nUpsertPoints\nValuesCount\nVector\nVectors\nVectorsSelector\nWithPayloadSelector\nWithVectorsSelector\n\nWriteOrdering\n\n\nFieldType\n\nReadConsistencyType\nUpdateStatus\nWriteOrderingType\n\n\n\npoints_service.proto\n\nPoints\n\n\n\nqdrant.proto\n\nHealthCheckReply\n\nHealthCheckRequest\n\n\nQdrant\n\n\n\n\nsnapshots_service.proto\n\nCreateFullSnapshotRequest\nCreateSnapshotRequest\nCreateSnapshotResponse\nDeleteFullSnapshotRequest\nDeleteSnapshotRequest\nDeleteSnapshotResponse\nListFullSnapshotsRequest\nListSnapshotsRequest\nListSnapshotsResponse\n\nSnapshotDescription\n\n\nSnapshots\n\n\n\n\nScalar Value Types\n\n\n\nTop\ncollections.proto\n\nAliasDescription\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| alias_name | string |  | Name of the alias |\n| collection_name | string |  | Name of the collection |\n\nAliasOperations\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| create_alias | CreateAlias |  |  |\n| rename_alias | RenameAlias |  |  |\n| delete_alias | DeleteAlias |  |  |\n\nChangeAliases\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| actions | AliasOperations | repeated | List of actions |\n| timeout | uint64 | optional | Wait timeout for operation commit in seconds, if not specified - default value will be supplied |\n\nCollectionConfig\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| params | CollectionParams |  | Collection parameters |\n| hnsw_config | HnswConfigDiff |  | Configuration of vector index |\n| optimizer_config | OptimizersConfigDiff |  | Configuration of the optimizers |\n| wal_config | WalConfigDiff |  | Configuration of the Write-Ahead-Log |\n\nCollectionDescription\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| name | string |  | Name of the collection |\n\nCollectionInfo\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| status | CollectionStatus |  | operating condition of the collection |\n| optimizer_status | OptimizerStatus |  | status of collection optimizers |\n| vectors_count | uint64 |  | number of vectors in the collection |\n| segments_count | uint64 |  | Number of independent segments |\n| config | CollectionConfig |  | Configuration |\n| payload_schema | CollectionInfo.PayloadSchemaEntry | repeated | Collection data types |\n| points_count | uint64 |  | number of points in the collection |\n| indexed_vectors_count | uint64 | optional | number of indexed vectors in the collection. |\n\nCollectionInfo.PayloadSchemaEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | PayloadSchemaInfo |  |  |\n\nCollectionOperationResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | bool |  | if operation made changes |\n| time | double |  | Time spent to process |\n\nCollectionParams\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| shard_number | uint32 |  | Number of shards in collection |\n| on_disk_payload | bool |  | If true - point's payload will not be stored in memory |\n| vectors_config | VectorsConfig | optional | Configuration for vectors |\n| replication_factor | uint32 | optional | Number of replicas of each shard that network tries to maintain |\n| write_consistency_factor | uint32 | optional | How many replicas should apply the operation for us to consider it successful |\n\nCollectionParamsDiff\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| replication_factor | uint32 | optional | Number of replicas of each shard that network tries to maintain |\n| write_consistency_factor | uint32 | optional | How many replicas should apply the operation for us to consider it successful |\n\nCreateAlias\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| alias_name | string |  | New name of the alias |\n\nCreateCollection\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| hnsw_config | HnswConfigDiff | optional | Configuration of vector index |\n| wal_config | WalConfigDiff | optional | Configuration of the Write-Ahead-Log |\n| optimizers_config | OptimizersConfigDiff | optional | Configuration of the optimizers |\n| shard_number | uint32 | optional | Number of shards in the collection, default = 1 |\n| on_disk_payload | bool | optional | If true - point's payload will not be stored in memory |\n| timeout | uint64 | optional | Wait timeout for operation commit in seconds, if not specified - default value will be supplied |\n| vectors_config | VectorsConfig | optional | Configuration for vectors |\n| replication_factor | uint32 | optional | Number of replicas of each shard that network tries to maintain, default = 1 |\n| write_consistency_factor | uint32 | optional | How many replicas should apply the operation for us to consider it successful, default = 1 |\n| init_from_collection | string | optional | Specify name of the other collection to copy data from |\n\nDeleteAlias\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| alias_name | string |  | Name of the alias |\n\nDeleteCollection\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| timeout | uint64 | optional | Wait timeout for operation commit in seconds, if not specified - default value will be supplied |\n\nGetCollectionInfoRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n\nGetCollectionInfoResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | CollectionInfo |  |  |\n| time | double |  | Time spent to process |\n\nHnswConfigDiff\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| m | uint64 | optional | Number of edges per node in the index graph. Larger the value - more accurate the search, more space required. |\n| ef_construct | uint64 | optional | Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index. |\n| full_scan_threshold | uint64 | optional | Minimal size (in KiloBytes) of vectors for additional payload-based indexing. If payload chunk is smaller than `full_scan_threshold` additional indexing won't be used - in this case full-scan search should be preferred by query planner and additional indexing is not required. Note: 1Kb = 1 vector of size 256 |\n| max_indexing_threads | uint64 | optional | Number of parallel threads used for background index building. If 0 - auto selection. |\n| on_disk | bool | optional | Store HNSW index on disk. If set to false, index will be stored in RAM. |\n| payload_m | uint64 | optional | Number of additional payload-aware links per node in the index graph. If not set - regular M parameter will be used. |\n\nListAliasesRequest\n\nListAliasesResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| aliases | AliasDescription | repeated |  |\n| time | double |  | Time spent to process |\n\nListCollectionAliasesRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n\nListCollectionsRequest\n\nListCollectionsResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collections | CollectionDescription | repeated |  |\n| time | double |  | Time spent to process |\n\nOptimizerStatus\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| ok | bool |  |  |\n| error | string |  |  |\n\nOptimizersConfigDiff\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| deleted_threshold | double | optional | The minimal fraction of deleted vectors in a segment, required to perform segment optimization |\n| vacuum_min_vector_number | uint64 | optional | The minimal number of vectors in a segment, required to perform segment optimization |\n| default_segment_number | uint64 | optional | Target amount of segments optimizer will try to keep. Real amount of segments may vary depending on multiple parameters:\n\nAmount of stored points. - Current write RPS.\n\nIt is recommended to select default number of segments as a factor of the number of search threads, so that each segment would be handled evenly by one of the threads. |\n| max_segment_size | uint64 | optional | Do not create segments larger this size (in KiloBytes). Large segments might require disproportionately long indexation times, therefore it makes sense to limit the size of segments.\nIf indexation speed have more priority for your - make this parameter lower. If search speed is more important - make this parameter higher. Note: 1Kb = 1 vector of size 256 |\n| memmap_threshold | uint64 | optional | Maximum size (in KiloBytes) of vectors to store in-memory per segment. Segments larger than this threshold will be stored as read-only memmaped file. To enable memmap storage, lower the threshold Note: 1Kb = 1 vector of size 256 |\n| indexing_threshold | uint64 | optional | Maximum size (in KiloBytes) of vectors allowed for plain index. Default value based on https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md Note: 1Kb = 1 vector of size 256 |\n| flush_interval_sec | uint64 | optional | Interval between forced flushes. |\n| max_optimization_threads | uint64 | optional | Max number of threads, which can be used for optimization. If 0 - `NUM_CPU - 1` will be used |\n\nPayloadIndexParams\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| text_index_params | TextIndexParams |  | Parameters for text index |\n\nPayloadSchemaInfo\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| data_type | PayloadSchemaType |  | Field data type |\n| params | PayloadIndexParams | optional | Field index parameters |\n| points | uint64 | optional | Number of points indexed within this field indexed |\n\nRenameAlias\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| old_alias_name | string |  | Name of the alias to rename |\n| new_alias_name | string |  | Name of the alias |\n\nTextIndexParams\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| tokenizer | TokenizerType |  | Tokenizer type |\n| lowercase | bool | optional | If true - all tokens will be lowercased |\n| min_token_len | uint64 | optional | Minimal token length |\n| max_token_len | uint64 | optional | Maximal token length |\n\nUpdateCollection\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| optimizers_config | OptimizersConfigDiff | optional | New configuration parameters for the collection |\n| timeout | uint64 | optional | Wait timeout for operation commit in seconds, if not specified - default value will be supplied |\n| params | CollectionParamsDiff | optional | New configuration parameters for the collection |\n\nVectorParams\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| size | uint64 |  | Size of the vectors |\n| distance | Distance |  | Distance function used for comparing vectors |\n\nVectorParamsMap\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| map | VectorParamsMap.MapEntry | repeated |  |\n\nVectorParamsMap.MapEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | VectorParams |  |  |\n\nVectorsConfig\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| params | VectorParams |  |  |\n| params_map | VectorParamsMap |  |  |\n\nWalConfigDiff\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| wal_capacity_mb | uint64 | optional | Size of a single WAL block file |\n| wal_segments_ahead | uint64 | optional | Number of segments to create in advance |\n\nCollectionStatus\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownCollectionStatus | 0 |  |\n| Green | 1 | All segments are ready |\n| Yellow | 2 | Optimization in process |\n| Red | 3 | Something went wrong |\n\nDistance\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownDistance | 0 |  |\n| Cosine | 1 |  |\n| Euclid | 2 |  |\n| Dot | 3 |  |\n\nPayloadSchemaType\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownType | 0 |  |\n| Keyword | 1 |  |\n| Integer | 2 |  |\n| Float | 3 |  |\n| Geo | 4 |  |\n| Text | 5 |  |\n\nTokenizerType\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Unknown | 0 |  |\n| Prefix | 1 |  |\n| Whitespace | 2 |  |\n| Word | 3 |  |\n\nTop\ncollections_service.proto\n\nCollections\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n| Get | GetCollectionInfoRequest | GetCollectionInfoResponse | Get detailed information about specified existing collection |\n| List | ListCollectionsRequest | ListCollectionsResponse | Get list name of all existing collections |\n| Create | CreateCollection | CollectionOperationResponse | Create new collection with given parameters |\n| Update | UpdateCollection | CollectionOperationResponse | Update parameters of the existing collection |\n| Delete | DeleteCollection | CollectionOperationResponse | Drop collection and all associated data |\n| UpdateAliases | ChangeAliases | CollectionOperationResponse | Update Aliases of the existing collection |\n| ListCollectionAliases | ListCollectionAliasesRequest | ListAliasesResponse | Get list of all aliases for a collection |\n| ListAliases | ListAliasesRequest | ListAliasesResponse | Get list of all aliases for all existing collections |\n\nTop\njson_with_int.proto\n\nListValue\n`ListValue` is a wrapper around a repeated field of values.\nThe JSON representation for `ListValue` is JSON array.\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| values | Value | repeated | Repeated field of dynamically typed values. |\n\nStruct\n`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\nThe JSON representation for `Struct` is JSON object.\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| fields | Struct.FieldsEntry | repeated | Unordered map of dynamically typed values. |\n\nStruct.FieldsEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Value |  |  |\n\nValue\n`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of that\nvariants, absence of any variant indicates an error.\nThe JSON representation for `Value` is JSON value.\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| null_value | NullValue |  | Represents a null value. |\n| double_value | double |  | Represents a double value. |\n| integer_value | int64 |  | Represents an integer value |\n| string_value | string |  | Represents a string value. |\n| bool_value | bool |  | Represents a boolean value. |\n| struct_value | Struct |  | Represents a structured value. |\n| list_value | ListValue |  | Represents a repeated `Value`. |\n\nNullValue\n`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\nThe JSON representation for `NullValue` is JSON `null`.\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| NULL_VALUE | 0 | Null value. |\n\nTop\npoints.proto\n\nBatchResult\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | ScoredPoint | repeated |  |\n\nClearPayloadPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| points | PointsSelector |  | Affected points |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nCondition\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| field | FieldCondition |  |  |\n| is_empty | IsEmptyCondition |  |  |\n| has_id | HasIdCondition |  |  |\n| filter | Filter |  |  |\n\nCountPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| filter | Filter |  | Filter conditions - return only those points that satisfy the specified conditions |\n| exact | bool | optional | If `true` - return exact count, if `false` - return approximate count |\n\nCountResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | CountResult |  |  |\n| time | double |  | Time spent to process |\n\nCountResult\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| count | uint64 |  |  |\n\nCreateFieldIndexCollection\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| field_name | string |  | Field name to index |\n| field_type | FieldType | optional | Field type. |\n| field_index_params | PayloadIndexParams | optional | Payload index params. |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nDeleteFieldIndexCollection\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| field_name | string |  | Field name to delete |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nDeletePayloadPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| keys | string | repeated | List of keys to delete |\n| points_selector | PointsSelector | optional | Affected points |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nDeletePoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| points | PointsSelector |  | Affected points |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nFieldCondition\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| match | Match |  | Check if point has field with a given value |\n| range | Range |  | Check if points value lies in a given range |\n| geo_bounding_box | GeoBoundingBox |  | Check if points geo location lies in a given area |\n| geo_radius | GeoRadius |  | Check if geo point is within a given radius |\n| values_count | ValuesCount |  | Check number of values for a specific field |\n\nFilter\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| should | Condition | repeated | At least one of those conditions should match |\n| must | Condition | repeated | All conditions must match |\n| must_not | Condition | repeated | All conditions must NOT match |\n\nGeoBoundingBox\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| top_left | GeoPoint |  | north-west corner |\n| bottom_right | GeoPoint |  | south-east corner |\n\nGeoPoint\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| lon | double |  |  |\n| lat | double |  |  |\n\nGeoRadius\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| center | GeoPoint |  | Center of the circle |\n| radius | float |  | In meters |\n\nGetPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| ids | PointId | repeated | List of points to retrieve |\n| with_payload | WithPayloadSelector |  | Options for specifying which payload to include or not |\n| with_vectors | WithVectorsSelector | optional | Options for specifying which vectors to include into response |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nGetResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | RetrievedPoint | repeated |  |\n| time | double |  | Time spent to process |\n\nHasIdCondition\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| has_id | PointId | repeated |  |\n\nIsEmptyCondition\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n\nLookupLocation\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  |  |\n| vector_name | string | optional | Which vector to use for search, if not specified - use default vector |\n\nMatch\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| keyword | string |  | Match string keyword |\n| integer | int64 |  | Match integer |\n| boolean | bool |  | Match boolean |\n| text | string |  | Match text |\n\nNamedVectors\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| vectors | NamedVectors.VectorsEntry | repeated |  |\n\nNamedVectors.VectorsEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Vector |  |  |\n\nPayloadExcludeSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| fields | string | repeated | List of payload keys to exclude from the result |\n\nPayloadIncludeSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| fields | string | repeated | List of payload keys to include into result |\n\nPointId\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| num | uint64 |  | Numerical ID of the point |\n| uuid | string |  | UUID |\n\nPointStruct\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| id | PointId |  |  |\n| payload | PointStruct.PayloadEntry | repeated |  |\n| vectors | Vectors | optional |  |\n\nPointStruct.PayloadEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Value |  |  |\n\nPointsIdsList\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| ids | PointId | repeated |  |\n\nPointsOperationResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | UpdateResult |  |  |\n| time | double |  | Time spent to process |\n\nPointsSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| points | PointsIdsList |  |  |\n| filter | Filter |  |  |\n\nRange\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| lt | double | optional |  |\n| gt | double | optional |  |\n| gte | double | optional |  |\n| lte | double | optional |  |\n\nReadConsistency\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| type | ReadConsistencyType |  | Common read consistency configurations |\n| factor | uint64 |  | Send request to a specified number of nodes, and return points which are present on all of them |\n\nRecommendBatchPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| recommend_points | RecommendPoints | repeated |  |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nRecommendBatchResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | BatchResult | repeated |  |\n| time | double |  | Time spent to process |\n\nRecommendPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| positive | PointId | repeated | Look for vectors closest to those |\n| negative | PointId | repeated | Try to avoid vectors like this |\n| filter | Filter |  | Filter conditions - return only those points that satisfy the specified conditions |\n| limit | uint64 |  | Max number of result |\n| with_payload | WithPayloadSelector |  | Options for specifying which payload to include or not |\n| params | SearchParams |  | Search config |\n| score_threshold | float | optional | If provided - cut off results with worse scores |\n| offset | uint64 | optional | Offset of the result |\n| using | string | optional | Define which vector to use for recommendation, if not specified - default vector |\n| with_vectors | WithVectorsSelector | optional | Options for specifying which vectors to include into response |\n| lookup_from | LookupLocation | optional | Name of the collection to use for points lookup, if not specified - use current collection |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nRecommendResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | ScoredPoint | repeated |  |\n| time | double |  | Time spent to process |\n\nRetrievedPoint\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| id | PointId |  |  |\n| payload | RetrievedPoint.PayloadEntry | repeated |  |\n| vectors | Vectors | optional |  |\n\nRetrievedPoint.PayloadEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Value |  |  |\n\nScoredPoint\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| id | PointId |  | Point id |\n| payload | ScoredPoint.PayloadEntry | repeated | Payload |\n| score | float |  | Similarity score |\n| version | uint64 |  | Last update operation applied to this point |\n| vectors | Vectors | optional | Vectors to search |\n\nScoredPoint.PayloadEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Value |  |  |\n\nScrollPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  |  |\n| filter | Filter |  | Filter conditions - return only those points that satisfy the specified conditions |\n| offset | PointId | optional | Start with this ID |\n| limit | uint32 | optional | Max number of result |\n| with_payload | WithPayloadSelector |  | Options for specifying which payload to include or not |\n| with_vectors | WithVectorsSelector | optional | Options for specifying which vectors to include into response |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nScrollResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| next_page_offset | PointId | optional | Use this offset for the next query |\n| result | RetrievedPoint | repeated |  |\n| time | double |  | Time spent to process |\n\nSearchBatchPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| search_points | SearchPoints | repeated |  |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nSearchBatchResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | BatchResult | repeated |  |\n| time | double |  | Time spent to process |\n\nSearchParams\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| hnsw_ef | uint64 | optional | Params relevant to HNSW index. Size of the beam in a beam-search. Larger the value - more accurate the result, more time required for search. |\n| exact | bool | optional | Search without approximation. If set to true, search may run long but with exact results. |\n\nSearchPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| vector | float | repeated | vector |\n| filter | Filter |  | Filter conditions - return only those points that satisfy the specified conditions |\n| limit | uint64 |  | Max number of result |\n| with_payload | WithPayloadSelector |  | Options for specifying which payload to include or not |\n| params | SearchParams |  | Search config |\n| score_threshold | float | optional | If provided - cut off results with worse scores |\n| offset | uint64 | optional | Offset of the result |\n| vector_name | string | optional | Which vector to use for search, if not specified - use default vector |\n| with_vectors | WithVectorsSelector | optional | Options for specifying which vectors to include into response |\n| read_consistency | ReadConsistency | optional | Options for specifying read consistency guarantees |\n\nSearchResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | ScoredPoint | repeated |  |\n| time | double |  | Time spent to process |\n\nSetPayloadPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| payload | SetPayloadPoints.PayloadEntry | repeated | New payload values |\n| points_selector | PointsSelector | optional | Affected points |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nSetPayloadPoints.PayloadEntry\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | string |  |  |\n| value | Value |  |  |\n\nUpdateResult\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| operation_id | uint64 |  | Number of operation |\n| status | UpdateStatus |  | Operation status |\n\nUpsertPoints\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | name of the collection |\n| wait | bool | optional | Wait until the changes have been applied? |\n| points | PointStruct | repeated |  |\n| ordering | WriteOrdering | optional | Write ordering guarantees |\n\nValuesCount\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| lt | uint64 | optional |  |\n| gt | uint64 | optional |  |\n| gte | uint64 | optional |  |\n| lte | uint64 | optional |  |\n\nVector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| data | float | repeated |  |\n\nVectors\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| vector | Vector |  |  |\n| vectors | NamedVectors |  |  |\n\nVectorsSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| names | string | repeated | List of vectors to include into result |\n\nWithPayloadSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| enable | bool |  | If `true` - return all payload, if `false` - none |\n| include | PayloadIncludeSelector |  |  |\n| exclude | PayloadExcludeSelector |  |  |\n\nWithVectorsSelector\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| enable | bool |  | If `true` - return all vectors, if `false` - none |\n| include | VectorsSelector |  | List of payload keys to include into result |\n\nWriteOrdering\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| type | WriteOrderingType |  | Write ordering guarantees |\n\nFieldType\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| FieldTypeKeyword | 0 |  |\n| FieldTypeInteger | 1 |  |\n| FieldTypeFloat | 2 |  |\n| FieldTypeGeo | 3 |  |\n| FieldTypeText | 4 |  |\n\nReadConsistencyType\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| All | 0 | Send request to all nodes and return points which are present on all of them |\n| Majority | 1 | Send requests to all nodes and return points which are present on majority of them |\n| Quorum | 2 | Send requests to half + 1 nodes, return points which are present on all of them |\n\nUpdateStatus\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownUpdateStatus | 0 |  |\n| Acknowledged | 1 | Update is received, but not processed yet |\n| Completed | 2 | Update is applied and ready for search |\n\nWriteOrderingType\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Weak | 0 | Write operations may be reordered, works faster, default |\n| Medium | 1 | Write operations go through dynamically selected leader, may be inconsistent for a short period of time in case of leader change |\n| Strong | 2 | Write operations go through the permanent leader, consistent, but may be unavailable if leader is down |\n\nTop\npoints_service.proto\n\nPoints\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n| Upsert | UpsertPoints | PointsOperationResponse | Perform insert + updates on points. If point with given ID already exists - it will be overwritten. |\n| Delete | DeletePoints | PointsOperationResponse | Delete points |\n| Get | GetPoints | GetResponse | Retrieve points |\n| SetPayload | SetPayloadPoints | PointsOperationResponse | Set payload for points |\n| OverwritePayload | SetPayloadPoints | PointsOperationResponse | Overwrite payload for points |\n| DeletePayload | DeletePayloadPoints | PointsOperationResponse | Delete specified key payload for points |\n| ClearPayload | ClearPayloadPoints | PointsOperationResponse | Remove all payload for specified points |\n| CreateFieldIndex | CreateFieldIndexCollection | PointsOperationResponse | Create index for field in collection |\n| DeleteFieldIndex | DeleteFieldIndexCollection | PointsOperationResponse | Delete field index for collection |\n| Search | SearchPoints | SearchResponse | Retrieve closest points based on vector similarity and given filtering conditions |\n| SearchBatch | SearchBatchPoints | SearchBatchResponse | Retrieve closest points based on vector similarity and given filtering conditions |\n| Scroll | ScrollPoints | ScrollResponse | Iterate over all or filtered points points |\n| Recommend | RecommendPoints | RecommendResponse | Look for the points which are closer to stored positive examples and at the same time further to negative examples. |\n| RecommendBatch | RecommendBatchPoints | RecommendBatchResponse | Look for the points which are closer to stored positive examples and at the same time further to negative examples. |\n| Count | CountPoints | CountResponse | Count points in collection with given filtering conditions |\n\nTop\nqdrant.proto\n\nHealthCheckReply\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| title | string |  |  |\n| version | string |  |  |\n\nHealthCheckRequest\n\nQdrant\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n| HealthCheck | HealthCheckRequest | HealthCheckReply |  |\n\nTop\nsnapshots_service.proto\n\nCreateFullSnapshotRequest\n\nCreateSnapshotRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n\nCreateSnapshotResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| snapshot_description | SnapshotDescription |  |  |\n| time | double |  | Time spent to process |\n\nDeleteFullSnapshotRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| snapshot_name | string |  | Name of the full snapshot |\n\nDeleteSnapshotRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n| snapshot_name | string |  | Name of the collection snapshot |\n\nDeleteSnapshotResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| time | double |  | Time spent to process |\n\nListFullSnapshotsRequest\n\nListSnapshotsRequest\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | string |  | Name of the collection |\n\nListSnapshotsResponse\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| snapshot_descriptions | SnapshotDescription | repeated |  |\n| time | double |  | Time spent to process |\n\nSnapshotDescription\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| name | string |  | Name of the snapshot |\n| creation_time | google.protobuf.Timestamp |  | Creation time of the snapshot |\n| size | int64 |  | Size of the snapshot in bytes |\n\nSnapshots\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n| Create | CreateSnapshotRequest | CreateSnapshotResponse | Create collection snapshot |\n| List | ListSnapshotsRequest | ListSnapshotsResponse | List collection snapshots |\n| Delete | DeleteSnapshotRequest | DeleteSnapshotResponse | Delete collection snapshots |\n| CreateFull | CreateFullSnapshotRequest | CreateSnapshotResponse | Create full storage snapshot |\n| ListFull | ListFullSnapshotsRequest | ListSnapshotsResponse | List full storage snapshots |\n| DeleteFull | DeleteFullSnapshotRequest | DeleteSnapshotResponse | List full storage snapshots |\nScalar Value Types\n| .proto Type | Notes | C++ | Java | Python | Go | C# | PHP | Ruby |\n| ----------- | ----- | --- | ---- | ------ | -- | -- | --- | ---- |\n|  double |  | double | double | float | float64 | double | float | Float |\n|  float |  | float | float | float | float32 | float | float | Float |\n|  int32 | Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. | int32 | int | int | int32 | int | integer | Bignum or Fixnum (as required) |\n|  int64 | Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. | int64 | long | int/long | int64 | long | integer/string | Bignum |\n|  uint32 | Uses variable-length encoding. | uint32 | int | int/long | uint32 | uint | integer | Bignum or Fixnum (as required) |\n|  uint64 | Uses variable-length encoding. | uint64 | long | int/long | uint64 | ulong | integer/string | Bignum or Fixnum (as required) |\n|  sint32 | Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. | int32 | int | int | int32 | int | integer | Bignum or Fixnum (as required) |\n|  sint64 | Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. | int64 | long | int/long | int64 | long | integer/string | Bignum |\n|  fixed32 | Always four bytes. More efficient than uint32 if values are often greater than 2^28. | uint32 | int | int | uint32 | uint | integer | Bignum or Fixnum (as required) |\n|  fixed64 | Always eight bytes. More efficient than uint64 if values are often greater than 2^56. | uint64 | long | int/long | uint64 | ulong | integer/string | Bignum |\n|  sfixed32 | Always four bytes. | int32 | int | int | int32 | int | integer | Bignum or Fixnum (as required) |\n|  sfixed64 | Always eight bytes. | int64 | long | int/long | int64 | long | integer/string | Bignum |\n|  bool |  | bool | boolean | boolean | bool | bool | boolean | TrueClass/FalseClass |\n|  string | A string must always contain UTF-8 encoded or 7-bit ASCII text. | string | String | str/unicode | string | string | string | String (UTF-8) |\n|  bytes | May contain any arbitrary sequence of bytes. | string | ByteString | str | []byte | ByteString | string | String (ASCII-8BIT) |",
    "tag": "qdrant"
  },
  {
    "title": "Qdrant 2023 Roadmap",
    "source": "https://github.com/qdrant/qdrant/tree/master/docs/roadmap",
    "content": "Qdrant 2023 Roadmap\nHi!\nThis document is our plan for Qdrant development in 2023.\nPrevious year roadmap is available here:\n\nRoadmap 2022\n\nGoals of the release:\n\nMaintain easy upgrades - we plan to keep backward compatibility for at least one major version back. \nThat means that you can upgrade Qdrant without any downtime and without any changes in your client code within one major version.\nStorage should be compatible between any two consequent versions, so you can upgrade Qdrant with automatic data migration between consecutive versions.\nMake billion-scale serving cheap - qdrant already can serve billions of vectors, but we want to make it even more affordable.\nEasy scaling - our plan is to make it easy to dynamically scale Qdrant, so you could go from 1 to 1B vectors seamlessly.\nVarious similarity search scenarios - we want to support more similarity search scenarios, e.g. sparse search, grouping requests, diverse search, etc.\n\nHow to contribute\nIf you are a Qdrant user - Data Scientist, ML Engineer, or MLOps, the best contribution would be the feedback on your experience with Qdrant.\nLet us know whenever you have a problem, face an unexpected behavior, or see a lack of documentation.\nYou can do it in any convenient way - create an issue, start a discussion, or drop up a message.\nIf you use Qdrant or Metric Learning in your projects, we'd love to hear your story! Feel free to share articles and demos in our community.\nFor those familiar with Rust - check out our contribution guide.\nIf you have problems with code or architecture understanding - reach us at any time.\nFeeling confident and want to contribute more? - Come to work with us!\nMilestones\n\n:atom_symbol: Quantization support\n[ ] Scalar quantization f32 -> u8 (4x compression)\n[ ] Advanced quantization (8x and 16x compression)\n[ ] Support for binary vectors\n\n\n\n:arrow_double_up: Scalability\n[ ] Automatic replication factor adjustment\n[ ] Automatic shard distribution on cluster scaling\n[ ] Repartitioning support\n\n\n\n:eyes: Search scenarios\n[ ] Diversity search - search for vectors that are different from each other\n[ ] Sparse vectors search - search for vectors with a small number of non-zero values\n[ ] Grouping requests - search within payload-defined groups\n[ ] Different scenarios for recommendation API\n\n\n\nAdditionally\n[ ] Extend full-text filtering support\n[ ] Support for phrase queries\n[ ] Support for logical operators\n\n\n[ ] Simplify update of collection parameters\n",
    "tag": "qdrant"
  },
  {
    "title": "Roadmap 2022",
    "source": "https://github.com/qdrant/qdrant/tree/master/docs/roadmap/roadmap-2022.md",
    "content": "Roadmap 2022\nThis document describes what features and milestones was planned and achieved in 2022.\nThe main goals for the 2022 year were:\n\nMake API and Storage stable - ensure backward compatibility for at least one major version back.\nStarting from the release, breaking changes in API should only be done with a proper deprecation notice\nStorage should be compatible between any two consequent major versions\n\n\nAchieve horizontal scalability - distributed deployment able to serve billions of points\nEasy integration - make the user experience as smooth as possible\nResource efficiency - push Qdrant performance on the single machine to the limit\n\nMilestones\n\n:earth_americas: Distributed Deployment\n[x] Distributed querying\n[x] Integration of raft for distributed consistency\n[x] Sharding - group segments into shards\n[x] Cluster scaling\n[x] Replications - automatic segment replication between nodes in cluster\n\n\n\n\n\n:electric_plug: Integration & Interfaces\n[x] gPRC version of each REST API endpoint\n[x] Split REST Endpoints for better documentation and client generation\n\n\n\n\n\n\n:truck: Payload Processing\n\n[x] Support storing any JSON as a Payload\n[ ] ~~Support more payload types, e.g.~~\n~~Data-time~~\n\n\n[x] Support for `Null` values\n[x] Enable more types of filtering queries, e.g.\n[x] Filter by Score\n[x] Filter by number of stored elements\n[x] `isNull` or `isEmpty` query conditions\n\n\n\n\n\nAdditionally\n\n[x] Full-text filtering support\n[x] Multiple vectors per record support\n\n\n\n\n\n:racing_car: Performance improvements\n[x] Indexing of geo-payload\n[x] On the fly payload index\n[x] Multiprocessing segment optimization\n[x] Fine-tuned HNSW index configuration\n\n\n",
    "tag": "qdrant"
  }
]