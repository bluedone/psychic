import type { ComponentProps, FC, PropsWithChildren } from 'react';
import type { FlowbiteColors, FlowbitePositions, FlowbiteSizes } from '../Flowbite/FlowbiteTheme';
export interface FlowbiteAvatarTheme {
    base: string;
    bordered: string;
    img: {
        off: string;
        on: string;
        placeholder: string;
    };
    color: AvatarColors;
    rounded: string;
    size: AvatarSizes;
    stacked: string;
    status: {
        away: string;
        base: string;
        busy: string;
        offline: string;
        online: string;
    };
    statusPosition: FlowbitePositions;
    initials: {
        base: string;
        text: string;
    };
}
export interface AvatarColors extends Pick<FlowbiteColors, 'failure' | 'gray' | 'info' | 'pink' | 'purple' | 'success' | 'warning'> {
    [key: string]: string;
}
export interface AvatarSizes extends Pick<FlowbiteSizes, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> {
    [key: string]: string;
}
export interface AvatarProps extends PropsWithChildren<Omit<ComponentProps<'div'>, 'color'>> {
    alt?: string;
    bordered?: boolean;
    img?: string;
    color?: keyof AvatarColors;
    rounded?: boolean;
    size?: keyof AvatarSizes;
    stacked?: boolean;
    status?: 'away' | 'busy' | 'offline' | 'online';
    statusPosition?: keyof FlowbitePositions;
    placeholderInitials?: string;
}
export declare const Avatar: FC<AvatarProps> & {
    Group: FC<import("./AvatarGroup").AvatarGroupProps>;
    Counter: FC<import("./AvatarGroupCounter").AvatarGroupdCounterProps>;
};
