{
  "version": 3,
  "sources": ["../../svg-pan-zoom/src/uniwheel.js", "../../svg-pan-zoom/src/utilities.js", "../../svg-pan-zoom/src/svg-utilities.js", "../../svg-pan-zoom/src/control-icons.js", "../../svg-pan-zoom/src/shadow-viewport.js", "../../svg-pan-zoom/src/svg-pan-zoom.js", "../../svg-pan-zoom/src/browserify.js", "../../svgmap/dist/svgMap.min.js"],
  "sourcesContent": ["// uniwheel 0.1.2 (customized)\n// A unified cross browser mouse wheel event handler\n// https://github.com/teemualap/uniwheel\n\nmodule.exports = (function(){\n\n  //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n\n  var prefix = \"\", _addEventListener, _removeEventListener, support, fns = [];\n  var passiveOption = {passive: true};\n\n  // detect event model\n  if ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n    _removeEventListener = \"removeEventListener\";\n  } else {\n    _addEventListener = \"attachEvent\";\n    _removeEventListener = \"detachEvent\";\n    prefix = \"on\";\n  }\n\n  // detect available wheel event\n  support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n            \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\n  function createCallback(element,callback) {\n\n    var fn = function(originalEvent) {\n\n      !originalEvent && ( originalEvent = window.event );\n\n      // create a normalized event object\n      var event = {\n        // keep a ref to the original event object\n        originalEvent: originalEvent,\n        target: originalEvent.target || originalEvent.srcElement,\n        type: \"wheel\",\n        deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n        deltaX: 0,\n        delatZ: 0,\n        preventDefault: function() {\n          originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n        }\n      };\n\n      // calculate deltaY (and deltaX) according to the event\n      if ( support == \"mousewheel\" ) {\n        event.deltaY = - 1/40 * originalEvent.wheelDelta;\n        // Webkit also support wheelDeltaX\n        originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n      } else {\n        event.deltaY = originalEvent.detail;\n      }\n\n      // it's time to fire the callback\n      return callback( event );\n\n    };\n\n    fns.push({\n      element: element,\n      fn: fn,\n    });\n\n    return fn;\n  }\n\n  function getCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns[i].fn;\n      }\n    }\n    return function(){};\n  }\n\n  function removeCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns.splice(i,1);\n      }\n    }\n  }\n\n  function _addWheelListener(elem, eventName, callback, isPassiveListener ) {\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = createCallback(elem, callback);\n    }\n\n    elem[_addEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n  }\n\n  function _removeWheelListener(elem, eventName, callback, isPassiveListener ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = getCallback(elem);\n    }\n\n    elem[_removeEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n\n    removeCallback(elem);\n  }\n\n  function addWheelListener( elem, callback, isPassiveListener ) {\n    _addWheelListener(elem, support, callback, isPassiveListener );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _addWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener );\n    }\n  }\n\n  function removeWheelListener(elem, callback, isPassiveListener){\n    _removeWheelListener(elem, support, callback, isPassiveListener);\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _removeWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener);\n    }\n  }\n\n  return {\n    on: addWheelListener,\n    off: removeWheelListener\n  };\n\n})();\n", "module.exports = {\n  /**\n   * Extends an object\n   *\n   * @param  {Object} target object to extend\n   * @param  {Object} source object to take properties from\n   * @return {Object}        extended object\n   */\n  extend: function(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      // Go recursively\n      if (this.isObject(source[prop])) {\n        target[prop] = this.extend(target[prop], source[prop]);\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n    return target;\n  },\n\n  /**\n   * Checks if an object is a DOM element\n   *\n   * @param  {Object}  o HTML element or String\n   * @return {Boolean}   returns true if object is a DOM element\n   */\n  isElement: function(o) {\n    return (\n      o instanceof HTMLElement ||\n      o instanceof SVGElement ||\n      o instanceof SVGSVGElement || //DOM2\n      (o &&\n        typeof o === \"object\" &&\n        o !== null &&\n        o.nodeType === 1 &&\n        typeof o.nodeName === \"string\")\n    );\n  },\n\n  /**\n   * Checks if an object is an Object\n   *\n   * @param  {Object}  o Object\n   * @return {Boolean}   returns true if object is an Object\n   */\n  isObject: function(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n  },\n\n  /**\n   * Checks if variable is Number\n   *\n   * @param  {Integer|Float}  n\n   * @return {Boolean}   returns true if variable is Number\n   */\n  isNumber: function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  },\n\n  /**\n   * Search for an SVG element\n   *\n   * @param  {Object|String} elementOrSelector DOM Element or selector String\n   * @return {Object|Null}                   SVG or null\n   */\n  getSvg: function(elementOrSelector) {\n    var element, svg;\n\n    if (!this.isElement(elementOrSelector)) {\n      // If selector provided\n      if (\n        typeof elementOrSelector === \"string\" ||\n        elementOrSelector instanceof String\n      ) {\n        // Try to find the element\n        element = document.querySelector(elementOrSelector);\n\n        if (!element) {\n          throw new Error(\n            \"Provided selector did not find any elements. Selector: \" +\n              elementOrSelector\n          );\n          return null;\n        }\n      } else {\n        throw new Error(\"Provided selector is not an HTML object nor String\");\n        return null;\n      }\n    } else {\n      element = elementOrSelector;\n    }\n\n    if (element.tagName.toLowerCase() === \"svg\") {\n      svg = element;\n    } else {\n      if (element.tagName.toLowerCase() === \"object\") {\n        svg = element.contentDocument.documentElement;\n      } else {\n        if (element.tagName.toLowerCase() === \"embed\") {\n          svg = element.getSVGDocument().documentElement;\n        } else {\n          if (element.tagName.toLowerCase() === \"img\") {\n            throw new Error(\n              'Cannot script an SVG in an \"img\" element. Please use an \"object\" element or an in-line SVG.'\n            );\n          } else {\n            throw new Error(\"Cannot get SVG.\");\n          }\n          return null;\n        }\n      }\n    }\n\n    return svg;\n  },\n\n  /**\n   * Attach a given context to a function\n   * @param  {Function} fn      Function\n   * @param  {Object}   context Context\n   * @return {Function}           Function with certain context\n   */\n  proxy: function(fn, context) {\n    return function() {\n      return fn.apply(context, arguments);\n    };\n  },\n\n  /**\n   * Returns object type\n   * Uses toString that returns [object SVGPoint]\n   * And than parses object type from string\n   *\n   * @param  {Object} o Any object\n   * @return {String}   Object type\n   */\n  getType: function(o) {\n    return Object.prototype.toString\n      .apply(o)\n      .replace(/^\\[object\\s/, \"\")\n      .replace(/\\]$/, \"\");\n  },\n\n  /**\n   * If it is a touch event than add clientX and clientY to event object\n   *\n   * @param  {Event} evt\n   * @param  {SVGSVGElement} svg\n   */\n  mouseAndTouchNormalize: function(evt, svg) {\n    // If no clientX then fallback\n    if (evt.clientX === void 0 || evt.clientX === null) {\n      // Fallback\n      evt.clientX = 0;\n      evt.clientY = 0;\n\n      // If it is a touch event\n      if (evt.touches !== void 0 && evt.touches.length) {\n        if (evt.touches[0].clientX !== void 0) {\n          evt.clientX = evt.touches[0].clientX;\n          evt.clientY = evt.touches[0].clientY;\n        } else if (evt.touches[0].pageX !== void 0) {\n          var rect = svg.getBoundingClientRect();\n\n          evt.clientX = evt.touches[0].pageX - rect.left;\n          evt.clientY = evt.touches[0].pageY - rect.top;\n        }\n        // If it is a custom event\n      } else if (evt.originalEvent !== void 0) {\n        if (evt.originalEvent.clientX !== void 0) {\n          evt.clientX = evt.originalEvent.clientX;\n          evt.clientY = evt.originalEvent.clientY;\n        }\n      }\n    }\n  },\n\n  /**\n   * Check if an event is a double click/tap\n   * TODO: For touch gestures use a library (hammer.js) that takes in account other events\n   * (touchmove and touchend). It should take in account tap duration and traveled distance\n   *\n   * @param  {Event}  evt\n   * @param  {Event}  prevEvt Previous Event\n   * @return {Boolean}\n   */\n  isDblClick: function(evt, prevEvt) {\n    // Double click detected by browser\n    if (evt.detail === 2) {\n      return true;\n    }\n    // Try to compare events\n    else if (prevEvt !== void 0 && prevEvt !== null) {\n      var timeStampDiff = evt.timeStamp - prevEvt.timeStamp, // should be lower than 250 ms\n        touchesDistance = Math.sqrt(\n          Math.pow(evt.clientX - prevEvt.clientX, 2) +\n            Math.pow(evt.clientY - prevEvt.clientY, 2)\n        );\n\n      return timeStampDiff < 250 && touchesDistance < 10;\n    }\n\n    // Nothing found\n    return false;\n  },\n\n  /**\n   * Returns current timestamp as an integer\n   *\n   * @return {Number}\n   */\n  now:\n    Date.now ||\n    function() {\n      return new Date().getTime();\n    },\n\n  // From underscore.\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  throttle: function(func, wait, options) {\n    var that = this;\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) {\n      options = {};\n    }\n    var later = function() {\n      previous = options.leading === false ? 0 : that.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) {\n        context = args = null;\n      }\n    };\n    return function() {\n      var now = that.now();\n      if (!previous && options.leading === false) {\n        previous = now;\n      }\n      var remaining = wait - (now - previous);\n      context = this; // eslint-disable-line consistent-this\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  },\n\n  /**\n   * Create a requestAnimationFrame simulation\n   *\n   * @param  {Number|String} refreshRate\n   * @return {Function}\n   */\n  createRequestAnimationFrame: function(refreshRate) {\n    var timeout = null;\n\n    // Convert refreshRate to timeout\n    if (refreshRate !== \"auto\" && refreshRate < 60 && refreshRate > 1) {\n      timeout = Math.floor(1000 / refreshRate);\n    }\n\n    if (timeout === null) {\n      return window.requestAnimationFrame || requestTimeout(33);\n    } else {\n      return requestTimeout(timeout);\n    }\n  }\n};\n\n/**\n * Create a callback that will execute after a given timeout\n *\n * @param  {Function} timeout\n * @return {Function}\n */\nfunction requestTimeout(timeout) {\n  return function(callback) {\n    window.setTimeout(callback, timeout);\n  };\n}\n", "var Utils = require(\"./utilities\"),\n  _browser = \"unknown\";\n\n// http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\nif (/*@cc_on!@*/ false || !!document.documentMode) {\n  // internet explorer\n  _browser = \"ie\";\n}\n\nmodule.exports = {\n  svgNS: \"http://www.w3.org/2000/svg\",\n  xmlNS: \"http://www.w3.org/XML/1998/namespace\",\n  xmlnsNS: \"http://www.w3.org/2000/xmlns/\",\n  xlinkNS: \"http://www.w3.org/1999/xlink\",\n  evNS: \"http://www.w3.org/2001/xml-events\",\n\n  /**\n   * Get svg dimensions: width and height\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {Object}     {width: 0, height: 0}\n   */\n  getBoundingClientRectNormalized: function(svg) {\n    if (svg.clientWidth && svg.clientHeight) {\n      return { width: svg.clientWidth, height: svg.clientHeight };\n    } else if (!!svg.getBoundingClientRect()) {\n      return svg.getBoundingClientRect();\n    } else {\n      throw new Error(\"Cannot get BoundingClientRect for SVG.\");\n    }\n  },\n\n  /**\n   * Gets g element with class of \"viewport\" or creates it if it doesn't exist\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGElement}     g (group) element\n   */\n  getOrCreateViewport: function(svg, selector) {\n    var viewport = null;\n\n    if (Utils.isElement(selector)) {\n      viewport = selector;\n    } else {\n      viewport = svg.querySelector(selector);\n    }\n\n    // Check if there is just one main group in SVG\n    if (!viewport) {\n      var childNodes = Array.prototype.slice\n        .call(svg.childNodes || svg.children)\n        .filter(function(el) {\n          return el.nodeName !== \"defs\" && el.nodeName !== \"#text\";\n        });\n\n      // Node name should be SVGGElement and should have no transform attribute\n      // Groups with transform are not used as viewport because it involves parsing of all transform possibilities\n      if (\n        childNodes.length === 1 &&\n        childNodes[0].nodeName === \"g\" &&\n        childNodes[0].getAttribute(\"transform\") === null\n      ) {\n        viewport = childNodes[0];\n      }\n    }\n\n    // If no favorable group element exists then create one\n    if (!viewport) {\n      var viewportId =\n        \"viewport-\" + new Date().toISOString().replace(/\\D/g, \"\");\n      viewport = document.createElementNS(this.svgNS, \"g\");\n      viewport.setAttribute(\"id\", viewportId);\n\n      // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes\n      var svgChildren = svg.childNodes || svg.children;\n      if (!!svgChildren && svgChildren.length > 0) {\n        for (var i = svgChildren.length; i > 0; i--) {\n          // Move everything into viewport except defs\n          if (svgChildren[svgChildren.length - i].nodeName !== \"defs\") {\n            viewport.appendChild(svgChildren[svgChildren.length - i]);\n          }\n        }\n      }\n      svg.appendChild(viewport);\n    }\n\n    // Parse class names\n    var classNames = [];\n    if (viewport.getAttribute(\"class\")) {\n      classNames = viewport.getAttribute(\"class\").split(\" \");\n    }\n\n    // Set class (if not set already)\n    if (!~classNames.indexOf(\"svg-pan-zoom_viewport\")) {\n      classNames.push(\"svg-pan-zoom_viewport\");\n      viewport.setAttribute(\"class\", classNames.join(\" \"));\n    }\n\n    return viewport;\n  },\n\n  /**\n   * Set SVG attributes\n   *\n   * @param  {SVGSVGElement} svg\n   */\n  setupSvgAttributes: function(svg) {\n    // Setting default attributes\n    svg.setAttribute(\"xmlns\", this.svgNS);\n    svg.setAttributeNS(this.xmlnsNS, \"xmlns:xlink\", this.xlinkNS);\n    svg.setAttributeNS(this.xmlnsNS, \"xmlns:ev\", this.evNS);\n\n    // Needed for Internet Explorer, otherwise the viewport overflows\n    if (svg.parentNode !== null) {\n      var style = svg.getAttribute(\"style\") || \"\";\n      if (style.toLowerCase().indexOf(\"overflow\") === -1) {\n        svg.setAttribute(\"style\", \"overflow: hidden; \" + style);\n      }\n    }\n  },\n\n  /**\n   * How long Internet Explorer takes to finish updating its display (ms).\n   */\n  internetExplorerRedisplayInterval: 300,\n\n  /**\n   * Forces the browser to redisplay all SVG elements that rely on an\n   * element defined in a 'defs' section. It works globally, for every\n   * available defs element on the page.\n   * The throttling is intentionally global.\n   *\n   * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)\n   * visible after pan/zoom when there are multiple SVGs on the page.\n   * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/\n   * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62\n   */\n  refreshDefsGlobal: Utils.throttle(\n    function() {\n      var allDefs = document.querySelectorAll(\"defs\");\n      var allDefsCount = allDefs.length;\n      for (var i = 0; i < allDefsCount; i++) {\n        var thisDefs = allDefs[i];\n        thisDefs.parentNode.insertBefore(thisDefs, thisDefs);\n      }\n    },\n    this ? this.internetExplorerRedisplayInterval : null\n  ),\n\n  /**\n   * Sets the current transform matrix of an element\n   *\n   * @param {SVGElement} element\n   * @param {SVGMatrix} matrix  CTM\n   * @param {SVGElement} defs\n   */\n  setCTM: function(element, matrix, defs) {\n    var that = this,\n      s =\n        \"matrix(\" +\n        matrix.a +\n        \",\" +\n        matrix.b +\n        \",\" +\n        matrix.c +\n        \",\" +\n        matrix.d +\n        \",\" +\n        matrix.e +\n        \",\" +\n        matrix.f +\n        \")\";\n\n    element.setAttributeNS(null, \"transform\", s);\n    if (\"transform\" in element.style) {\n      element.style.transform = s;\n    } else if (\"-ms-transform\" in element.style) {\n      element.style[\"-ms-transform\"] = s;\n    } else if (\"-webkit-transform\" in element.style) {\n      element.style[\"-webkit-transform\"] = s;\n    }\n\n    // IE has a bug that makes markers disappear on zoom (when the matrix \"a\" and/or \"d\" elements change)\n    // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10\n    // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/\n    if (_browser === \"ie\" && !!defs) {\n      // this refresh is intended for redisplaying the SVG during zooming\n      defs.parentNode.insertBefore(defs, defs);\n      // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG\n      // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that\n      // are located under any other element(s).\n      window.setTimeout(function() {\n        that.refreshDefsGlobal();\n      }, that.internetExplorerRedisplayInterval);\n    }\n  },\n\n  /**\n   * Instantiate an SVGPoint object with given event coordinates\n   *\n   * @param {Event} evt\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}     point\n   */\n  getEventPoint: function(evt, svg) {\n    var point = svg.createSVGPoint();\n\n    Utils.mouseAndTouchNormalize(evt, svg);\n\n    point.x = evt.clientX;\n    point.y = evt.clientY;\n\n    return point;\n  },\n\n  /**\n   * Get SVG center point\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}\n   */\n  getSvgCenterPoint: function(svg, width, height) {\n    return this.createSVGPoint(svg, width / 2, height / 2);\n  },\n\n  /**\n   * Create a SVGPoint with given x and y\n   *\n   * @param  {SVGSVGElement} svg\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {SVGPoint}\n   */\n  createSVGPoint: function(svg, x, y) {\n    var point = svg.createSVGPoint();\n    point.x = x;\n    point.y = y;\n\n    return point;\n  }\n};\n", "var SvgUtils = require(\"./svg-utilities\");\n\nmodule.exports = {\n  enable: function(instance) {\n    // Select (and create if necessary) defs\n    var defs = instance.svg.querySelector(\"defs\");\n    if (!defs) {\n      defs = document.createElementNS(SvgUtils.svgNS, \"defs\");\n      instance.svg.appendChild(defs);\n    }\n\n    // Check for style element, and create it if it doesn't exist\n    var styleEl = defs.querySelector(\"style#svg-pan-zoom-controls-styles\");\n    if (!styleEl) {\n      var style = document.createElementNS(SvgUtils.svgNS, \"style\");\n      style.setAttribute(\"id\", \"svg-pan-zoom-controls-styles\");\n      style.setAttribute(\"type\", \"text/css\");\n      style.textContent =\n        \".svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }\";\n      defs.appendChild(style);\n    }\n\n    // Zoom Group\n    var zoomGroup = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomGroup.setAttribute(\"id\", \"svg-pan-zoom-controls\");\n    zoomGroup.setAttribute(\n      \"transform\",\n      \"translate(\" +\n        (instance.width - 70) +\n        \" \" +\n        (instance.height - 76) +\n        \") scale(0.75)\"\n    );\n    zoomGroup.setAttribute(\"class\", \"svg-pan-zoom-control\");\n\n    // Control elements\n    zoomGroup.appendChild(this._createZoomIn(instance));\n    zoomGroup.appendChild(this._createZoomReset(instance));\n    zoomGroup.appendChild(this._createZoomOut(instance));\n\n    // Finally append created element\n    instance.svg.appendChild(zoomGroup);\n\n    // Cache control instance\n    instance.controlIcons = zoomGroup;\n  },\n\n  _createZoomIn: function(instance) {\n    var zoomIn = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomIn.setAttribute(\"id\", \"svg-pan-zoom-zoom-in\");\n    zoomIn.setAttribute(\"transform\", \"translate(30.5 5) scale(0.015)\");\n    zoomIn.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    zoomIn.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().zoomIn();\n      },\n      false\n    );\n    zoomIn.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().zoomIn();\n      },\n      false\n    );\n\n    var zoomInBackground = document.createElementNS(SvgUtils.svgNS, \"rect\"); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomInBackground.setAttribute(\"x\", \"0\");\n    zoomInBackground.setAttribute(\"y\", \"0\");\n    zoomInBackground.setAttribute(\"width\", \"1500\"); // larger than expected because the whole group is transformed to scale down\n    zoomInBackground.setAttribute(\"height\", \"1400\");\n    zoomInBackground.setAttribute(\"class\", \"svg-pan-zoom-control-background\");\n    zoomIn.appendChild(zoomInBackground);\n\n    var zoomInShape = document.createElementNS(SvgUtils.svgNS, \"path\");\n    zoomInShape.setAttribute(\n      \"d\",\n      \"M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z\"\n    );\n    zoomInShape.setAttribute(\"class\", \"svg-pan-zoom-control-element\");\n    zoomIn.appendChild(zoomInShape);\n\n    return zoomIn;\n  },\n\n  _createZoomReset: function(instance) {\n    // reset\n    var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, \"g\");\n    resetPanZoomControl.setAttribute(\"id\", \"svg-pan-zoom-reset-pan-zoom\");\n    resetPanZoomControl.setAttribute(\"transform\", \"translate(5 35) scale(0.4)\");\n    resetPanZoomControl.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    resetPanZoomControl.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().reset();\n      },\n      false\n    );\n    resetPanZoomControl.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().reset();\n      },\n      false\n    );\n\n    var resetPanZoomControlBackground = document.createElementNS(\n      SvgUtils.svgNS,\n      \"rect\"\n    ); // TODO change these background space fillers to rounded rectangles so they look prettier\n    resetPanZoomControlBackground.setAttribute(\"x\", \"2\");\n    resetPanZoomControlBackground.setAttribute(\"y\", \"2\");\n    resetPanZoomControlBackground.setAttribute(\"width\", \"182\"); // larger than expected because the whole group is transformed to scale down\n    resetPanZoomControlBackground.setAttribute(\"height\", \"58\");\n    resetPanZoomControlBackground.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-background\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlBackground);\n\n    var resetPanZoomControlShape1 = document.createElementNS(\n      SvgUtils.svgNS,\n      \"path\"\n    );\n    resetPanZoomControlShape1.setAttribute(\n      \"d\",\n      \"M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z\"\n    );\n    resetPanZoomControlShape1.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-element\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlShape1);\n\n    var resetPanZoomControlShape2 = document.createElementNS(\n      SvgUtils.svgNS,\n      \"path\"\n    );\n    resetPanZoomControlShape2.setAttribute(\n      \"d\",\n      \"M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z\"\n    );\n    resetPanZoomControlShape2.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-element\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlShape2);\n\n    return resetPanZoomControl;\n  },\n\n  _createZoomOut: function(instance) {\n    // zoom out\n    var zoomOut = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomOut.setAttribute(\"id\", \"svg-pan-zoom-zoom-out\");\n    zoomOut.setAttribute(\"transform\", \"translate(30.5 70) scale(0.015)\");\n    zoomOut.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    zoomOut.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().zoomOut();\n      },\n      false\n    );\n    zoomOut.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().zoomOut();\n      },\n      false\n    );\n\n    var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, \"rect\"); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomOutBackground.setAttribute(\"x\", \"0\");\n    zoomOutBackground.setAttribute(\"y\", \"0\");\n    zoomOutBackground.setAttribute(\"width\", \"1500\"); // larger than expected because the whole group is transformed to scale down\n    zoomOutBackground.setAttribute(\"height\", \"1400\");\n    zoomOutBackground.setAttribute(\"class\", \"svg-pan-zoom-control-background\");\n    zoomOut.appendChild(zoomOutBackground);\n\n    var zoomOutShape = document.createElementNS(SvgUtils.svgNS, \"path\");\n    zoomOutShape.setAttribute(\n      \"d\",\n      \"M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z\"\n    );\n    zoomOutShape.setAttribute(\"class\", \"svg-pan-zoom-control-element\");\n    zoomOut.appendChild(zoomOutShape);\n\n    return zoomOut;\n  },\n\n  disable: function(instance) {\n    if (instance.controlIcons) {\n      instance.controlIcons.parentNode.removeChild(instance.controlIcons);\n      instance.controlIcons = null;\n    }\n  }\n};\n", "var SvgUtils = require(\"./svg-utilities\"),\n  Utils = require(\"./utilities\");\n\nvar ShadowViewport = function(viewport, options) {\n  this.init(viewport, options);\n};\n\n/**\n * Initialization\n *\n * @param  {SVGElement} viewport\n * @param  {Object} options\n */\nShadowViewport.prototype.init = function(viewport, options) {\n  // DOM Elements\n  this.viewport = viewport;\n  this.options = options;\n\n  // State cache\n  this.originalState = { zoom: 1, x: 0, y: 0 };\n  this.activeState = { zoom: 1, x: 0, y: 0 };\n\n  this.updateCTMCached = Utils.proxy(this.updateCTM, this);\n\n  // Create a custom requestAnimationFrame taking in account refreshRate\n  this.requestAnimationFrame = Utils.createRequestAnimationFrame(\n    this.options.refreshRate\n  );\n\n  // ViewBox\n  this.viewBox = { x: 0, y: 0, width: 0, height: 0 };\n  this.cacheViewBox();\n\n  // Process CTM\n  var newCTM = this.processCTM();\n\n  // Update viewport CTM and cache zoom and pan\n  this.setCTM(newCTM);\n\n  // Update CTM in this frame\n  this.updateCTM();\n};\n\n/**\n * Cache initial viewBox value\n * If no viewBox is defined, then use viewport size/position instead for viewBox values\n */\nShadowViewport.prototype.cacheViewBox = function() {\n  var svgViewBox = this.options.svg.getAttribute(\"viewBox\");\n\n  if (svgViewBox) {\n    var viewBoxValues = svgViewBox\n      .split(/[\\s\\,]/)\n      .filter(function(v) {\n        return v;\n      })\n      .map(parseFloat);\n\n    // Cache viewbox x and y offset\n    this.viewBox.x = viewBoxValues[0];\n    this.viewBox.y = viewBoxValues[1];\n    this.viewBox.width = viewBoxValues[2];\n    this.viewBox.height = viewBoxValues[3];\n\n    var zoom = Math.min(\n      this.options.width / this.viewBox.width,\n      this.options.height / this.viewBox.height\n    );\n\n    // Update active state\n    this.activeState.zoom = zoom;\n    this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2;\n    this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2;\n\n    // Force updating CTM\n    this.updateCTMOnNextFrame();\n\n    this.options.svg.removeAttribute(\"viewBox\");\n  } else {\n    this.simpleViewBoxCache();\n  }\n};\n\n/**\n * Recalculate viewport sizes and update viewBox cache\n */\nShadowViewport.prototype.simpleViewBoxCache = function() {\n  var bBox = this.viewport.getBBox();\n\n  this.viewBox.x = bBox.x;\n  this.viewBox.y = bBox.y;\n  this.viewBox.width = bBox.width;\n  this.viewBox.height = bBox.height;\n};\n\n/**\n * Returns a viewbox object. Safe to alter\n *\n * @return {Object} viewbox object\n */\nShadowViewport.prototype.getViewBox = function() {\n  return Utils.extend({}, this.viewBox);\n};\n\n/**\n * Get initial zoom and pan values. Save them into originalState\n * Parses viewBox attribute to alter initial sizes\n *\n * @return {CTM} CTM object based on options\n */\nShadowViewport.prototype.processCTM = function() {\n  var newCTM = this.getCTM();\n\n  if (this.options.fit || this.options.contain) {\n    var newScale;\n    if (this.options.fit) {\n      newScale = Math.min(\n        this.options.width / this.viewBox.width,\n        this.options.height / this.viewBox.height\n      );\n    } else {\n      newScale = Math.max(\n        this.options.width / this.viewBox.width,\n        this.options.height / this.viewBox.height\n      );\n    }\n\n    newCTM.a = newScale; //x-scale\n    newCTM.d = newScale; //y-scale\n    newCTM.e = -this.viewBox.x * newScale; //x-transform\n    newCTM.f = -this.viewBox.y * newScale; //y-transform\n  }\n\n  if (this.options.center) {\n    var offsetX =\n        (this.options.width -\n          (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) *\n        0.5,\n      offsetY =\n        (this.options.height -\n          (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) *\n        0.5;\n\n    newCTM.e = offsetX;\n    newCTM.f = offsetY;\n  }\n\n  // Cache initial values. Based on activeState and fix+center opitons\n  this.originalState.zoom = newCTM.a;\n  this.originalState.x = newCTM.e;\n  this.originalState.y = newCTM.f;\n\n  return newCTM;\n};\n\n/**\n * Return originalState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getOriginalState = function() {\n  return Utils.extend({}, this.originalState);\n};\n\n/**\n * Return actualState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getState = function() {\n  return Utils.extend({}, this.activeState);\n};\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getZoom = function() {\n  return this.activeState.zoom;\n};\n\n/**\n * Get zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getRelativeZoom = function() {\n  return this.activeState.zoom / this.originalState.zoom;\n};\n\n/**\n * Compute zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.computeRelativeZoom = function(scale) {\n  return scale / this.originalState.zoom;\n};\n\n/**\n * Get pan\n *\n * @return {Object}\n */\nShadowViewport.prototype.getPan = function() {\n  return { x: this.activeState.x, y: this.activeState.y };\n};\n\n/**\n * Return cached viewport CTM value that can be safely modified\n *\n * @return {SVGMatrix}\n */\nShadowViewport.prototype.getCTM = function() {\n  var safeCTM = this.options.svg.createSVGMatrix();\n\n  // Copy values manually as in FF they are not itterable\n  safeCTM.a = this.activeState.zoom;\n  safeCTM.b = 0;\n  safeCTM.c = 0;\n  safeCTM.d = this.activeState.zoom;\n  safeCTM.e = this.activeState.x;\n  safeCTM.f = this.activeState.y;\n\n  return safeCTM;\n};\n\n/**\n * Set a new CTM\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.setCTM = function(newCTM) {\n  var willZoom = this.isZoomDifferent(newCTM),\n    willPan = this.isPanDifferent(newCTM);\n\n  if (willZoom || willPan) {\n    // Before zoom\n    if (willZoom) {\n      // If returns false then cancel zooming\n      if (\n        this.options.beforeZoom(\n          this.getRelativeZoom(),\n          this.computeRelativeZoom(newCTM.a)\n        ) === false\n      ) {\n        newCTM.a = newCTM.d = this.activeState.zoom;\n        willZoom = false;\n      } else {\n        this.updateCache(newCTM);\n        this.options.onZoom(this.getRelativeZoom());\n      }\n    }\n\n    // Before pan\n    if (willPan) {\n      var preventPan = this.options.beforePan(this.getPan(), {\n          x: newCTM.e,\n          y: newCTM.f\n        }),\n        // If prevent pan is an object\n        preventPanX = false,\n        preventPanY = false;\n\n      // If prevent pan is Boolean false\n      if (preventPan === false) {\n        // Set x and y same as before\n        newCTM.e = this.getPan().x;\n        newCTM.f = this.getPan().y;\n\n        preventPanX = preventPanY = true;\n      } else if (Utils.isObject(preventPan)) {\n        // Check for X axes attribute\n        if (preventPan.x === false) {\n          // Prevent panning on x axes\n          newCTM.e = this.getPan().x;\n          preventPanX = true;\n        } else if (Utils.isNumber(preventPan.x)) {\n          // Set a custom pan value\n          newCTM.e = preventPan.x;\n        }\n\n        // Check for Y axes attribute\n        if (preventPan.y === false) {\n          // Prevent panning on x axes\n          newCTM.f = this.getPan().y;\n          preventPanY = true;\n        } else if (Utils.isNumber(preventPan.y)) {\n          // Set a custom pan value\n          newCTM.f = preventPan.y;\n        }\n      }\n\n      // Update willPan flag\n      // Check if newCTM is still different\n      if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {\n        willPan = false;\n      } else {\n        this.updateCache(newCTM);\n        this.options.onPan(this.getPan());\n      }\n    }\n\n    // Check again if should zoom or pan\n    if (willZoom || willPan) {\n      this.updateCTMOnNextFrame();\n    }\n  }\n};\n\nShadowViewport.prototype.isZoomDifferent = function(newCTM) {\n  return this.activeState.zoom !== newCTM.a;\n};\n\nShadowViewport.prototype.isPanDifferent = function(newCTM) {\n  return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f;\n};\n\n/**\n * Update cached CTM and active state\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.updateCache = function(newCTM) {\n  this.activeState.zoom = newCTM.a;\n  this.activeState.x = newCTM.e;\n  this.activeState.y = newCTM.f;\n};\n\nShadowViewport.prototype.pendingUpdate = false;\n\n/**\n * Place a request to update CTM on next Frame\n */\nShadowViewport.prototype.updateCTMOnNextFrame = function() {\n  if (!this.pendingUpdate) {\n    // Lock\n    this.pendingUpdate = true;\n\n    // Throttle next update\n    this.requestAnimationFrame.call(window, this.updateCTMCached);\n  }\n};\n\n/**\n * Update viewport CTM with cached CTM\n */\nShadowViewport.prototype.updateCTM = function() {\n  var ctm = this.getCTM();\n\n  // Updates SVG element\n  SvgUtils.setCTM(this.viewport, ctm, this.defs);\n\n  // Free the lock\n  this.pendingUpdate = false;\n\n  // Notify about the update\n  if (this.options.onUpdatedCTM) {\n    this.options.onUpdatedCTM(ctm);\n  }\n};\n\nmodule.exports = function(viewport, options) {\n  return new ShadowViewport(viewport, options);\n};\n", "var Wheel = require(\"./uniwheel\"),\n  ControlIcons = require(\"./control-icons\"),\n  Utils = require(\"./utilities\"),\n  SvgUtils = require(\"./svg-utilities\"),\n  ShadowViewport = require(\"./shadow-viewport\");\n\nvar SvgPanZoom = function(svg, options) {\n  this.init(svg, options);\n};\n\nvar optionsDefaults = {\n  viewportSelector: \".svg-pan-zoom_viewport\", // Viewport selector. Can be querySelector string or SVGElement\n  panEnabled: true, // enable or disable panning (default enabled)\n  controlIconsEnabled: false, // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)\n  zoomEnabled: true, // enable or disable zooming (default enabled)\n  dblClickZoomEnabled: true, // enable or disable zooming by double clicking (default enabled)\n  mouseWheelZoomEnabled: true, // enable or disable zooming by mouse wheel (default enabled)\n  preventMouseEventsDefault: true, // enable or disable preventDefault for mouse events\n  zoomScaleSensitivity: 0.1, // Zoom sensitivity\n  minZoom: 0.5, // Minimum Zoom level\n  maxZoom: 10, // Maximum Zoom level\n  fit: true, // enable or disable viewport fit in SVG (default true)\n  contain: false, // enable or disable viewport contain the svg (default false)\n  center: true, // enable or disable viewport centering in SVG (default true)\n  refreshRate: \"auto\", // Maximum number of frames per second (altering SVG's viewport)\n  beforeZoom: null,\n  onZoom: null,\n  beforePan: null,\n  onPan: null,\n  customEventsHandler: null,\n  eventsListenerElement: null,\n  onUpdatedCTM: null\n};\n\nvar passiveListenerOption = { passive: true };\n\nSvgPanZoom.prototype.init = function(svg, options) {\n  var that = this;\n\n  this.svg = svg;\n  this.defs = svg.querySelector(\"defs\");\n\n  // Add default attributes to SVG\n  SvgUtils.setupSvgAttributes(this.svg);\n\n  // Set options\n  this.options = Utils.extend(Utils.extend({}, optionsDefaults), options);\n\n  // Set default state\n  this.state = \"none\";\n\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(\n    svg\n  );\n  this.width = boundingClientRectNormalized.width;\n  this.height = boundingClientRectNormalized.height;\n\n  // Init shadow viewport\n  this.viewport = ShadowViewport(\n    SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector),\n    {\n      svg: this.svg,\n      width: this.width,\n      height: this.height,\n      fit: this.options.fit,\n      contain: this.options.contain,\n      center: this.options.center,\n      refreshRate: this.options.refreshRate,\n      // Put callbacks into functions as they can change through time\n      beforeZoom: function(oldScale, newScale) {\n        if (that.viewport && that.options.beforeZoom) {\n          return that.options.beforeZoom(oldScale, newScale);\n        }\n      },\n      onZoom: function(scale) {\n        if (that.viewport && that.options.onZoom) {\n          return that.options.onZoom(scale);\n        }\n      },\n      beforePan: function(oldPoint, newPoint) {\n        if (that.viewport && that.options.beforePan) {\n          return that.options.beforePan(oldPoint, newPoint);\n        }\n      },\n      onPan: function(point) {\n        if (that.viewport && that.options.onPan) {\n          return that.options.onPan(point);\n        }\n      },\n      onUpdatedCTM: function(ctm) {\n        if (that.viewport && that.options.onUpdatedCTM) {\n          return that.options.onUpdatedCTM(ctm);\n        }\n      }\n    }\n  );\n\n  // Wrap callbacks into public API context\n  var publicInstance = this.getPublicInstance();\n  publicInstance.setBeforeZoom(this.options.beforeZoom);\n  publicInstance.setOnZoom(this.options.onZoom);\n  publicInstance.setBeforePan(this.options.beforePan);\n  publicInstance.setOnPan(this.options.onPan);\n  publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM);\n\n  if (this.options.controlIconsEnabled) {\n    ControlIcons.enable(this);\n  }\n\n  // Init events handlers\n  this.lastMouseWheelEventTime = Date.now();\n  this.setupHandlers();\n};\n\n/**\n * Register event handlers\n */\nSvgPanZoom.prototype.setupHandlers = function() {\n  var that = this,\n    prevEvt = null; // use for touchstart event to detect double tap\n\n  this.eventListeners = {\n    // Mouse down group\n    mousedown: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt;\n      return result;\n    },\n    touchstart: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt;\n      return result;\n    },\n\n    // Mouse up group\n    mouseup: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchend: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n\n    // Mouse move group\n    mousemove: function(evt) {\n      return that.handleMouseMove(evt);\n    },\n    touchmove: function(evt) {\n      return that.handleMouseMove(evt);\n    },\n\n    // Mouse leave group\n    mouseleave: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchleave: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchcancel: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  };\n\n  // Init custom events handler if available\n  // eslint-disable-next-line eqeqeq\n  if (this.options.customEventsHandler != null) {\n    this.options.customEventsHandler.init({\n      svgElement: this.svg,\n      eventsListenerElement: this.options.eventsListenerElement,\n      instance: this.getPublicInstance()\n    });\n\n    // Custom event handler may halt builtin listeners\n    var haltEventListeners = this.options.customEventsHandler\n      .haltEventListeners;\n    if (haltEventListeners && haltEventListeners.length) {\n      for (var i = haltEventListeners.length - 1; i >= 0; i--) {\n        if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {\n          delete this.eventListeners[haltEventListeners[i]];\n        }\n      }\n    }\n  }\n\n  // Bind eventListeners\n  for (var event in this.eventListeners) {\n    // Attach event to eventsListenerElement or SVG if not available\n    (this.options.eventsListenerElement || this.svg).addEventListener(\n      event,\n      this.eventListeners[event],\n      !this.options.preventMouseEventsDefault ? passiveListenerOption : false\n    );\n  }\n\n  // Zoom using mouse wheel\n  if (this.options.mouseWheelZoomEnabled) {\n    this.options.mouseWheelZoomEnabled = false; // set to false as enable will set it back to true\n    this.enableMouseWheelZoom();\n  }\n};\n\n/**\n * Enable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.enableMouseWheelZoom = function() {\n  if (!this.options.mouseWheelZoomEnabled) {\n    var that = this;\n\n    // Mouse wheel listener\n    this.wheelListener = function(evt) {\n      return that.handleMouseWheel(evt);\n    };\n\n    // Bind wheelListener\n    var isPassiveListener = !this.options.preventMouseEventsDefault;\n    Wheel.on(\n      this.options.eventsListenerElement || this.svg,\n      this.wheelListener,\n      isPassiveListener\n    );\n\n    this.options.mouseWheelZoomEnabled = true;\n  }\n};\n\n/**\n * Disable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.disableMouseWheelZoom = function() {\n  if (this.options.mouseWheelZoomEnabled) {\n    var isPassiveListener = !this.options.preventMouseEventsDefault;\n    Wheel.off(\n      this.options.eventsListenerElement || this.svg,\n      this.wheelListener,\n      isPassiveListener\n    );\n    this.options.mouseWheelZoomEnabled = false;\n  }\n};\n\n/**\n * Handle mouse wheel event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseWheel = function(evt) {\n  if (!this.options.zoomEnabled || this.state !== \"none\") {\n    return;\n  }\n\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Default delta in case that deltaY is not available\n  var delta = evt.deltaY || 1,\n    timeDelta = Date.now() - this.lastMouseWheelEventTime,\n    divider = 3 + Math.max(0, 30 - timeDelta);\n\n  // Update cache\n  this.lastMouseWheelEventTime = Date.now();\n\n  // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)\n  if (\"deltaMode\" in evt && evt.deltaMode === 0 && evt.wheelDelta) {\n    delta = evt.deltaY === 0 ? 0 : Math.abs(evt.wheelDelta) / evt.deltaY;\n  }\n\n  delta =\n    -0.3 < delta && delta < 0.3\n      ? delta\n      : ((delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10)) / divider;\n\n  var inversedScreenCTM = this.svg.getScreenCTM().inverse(),\n    relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n      inversedScreenCTM\n    ),\n    zoom = Math.pow(1 + this.options.zoomScaleSensitivity, -1 * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior\n\n  this.zoomAtPoint(zoom, relativeMousePoint);\n};\n\n/**\n * Zoom in at a SVG point\n *\n * @param  {SVGPoint} point\n * @param  {Float} zoomScale    Number representing how much to zoom\n * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.\n *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)\n */\nSvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {\n  var originalState = this.viewport.getOriginalState();\n\n  if (!zoomAbsolute) {\n    // Fit zoomScale in set bounds\n    if (\n      this.getZoom() * zoomScale <\n      this.options.minZoom * originalState.zoom\n    ) {\n      zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom();\n    } else if (\n      this.getZoom() * zoomScale >\n      this.options.maxZoom * originalState.zoom\n    ) {\n      zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom();\n    }\n  } else {\n    // Fit zoomScale in set bounds\n    zoomScale = Math.max(\n      this.options.minZoom * originalState.zoom,\n      Math.min(this.options.maxZoom * originalState.zoom, zoomScale)\n    );\n    // Find relative scale to achieve desired scale\n    zoomScale = zoomScale / this.getZoom();\n  }\n\n  var oldCTM = this.viewport.getCTM(),\n    relativePoint = point.matrixTransform(oldCTM.inverse()),\n    modifier = this.svg\n      .createSVGMatrix()\n      .translate(relativePoint.x, relativePoint.y)\n      .scale(zoomScale)\n      .translate(-relativePoint.x, -relativePoint.y),\n    newCTM = oldCTM.multiply(modifier);\n\n  if (newCTM.a !== oldCTM.a) {\n    this.viewport.setCTM(newCTM);\n  }\n};\n\n/**\n * Zoom at center point\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.zoom = function(scale, absolute) {\n  this.zoomAtPoint(\n    scale,\n    SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height),\n    absolute\n  );\n};\n\n/**\n * Zoom used by public instance\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoom = function(scale, absolute) {\n  if (absolute) {\n    scale = this.computeFromRelativeZoom(scale);\n  }\n\n  this.zoom(scale, absolute);\n};\n\n/**\n * Zoom at point used by public instance\n *\n * @param  {Float} scale\n * @param  {SVGPoint|Object} point    An object that has x and y attributes\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {\n  if (absolute) {\n    // Transform zoom into a relative value\n    scale = this.computeFromRelativeZoom(scale);\n  }\n\n  // If not a SVGPoint but has x and y then create a SVGPoint\n  if (Utils.getType(point) !== \"SVGPoint\") {\n    if (\"x\" in point && \"y\" in point) {\n      point = SvgUtils.createSVGPoint(this.svg, point.x, point.y);\n    } else {\n      throw new Error(\"Given point is invalid\");\n    }\n  }\n\n  this.zoomAtPoint(scale, point, absolute);\n};\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getZoom = function() {\n  return this.viewport.getZoom();\n};\n\n/**\n * Get zoom scale for public usage\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getRelativeZoom = function() {\n  return this.viewport.getRelativeZoom();\n};\n\n/**\n * Compute actual zoom from public zoom\n *\n * @param  {Float} zoom\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {\n  return zoom * this.viewport.getOriginalState().zoom;\n};\n\n/**\n * Set zoom to initial state\n */\nSvgPanZoom.prototype.resetZoom = function() {\n  var originalState = this.viewport.getOriginalState();\n\n  this.zoom(originalState.zoom, true);\n};\n\n/**\n * Set pan to initial state\n */\nSvgPanZoom.prototype.resetPan = function() {\n  this.pan(this.viewport.getOriginalState());\n};\n\n/**\n * Set pan and zoom to initial state\n */\nSvgPanZoom.prototype.reset = function() {\n  this.resetZoom();\n  this.resetPan();\n};\n\n/**\n * Handle double click event\n * See handleMouseDown() for alternate detection method\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleDblClick = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Check if target was a control button\n  if (this.options.controlIconsEnabled) {\n    var targetClass = evt.target.getAttribute(\"class\") || \"\";\n    if (targetClass.indexOf(\"svg-pan-zoom-control\") > -1) {\n      return false;\n    }\n  }\n\n  var zoomFactor;\n\n  if (evt.shiftKey) {\n    zoomFactor = 1 / ((1 + this.options.zoomScaleSensitivity) * 2); // zoom out when shift key pressed\n  } else {\n    zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2;\n  }\n\n  var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n    this.svg.getScreenCTM().inverse()\n  );\n  this.zoomAtPoint(zoomFactor, point);\n};\n\n/**\n * Handle click event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  Utils.mouseAndTouchNormalize(evt, this.svg);\n\n  // Double click detection; more consistent than ondblclick\n  if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)) {\n    this.handleDblClick(evt);\n  } else {\n    // Pan mode\n    this.state = \"pan\";\n    this.firstEventCTM = this.viewport.getCTM();\n    this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n      this.firstEventCTM.inverse()\n    );\n  }\n};\n\n/**\n * Handle mouse move event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseMove = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  if (this.state === \"pan\" && this.options.panEnabled) {\n    // Pan mode\n    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n        this.firstEventCTM.inverse()\n      ),\n      viewportCTM = this.firstEventCTM.translate(\n        point.x - this.stateOrigin.x,\n        point.y - this.stateOrigin.y\n      );\n\n    this.viewport.setCTM(viewportCTM);\n  }\n};\n\n/**\n * Handle mouse button release event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseUp = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  if (this.state === \"pan\") {\n    // Quit pan mode\n    this.state = \"none\";\n  }\n};\n\n/**\n * Adjust viewport size (only) so it will fit in SVG\n * Does not center image\n */\nSvgPanZoom.prototype.fit = function() {\n  var viewBox = this.viewport.getViewBox(),\n    newScale = Math.min(\n      this.width / viewBox.width,\n      this.height / viewBox.height\n    );\n\n  this.zoom(newScale, true);\n};\n\n/**\n * Adjust viewport size (only) so it will contain the SVG\n * Does not center image\n */\nSvgPanZoom.prototype.contain = function() {\n  var viewBox = this.viewport.getViewBox(),\n    newScale = Math.max(\n      this.width / viewBox.width,\n      this.height / viewBox.height\n    );\n\n  this.zoom(newScale, true);\n};\n\n/**\n * Adjust viewport pan (only) so it will be centered in SVG\n * Does not zoom/fit/contain image\n */\nSvgPanZoom.prototype.center = function() {\n  var viewBox = this.viewport.getViewBox(),\n    offsetX =\n      (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5,\n    offsetY =\n      (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5;\n\n  this.getPublicInstance().pan({ x: offsetX, y: offsetY });\n};\n\n/**\n * Update content cached BorderBox\n * Use when viewport contents change\n */\nSvgPanZoom.prototype.updateBBox = function() {\n  this.viewport.simpleViewBoxCache();\n};\n\n/**\n * Pan to a rendered position\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.pan = function(point) {\n  var viewportCTM = this.viewport.getCTM();\n  viewportCTM.e = point.x;\n  viewportCTM.f = point.y;\n  this.viewport.setCTM(viewportCTM);\n};\n\n/**\n * Relatively pan the graph by a specified rendered position vector\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.panBy = function(point) {\n  var viewportCTM = this.viewport.getCTM();\n  viewportCTM.e += point.x;\n  viewportCTM.f += point.y;\n  this.viewport.setCTM(viewportCTM);\n};\n\n/**\n * Get pan vector\n *\n * @return {Object} {x: 0, y: 0}\n */\nSvgPanZoom.prototype.getPan = function() {\n  var state = this.viewport.getState();\n\n  return { x: state.x, y: state.y };\n};\n\n/**\n * Recalculates cached svg dimensions and controls position\n */\nSvgPanZoom.prototype.resize = function() {\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(\n    this.svg\n  );\n  this.width = boundingClientRectNormalized.width;\n  this.height = boundingClientRectNormalized.height;\n\n  // Recalculate original state\n  var viewport = this.viewport;\n  viewport.options.width = this.width;\n  viewport.options.height = this.height;\n  viewport.processCTM();\n\n  // Reposition control icons by re-enabling them\n  if (this.options.controlIconsEnabled) {\n    this.getPublicInstance().disableControlIcons();\n    this.getPublicInstance().enableControlIcons();\n  }\n};\n\n/**\n * Unbind mouse events, free callbacks and destroy public instance\n */\nSvgPanZoom.prototype.destroy = function() {\n  var that = this;\n\n  // Free callbacks\n  this.beforeZoom = null;\n  this.onZoom = null;\n  this.beforePan = null;\n  this.onPan = null;\n  this.onUpdatedCTM = null;\n\n  // Destroy custom event handlers\n  // eslint-disable-next-line eqeqeq\n  if (this.options.customEventsHandler != null) {\n    this.options.customEventsHandler.destroy({\n      svgElement: this.svg,\n      eventsListenerElement: this.options.eventsListenerElement,\n      instance: this.getPublicInstance()\n    });\n  }\n\n  // Unbind eventListeners\n  for (var event in this.eventListeners) {\n    (this.options.eventsListenerElement || this.svg).removeEventListener(\n      event,\n      this.eventListeners[event],\n      !this.options.preventMouseEventsDefault ? passiveListenerOption : false\n    );\n  }\n\n  // Unbind wheelListener\n  this.disableMouseWheelZoom();\n\n  // Remove control icons\n  this.getPublicInstance().disableControlIcons();\n\n  // Reset zoom and pan\n  this.reset();\n\n  // Remove instance from instancesStore\n  instancesStore = instancesStore.filter(function(instance) {\n    return instance.svg !== that.svg;\n  });\n\n  // Delete options and its contents\n  delete this.options;\n\n  // Delete viewport to make public shadow viewport functions uncallable\n  delete this.viewport;\n\n  // Destroy public instance and rewrite getPublicInstance\n  delete this.publicInstance;\n  delete this.pi;\n  this.getPublicInstance = function() {\n    return null;\n  };\n};\n\n/**\n * Returns a public instance object\n *\n * @return {Object} Public instance object\n */\nSvgPanZoom.prototype.getPublicInstance = function() {\n  var that = this;\n\n  // Create cache\n  if (!this.publicInstance) {\n    this.publicInstance = this.pi = {\n      // Pan\n      enablePan: function() {\n        that.options.panEnabled = true;\n        return that.pi;\n      },\n      disablePan: function() {\n        that.options.panEnabled = false;\n        return that.pi;\n      },\n      isPanEnabled: function() {\n        return !!that.options.panEnabled;\n      },\n      pan: function(point) {\n        that.pan(point);\n        return that.pi;\n      },\n      panBy: function(point) {\n        that.panBy(point);\n        return that.pi;\n      },\n      getPan: function() {\n        return that.getPan();\n      },\n      // Pan event\n      setBeforePan: function(fn) {\n        that.options.beforePan =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      setOnPan: function(fn) {\n        that.options.onPan =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Zoom and Control Icons\n      enableZoom: function() {\n        that.options.zoomEnabled = true;\n        return that.pi;\n      },\n      disableZoom: function() {\n        that.options.zoomEnabled = false;\n        return that.pi;\n      },\n      isZoomEnabled: function() {\n        return !!that.options.zoomEnabled;\n      },\n      enableControlIcons: function() {\n        if (!that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = true;\n          ControlIcons.enable(that);\n        }\n        return that.pi;\n      },\n      disableControlIcons: function() {\n        if (that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = false;\n          ControlIcons.disable(that);\n        }\n        return that.pi;\n      },\n      isControlIconsEnabled: function() {\n        return !!that.options.controlIconsEnabled;\n      },\n      // Double click zoom\n      enableDblClickZoom: function() {\n        that.options.dblClickZoomEnabled = true;\n        return that.pi;\n      },\n      disableDblClickZoom: function() {\n        that.options.dblClickZoomEnabled = false;\n        return that.pi;\n      },\n      isDblClickZoomEnabled: function() {\n        return !!that.options.dblClickZoomEnabled;\n      },\n      // Mouse wheel zoom\n      enableMouseWheelZoom: function() {\n        that.enableMouseWheelZoom();\n        return that.pi;\n      },\n      disableMouseWheelZoom: function() {\n        that.disableMouseWheelZoom();\n        return that.pi;\n      },\n      isMouseWheelZoomEnabled: function() {\n        return !!that.options.mouseWheelZoomEnabled;\n      },\n      // Zoom scale and bounds\n      setZoomScaleSensitivity: function(scale) {\n        that.options.zoomScaleSensitivity = scale;\n        return that.pi;\n      },\n      setMinZoom: function(zoom) {\n        that.options.minZoom = zoom;\n        return that.pi;\n      },\n      setMaxZoom: function(zoom) {\n        that.options.maxZoom = zoom;\n        return that.pi;\n      },\n      // Zoom event\n      setBeforeZoom: function(fn) {\n        that.options.beforeZoom =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      setOnZoom: function(fn) {\n        that.options.onZoom =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Zooming\n      zoom: function(scale) {\n        that.publicZoom(scale, true);\n        return that.pi;\n      },\n      zoomBy: function(scale) {\n        that.publicZoom(scale, false);\n        return that.pi;\n      },\n      zoomAtPoint: function(scale, point) {\n        that.publicZoomAtPoint(scale, point, true);\n        return that.pi;\n      },\n      zoomAtPointBy: function(scale, point) {\n        that.publicZoomAtPoint(scale, point, false);\n        return that.pi;\n      },\n      zoomIn: function() {\n        this.zoomBy(1 + that.options.zoomScaleSensitivity);\n        return that.pi;\n      },\n      zoomOut: function() {\n        this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity));\n        return that.pi;\n      },\n      getZoom: function() {\n        return that.getRelativeZoom();\n      },\n      // CTM update\n      setOnUpdatedCTM: function(fn) {\n        that.options.onUpdatedCTM =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Reset\n      resetZoom: function() {\n        that.resetZoom();\n        return that.pi;\n      },\n      resetPan: function() {\n        that.resetPan();\n        return that.pi;\n      },\n      reset: function() {\n        that.reset();\n        return that.pi;\n      },\n      // Fit, Contain and Center\n      fit: function() {\n        that.fit();\n        return that.pi;\n      },\n      contain: function() {\n        that.contain();\n        return that.pi;\n      },\n      center: function() {\n        that.center();\n        return that.pi;\n      },\n      // Size and Resize\n      updateBBox: function() {\n        that.updateBBox();\n        return that.pi;\n      },\n      resize: function() {\n        that.resize();\n        return that.pi;\n      },\n      getSizes: function() {\n        return {\n          width: that.width,\n          height: that.height,\n          realZoom: that.getZoom(),\n          viewBox: that.viewport.getViewBox()\n        };\n      },\n      // Destroy\n      destroy: function() {\n        that.destroy();\n        return that.pi;\n      }\n    };\n  }\n\n  return this.publicInstance;\n};\n\n/**\n * Stores pairs of instances of SvgPanZoom and SVG\n * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}\n *\n * @type {Array}\n */\nvar instancesStore = [];\n\nvar svgPanZoom = function(elementOrSelector, options) {\n  var svg = Utils.getSvg(elementOrSelector);\n\n  if (svg === null) {\n    return null;\n  } else {\n    // Look for existent instance\n    for (var i = instancesStore.length - 1; i >= 0; i--) {\n      if (instancesStore[i].svg === svg) {\n        return instancesStore[i].instance.getPublicInstance();\n      }\n    }\n\n    // If instance not found - create one\n    instancesStore.push({\n      svg: svg,\n      instance: new SvgPanZoom(svg, options)\n    });\n\n    // Return just pushed instance\n    return instancesStore[\n      instancesStore.length - 1\n    ].instance.getPublicInstance();\n  }\n};\n\nmodule.exports = svgPanZoom;\n", "var SvgPanZoom = require(\"./svg-pan-zoom.js\");\n\nmodule.exports = SvgPanZoom;\n", "/*! svgMap | https://github.com/StephanWagner/svgMap | MIT License | Copyright Stephan Wagner | https://stephanwagner.me */\nfunction svgMapWrapper(i){function a(l){this.init(l)}return a.prototype.init=function(l){this.options=Object.assign({},{targetElementID:\"\",minZoom:1,maxZoom:25,initialZoom:1.06,initialPan:{x:0,y:0},zoomScaleSensitivity:.2,mouseWheelZoomEnabled:!0,mouseWheelZoomWithKey:!1,mouseWheelKeyMessage:\"Press the [ALT] key to zoom\",mouseWheelKeyMessageMac:\"Press the [COMMAND] key to zoom\",colorMax:\"#CC0033\",colorMin:\"#FFE5D9\",colorNoData:\"#E2E2E2\",manualColorAttribute:\"color\",flagType:\"image\",flagURL:\"https://cdn.jsdelivr.net/gh/hjnilsson/country-flags@latest/svg/{0}.svg\",hideFlag:!1,hideMissingData:!1,noDataText:\"No data available\",touchLink:!1,showZoomReset:!1,onGetTooltip:function(l,t,e){return null},countries:{EH:!0,Crimea:\"UA\"},showContinentSelector:!1},l||{}),this.options.targetElementID&&document.getElementById(this.options.targetElementID)||this.error(\"Target element not found\"),this.options.data||this.error(\"No data\"),this.id=this.options.targetElementID,this.wrapper=document.getElementById(this.options.targetElementID),this.wrapper.classList.add(\"svgMap-wrapper\"),this.container=document.createElement(\"div\"),this.container.classList.add(\"svgMap-container\"),this.wrapper.appendChild(this.container),this.options.mouseWheelZoomEnabled&&this.options.mouseWheelZoomWithKey&&(this.addMouseWheelZoomNotice(),this.addMouseWheelZoomWithKeyEvents()),this.mapContainer=document.createElement(\"div\"),this.mapContainer.classList.add(\"svgMap-map-container\"),this.container.appendChild(this.mapContainer),this.createMap(),this.applyData(this.options.data)},a.prototype.countries={AF:\"Afghanistan\",AX:\"\u00C5land Islands\",AL:\"Albania\",DZ:\"Algeria\",AS:\"American Samoa\",AD:\"Andorra\",AO:\"Angola\",AI:\"Anguilla\",AQ:\"Antarctica\",AG:\"Antigua and Barbuda\",AR:\"Argentina\",AM:\"Armenia\",AW:\"Aruba\",AU:\"Australia\",AT:\"Austria\",AZ:\"Azerbaijan\",BS:\"Bahamas\",BH:\"Bahrain\",BD:\"Bangladesh\",BB:\"Barbados\",BY:\"Belarus\",BE:\"Belgium\",BZ:\"Belize\",BJ:\"Benin\",BM:\"Bermuda\",BT:\"Bhutan\",BO:\"Bolivia\",BA:\"Bosnia and Herzegovina\",BW:\"Botswana\",BR:\"Brazil\",IO:\"British Indian Ocean Territory\",VG:\"British Virgin Islands\",BN:\"Brunei Darussalam\",BG:\"Bulgaria\",BF:\"Burkina Faso\",BI:\"Burundi\",KH:\"Cambodia\",CM:\"Cameroon\",CA:\"Canada\",CV:\"Cape Verde\",BQ:\"Caribbean Netherlands\",KY:\"Cayman Islands\",CF:\"Central African Republic\",TD:\"Chad\",CL:\"Chile\",CN:\"China\",CX:\"Christmas Island\",CC:\"Cocos Islands\",CO:\"Colombia\",KM:\"Comoros\",CG:\"Congo\",CK:\"Cook Islands\",CR:\"Costa Rica\",HR:\"Croatia\",CU:\"Cuba\",CW:\"Cura\u00E7ao\",CY:\"Cyprus\",CZ:\"Czech Republic\",CD:\"Democratic Republic of the Congo\",DK:\"Denmark\",DJ:\"Djibouti\",DM:\"Dominica\",DO:\"Dominican Republic\",EC:\"Ecuador\",EG:\"Egypt\",SV:\"El Salvador\",GQ:\"Equatorial Guinea\",ER:\"Eritrea\",EE:\"Estonia\",ET:\"Ethiopia\",FK:\"Falkland Islands\",FO:\"Faroe Islands\",FM:\"Federated States of Micronesia\",FJ:\"Fiji\",FI:\"Finland\",FR:\"France\",GF:\"French Guiana\",PF:\"French Polynesia\",TF:\"French Southern Territories\",GA:\"Gabon\",GM:\"Gambia\",GE:\"Georgia\",DE:\"Germany\",GH:\"Ghana\",GI:\"Gibraltar\",GR:\"Greece\",GL:\"Greenland\",GD:\"Grenada\",GP:\"Guadeloupe\",GU:\"Guam\",GT:\"Guatemala\",GN:\"Guinea\",GW:\"Guinea-Bissau\",GY:\"Guyana\",HT:\"Haiti\",HN:\"Honduras\",HK:\"Hong Kong\",HU:\"Hungary\",IS:\"Iceland\",IN:\"India\",ID:\"Indonesia\",IR:\"Iran\",IQ:\"Iraq\",IE:\"Ireland\",IM:\"Isle of Man\",IL:\"Israel\",IT:\"Italy\",CI:\"Ivory Coast\",JM:\"Jamaica\",JP:\"Japan\",JE:\"Jersey\",JO:\"Jordan\",KZ:\"Kazakhstan\",KE:\"Kenya\",KI:\"Kiribati\",XK:\"Kosovo\",KW:\"Kuwait\",KG:\"Kyrgyzstan\",LA:\"Laos\",LV:\"Latvia\",LB:\"Lebanon\",LS:\"Lesotho\",LR:\"Liberia\",LY:\"Libya\",LI:\"Liechtenstein\",LT:\"Lithuania\",LU:\"Luxembourg\",MO:\"Macau\",MK:\"Macedonia\",MG:\"Madagascar\",MW:\"Malawi\",MY:\"Malaysia\",MV:\"Maldives\",ML:\"Mali\",MT:\"Malta\",MH:\"Marshall Islands\",MQ:\"Martinique\",MR:\"Mauritania\",MU:\"Mauritius\",YT:\"Mayotte\",MX:\"Mexico\",MD:\"Moldova\",MC:\"Monaco\",MN:\"Mongolia\",ME:\"Montenegro\",MS:\"Montserrat\",MA:\"Morocco\",MZ:\"Mozambique\",MM:\"Myanmar\",NA:\"Namibia\",NR:\"Nauru\",NP:\"Nepal\",NL:\"Netherlands\",NC:\"New Caledonia\",NZ:\"New Zealand\",NI:\"Nicaragua\",NE:\"Niger\",NG:\"Nigeria\",NU:\"Niue\",NF:\"Norfolk Island\",KP:\"North Korea\",MP:\"Northern Mariana Islands\",NO:\"Norway\",OM:\"Oman\",PK:\"Pakistan\",PW:\"Palau\",PS:\"Palestine\",PA:\"Panama\",PG:\"Papua New Guinea\",PY:\"Paraguay\",PE:\"Peru\",PH:\"Philippines\",PN:\"Pitcairn Islands\",PL:\"Poland\",PT:\"Portugal\",PR:\"Puerto Rico\",QA:\"Qatar\",RE:\"Reunion\",RO:\"Romania\",RU:\"Russia\",RW:\"Rwanda\",SH:\"Saint Helena\",KN:\"Saint Kitts and Nevis\",LC:\"Saint Lucia\",PM:\"Saint Pierre and Miquelon\",VC:\"Saint Vincent and the Grenadines\",WS:\"Samoa\",SM:\"San Marino\",ST:\"S\u00E3o Tom\u00E9 and Pr\u00EDncipe\",SA:\"Saudi Arabia\",SN:\"Senegal\",RS:\"Serbia\",SC:\"Seychelles\",SL:\"Sierra Leone\",SG:\"Singapore\",SX:\"Sint Maarten\",SK:\"Slovakia\",SI:\"Slovenia\",SB:\"Solomon Islands\",SO:\"Somalia\",ZA:\"South Africa\",GS:\"South Georgia and the South Sandwich Islands\",KR:\"South Korea\",SS:\"South Sudan\",ES:\"Spain\",LK:\"Sri Lanka\",SD:\"Sudan\",SR:\"Suriname\",SJ:\"Svalbard and Jan Mayen\",SZ:\"Eswatini\",SE:\"Sweden\",CH:\"Switzerland\",SY:\"Syria\",TW:\"Taiwan\",TJ:\"Tajikistan\",TZ:\"Tanzania\",TH:\"Thailand\",TL:\"Timor-Leste\",TG:\"Togo\",TK:\"Tokelau\",TO:\"Tonga\",TT:\"Trinidad and Tobago\",TN:\"Tunisia\",TR:\"Turkey\",TM:\"Turkmenistan\",TC:\"Turks and Caicos Islands\",TV:\"Tuvalu\",UG:\"Uganda\",UA:\"Ukraine\",AE:\"United Arab Emirates\",GB:\"United Kingdom\",US:\"United States\",UM:\"United States Minor Outlying Islands\",VI:\"United States Virgin Islands\",UY:\"Uruguay\",UZ:\"Uzbekistan\",VU:\"Vanuatu\",VA:\"Vatican City\",VE:\"Venezuela\",VN:\"Vietnam\",WF:\"Wallis and Futuna\",EH:\"Western Sahara\",YE:\"Yemen\",ZM:\"Zambia\",ZW:\"Zimbabwe\"},a.prototype.applyData=function(o){var i=null,a=null;Object.keys(o.values).forEach(function(l){l=parseInt(o.values[l][o.applyData],10);(i=null===i?l:i)<l&&(i=l),l<(a=null===a?l:a)&&(a=l)}),o.data[o.applyData].thresholdMax&&(i=Math.min(i,o.data[o.applyData].thresholdMax)),o.data[o.applyData].thresholdMin&&(a=Math.max(a,o.data[o.applyData].thresholdMin)),Object.keys(this.countries).forEach(function(l){var t,e=document.getElementById(this.id+\"-map-country-\"+l);e&&(o.values[l]?void 0===o.values[l].color?(t=Math.max(a,parseInt(o.values[l][o.applyData],10)),t=Math.max(0,Math.min(1,(t-a)/(i-a))),t=this.getColor(this.options.colorMax,this.options.colorMin,t||0===t?t:1),e.setAttribute(\"fill\",t)):e.setAttribute(\"fill\",o.values[l].color):e.setAttribute(\"fill\",this.options.colorNoData))}.bind(this))},a.prototype.emojiFlags={AF:\"\uD83C\uDDE6\uD83C\uDDEB\",AX:\"\uD83C\uDDE6\uD83C\uDDFD\",AL:\"\uD83C\uDDE6\uD83C\uDDF1\",DZ:\"\uD83C\uDDE9\uD83C\uDDFF\",AS:\"\uD83C\uDDE6\uD83C\uDDF8\",AD:\"\uD83C\uDDE6\uD83C\uDDE9\",AO:\"\uD83C\uDDE6\uD83C\uDDF4\",AI:\"\uD83C\uDDE6\uD83C\uDDEE\",AQ:\"\uD83C\uDDE6\uD83C\uDDF6\",AG:\"\uD83C\uDDE6\uD83C\uDDEC\",AR:\"\uD83C\uDDE6\uD83C\uDDF7\",AM:\"\uD83C\uDDE6\uD83C\uDDF2\",AW:\"\uD83C\uDDE6\uD83C\uDDFC\",AU:\"\uD83C\uDDE6\uD83C\uDDFA\",AT:\"\uD83C\uDDE6\uD83C\uDDF9\",AZ:\"\uD83C\uDDE6\uD83C\uDDFF\",BS:\"\uD83C\uDDE7\uD83C\uDDF8\",BH:\"\uD83C\uDDE7\uD83C\uDDED\",BD:\"\uD83C\uDDE7\uD83C\uDDE9\",BB:\"\uD83C\uDDE7\uD83C\uDDE7\",BY:\"\uD83C\uDDE7\uD83C\uDDFE\",BE:\"\uD83C\uDDE7\uD83C\uDDEA\",BZ:\"\uD83C\uDDE7\uD83C\uDDFF\",BJ:\"\uD83C\uDDE7\uD83C\uDDEF\",BM:\"\uD83C\uDDE7\uD83C\uDDF2\",BT:\"\uD83C\uDDE7\uD83C\uDDF9\",BO:\"\uD83C\uDDE7\uD83C\uDDF4\",BA:\"\uD83C\uDDE7\uD83C\uDDE6\",BW:\"\uD83C\uDDE7\uD83C\uDDFC\",BR:\"\uD83C\uDDE7\uD83C\uDDF7\",IO:\"\uD83C\uDDEE\uD83C\uDDF4\",VG:\"\uD83C\uDDFB\uD83C\uDDEC\",BN:\"\uD83C\uDDE7\uD83C\uDDF3\",BG:\"\uD83C\uDDE7\uD83C\uDDEC\",BF:\"\uD83C\uDDE7\uD83C\uDDEB\",BI:\"\uD83C\uDDE7\uD83C\uDDEE\",KH:\"\uD83C\uDDF0\uD83C\uDDED\",CM:\"\uD83C\uDDE8\uD83C\uDDF2\",CA:\"\uD83C\uDDE8\uD83C\uDDE6\",CV:\"\uD83C\uDDE8\uD83C\uDDFB\",BQ:\"\uD83C\uDDE7\uD83C\uDDF6\",KY:\"\uD83C\uDDF0\uD83C\uDDFE\",CF:\"\uD83C\uDDE8\uD83C\uDDEB\",TD:\"\uD83C\uDDF9\uD83C\uDDE9\",CL:\"\uD83C\uDDE8\uD83C\uDDF1\",CN:\"\uD83C\uDDE8\uD83C\uDDF3\",CX:\"\uD83C\uDDE8\uD83C\uDDFD\",CC:\"\uD83C\uDDE8\uD83C\uDDE8\",CO:\"\uD83C\uDDE8\uD83C\uDDF4\",KM:\"\uD83C\uDDF0\uD83C\uDDF2\",CG:\"\uD83C\uDDE8\uD83C\uDDEC\",CK:\"\uD83C\uDDE8\uD83C\uDDF0\",CR:\"\uD83C\uDDE8\uD83C\uDDF7\",HR:\"\uD83C\uDDED\uD83C\uDDF7\",CU:\"\uD83C\uDDE8\uD83C\uDDFA\",CW:\"\uD83C\uDDE8\uD83C\uDDFC\",CY:\"\uD83C\uDDE8\uD83C\uDDFE\",CZ:\"\uD83C\uDDE8\uD83C\uDDFF\",CD:\"\uD83C\uDDE8\uD83C\uDDE9\",DK:\"\uD83C\uDDE9\uD83C\uDDF0\",DJ:\"\uD83C\uDDE9\uD83C\uDDEF\",DM:\"\uD83C\uDDE9\uD83C\uDDF2\",DO:\"\uD83C\uDDE9\uD83C\uDDF4\",EC:\"\uD83C\uDDEA\uD83C\uDDE8\",EG:\"\uD83C\uDDEA\uD83C\uDDEC\",SV:\"\uD83C\uDDF8\uD83C\uDDFB\",GQ:\"\uD83C\uDDEC\uD83C\uDDF6\",ER:\"\uD83C\uDDEA\uD83C\uDDF7\",EE:\"\uD83C\uDDEA\uD83C\uDDEA\",ET:\"\uD83C\uDDEA\uD83C\uDDF9\",FK:\"\uD83C\uDDEB\uD83C\uDDF0\",FO:\"\uD83C\uDDEB\uD83C\uDDF4\",FM:\"\uD83C\uDDEB\uD83C\uDDF2\",FJ:\"\uD83C\uDDEB\uD83C\uDDEF\",FI:\"\uD83C\uDDEB\uD83C\uDDEE\",FR:\"\uD83C\uDDEB\uD83C\uDDF7\",GF:\"\uD83C\uDDEC\uD83C\uDDEB\",PF:\"\uD83C\uDDF5\uD83C\uDDEB\",TF:\"\uD83C\uDDF9\uD83C\uDDEB\",GA:\"\uD83C\uDDEC\uD83C\uDDE6\",GM:\"\uD83C\uDDEC\uD83C\uDDF2\",GE:\"\uD83C\uDDEC\uD83C\uDDEA\",DE:\"\uD83C\uDDE9\uD83C\uDDEA\",GH:\"\uD83C\uDDEC\uD83C\uDDED\",GI:\"\uD83C\uDDEC\uD83C\uDDEE\",GR:\"\uD83C\uDDEC\uD83C\uDDF7\",GL:\"\uD83C\uDDEC\uD83C\uDDF1\",GD:\"\uD83C\uDDEC\uD83C\uDDE9\",GP:\"\uD83C\uDDEC\uD83C\uDDF5\",GU:\"\uD83C\uDDEC\uD83C\uDDFA\",GT:\"\uD83C\uDDEC\uD83C\uDDF9\",GN:\"\uD83C\uDDEC\uD83C\uDDF3\",GW:\"\uD83C\uDDEC\uD83C\uDDFC\",GY:\"\uD83C\uDDEC\uD83C\uDDFE\",HT:\"\uD83C\uDDED\uD83C\uDDF9\",HN:\"\uD83C\uDDED\uD83C\uDDF3\",HK:\"\uD83C\uDDED\uD83C\uDDF0\",HU:\"\uD83C\uDDED\uD83C\uDDFA\",IS:\"\uD83C\uDDEE\uD83C\uDDF8\",IN:\"\uD83C\uDDEE\uD83C\uDDF3\",ID:\"\uD83C\uDDEE\uD83C\uDDE9\",IR:\"\uD83C\uDDEE\uD83C\uDDF7\",IQ:\"\uD83C\uDDEE\uD83C\uDDF6\",IE:\"\uD83C\uDDEE\uD83C\uDDEA\",IM:\"\uD83C\uDDEE\uD83C\uDDF2\",IL:\"\uD83C\uDDEE\uD83C\uDDF1\",IT:\"\uD83C\uDDEE\uD83C\uDDF9\",CI:\"\uD83C\uDDE8\uD83C\uDDEE\",JM:\"\uD83C\uDDEF\uD83C\uDDF2\",JP:\"\uD83C\uDDEF\uD83C\uDDF5\",JE:\"\uD83C\uDDEF\uD83C\uDDEA\",JO:\"\uD83C\uDDEF\uD83C\uDDF4\",KZ:\"\uD83C\uDDF0\uD83C\uDDFF\",KE:\"\uD83C\uDDF0\uD83C\uDDEA\",KI:\"\uD83C\uDDF0\uD83C\uDDEE\",XK:\"\uD83C\uDDFD\uD83C\uDDF0\",KW:\"\uD83C\uDDF0\uD83C\uDDFC\",KG:\"\uD83C\uDDF0\uD83C\uDDEC\",LA:\"\uD83C\uDDF1\uD83C\uDDE6\",LV:\"\uD83C\uDDF1\uD83C\uDDFB\",LB:\"\uD83C\uDDF1\uD83C\uDDE7\",LS:\"\uD83C\uDDF1\uD83C\uDDF8\",LR:\"\uD83C\uDDF1\uD83C\uDDF7\",LY:\"\uD83C\uDDF1\uD83C\uDDFE\",LI:\"\uD83C\uDDF1\uD83C\uDDEE\",LT:\"\uD83C\uDDF1\uD83C\uDDF9\",LU:\"\uD83C\uDDF1\uD83C\uDDFA\",MO:\"\uD83C\uDDF2\uD83C\uDDF4\",MK:\"\uD83C\uDDF2\uD83C\uDDF0\",MG:\"\uD83C\uDDF2\uD83C\uDDEC\",MW:\"\uD83C\uDDF2\uD83C\uDDFC\",MY:\"\uD83C\uDDF2\uD83C\uDDFE\",MV:\"\uD83C\uDDF2\uD83C\uDDFB\",ML:\"\uD83C\uDDF2\uD83C\uDDF1\",MT:\"\uD83C\uDDF2\uD83C\uDDF9\",MH:\"\uD83C\uDDF2\uD83C\uDDED\",MQ:\"\uD83C\uDDF2\uD83C\uDDF6\",MR:\"\uD83C\uDDF2\uD83C\uDDF7\",MU:\"\uD83C\uDDF2\uD83C\uDDFA\",YT:\"\uD83C\uDDFE\uD83C\uDDF9\",MX:\"\uD83C\uDDF2\uD83C\uDDFD\",MD:\"\uD83C\uDDF2\uD83C\uDDE9\",MC:\"\uD83C\uDDF2\uD83C\uDDE8\",MN:\"\uD83C\uDDF2\uD83C\uDDF3\",ME:\"\uD83C\uDDF2\uD83C\uDDEA\",MS:\"\uD83C\uDDF2\uD83C\uDDF8\",MA:\"\uD83C\uDDF2\uD83C\uDDE6\",MZ:\"\uD83C\uDDF2\uD83C\uDDFF\",MM:\"\uD83C\uDDF2\uD83C\uDDF2\",NA:\"\uD83C\uDDF3\uD83C\uDDE6\",NR:\"\uD83C\uDDF3\uD83C\uDDF7\",NP:\"\uD83C\uDDF3\uD83C\uDDF5\",NL:\"\uD83C\uDDF3\uD83C\uDDF1\",NC:\"\uD83C\uDDF3\uD83C\uDDE8\",NZ:\"\uD83C\uDDF3\uD83C\uDDFF\",NI:\"\uD83C\uDDF3\uD83C\uDDEE\",NE:\"\uD83C\uDDF3\uD83C\uDDEA\",NG:\"\uD83C\uDDF3\uD83C\uDDEC\",NU:\"\uD83C\uDDF3\uD83C\uDDFA\",NF:\"\uD83C\uDDF3\uD83C\uDDEB\",KP:\"\uD83C\uDDF0\uD83C\uDDF5\",MP:\"\uD83C\uDDF2\uD83C\uDDF5\",NO:\"\uD83C\uDDF3\uD83C\uDDF4\",OM:\"\uD83C\uDDF4\uD83C\uDDF2\",PK:\"\uD83C\uDDF5\uD83C\uDDF0\",PW:\"\uD83C\uDDF5\uD83C\uDDFC\",PS:\"\uD83C\uDDF5\uD83C\uDDF8\",PA:\"\uD83C\uDDF5\uD83C\uDDE6\",PG:\"\uD83C\uDDF5\uD83C\uDDEC\",PY:\"\uD83C\uDDF5\uD83C\uDDFE\",PE:\"\uD83C\uDDF5\uD83C\uDDEA\",PH:\"\uD83C\uDDF5\uD83C\uDDED\",PN:\"\uD83C\uDDF5\uD83C\uDDF3\",PL:\"\uD83C\uDDF5\uD83C\uDDF1\",PT:\"\uD83C\uDDF5\uD83C\uDDF9\",PR:\"\uD83C\uDDF5\uD83C\uDDF7\",QA:\"\uD83C\uDDF6\uD83C\uDDE6\",RE:\"\uD83C\uDDF7\uD83C\uDDEA\",RO:\"\uD83C\uDDF7\uD83C\uDDF4\",RU:\"\uD83C\uDDF7\uD83C\uDDFA\",RW:\"\uD83C\uDDF7\uD83C\uDDFC\",SH:\"\uD83C\uDDF8\uD83C\uDDED\",KN:\"\uD83C\uDDF0\uD83C\uDDF3\",LC:\"\uD83C\uDDF1\uD83C\uDDE8\",PM:\"\uD83C\uDDF5\uD83C\uDDF2\",VC:\"\uD83C\uDDFB\uD83C\uDDE8\",WS:\"\uD83C\uDDFC\uD83C\uDDF8\",SM:\"\uD83C\uDDF8\uD83C\uDDF2\",ST:\"\uD83C\uDDF8\uD83C\uDDF9\",SA:\"\uD83C\uDDF8\uD83C\uDDE6\",SN:\"\uD83C\uDDF8\uD83C\uDDF3\",RS:\"\uD83C\uDDF7\uD83C\uDDF8\",SC:\"\uD83C\uDDF8\uD83C\uDDE8\",SL:\"\uD83C\uDDF8\uD83C\uDDF1\",SG:\"\uD83C\uDDF8\uD83C\uDDEC\",SX:\"\uD83C\uDDF8\uD83C\uDDFD\",SK:\"\uD83C\uDDF8\uD83C\uDDF0\",SI:\"\uD83C\uDDF8\uD83C\uDDEE\",SB:\"\uD83C\uDDF8\uD83C\uDDE7\",SO:\"\uD83C\uDDF8\uD83C\uDDF4\",ZA:\"\uD83C\uDDFF\uD83C\uDDE6\",GS:\"\uD83C\uDDEC\uD83C\uDDF8\",KR:\"\uD83C\uDDF0\uD83C\uDDF7\",SS:\"\uD83C\uDDF8\uD83C\uDDF8\",ES:\"\uD83C\uDDEA\uD83C\uDDF8\",LK:\"\uD83C\uDDF1\uD83C\uDDF0\",SD:\"\uD83C\uDDF8\uD83C\uDDE9\",SR:\"\uD83C\uDDF8\uD83C\uDDF7\",SJ:\"\uD83C\uDDF8\uD83C\uDDEF\",SZ:\"\uD83C\uDDF8\uD83C\uDDFF\",SE:\"\uD83C\uDDF8\uD83C\uDDEA\",CH:\"\uD83C\uDDE8\uD83C\uDDED\",SY:\"\uD83C\uDDF8\uD83C\uDDFE\",TW:\"\uD83C\uDDF9\uD83C\uDDFC\",TJ:\"\uD83C\uDDF9\uD83C\uDDEF\",TZ:\"\uD83C\uDDF9\uD83C\uDDFF\",TH:\"\uD83C\uDDF9\uD83C\uDDED\",TL:\"\uD83C\uDDF9\uD83C\uDDF1\",TG:\"\uD83C\uDDF9\uD83C\uDDEC\",TK:\"\uD83C\uDDF9\uD83C\uDDF0\",TO:\"\uD83C\uDDF9\uD83C\uDDF4\",TT:\"\uD83C\uDDF9\uD83C\uDDF9\",TN:\"\uD83C\uDDF9\uD83C\uDDF3\",TR:\"\uD83C\uDDF9\uD83C\uDDF7\",TM:\"\uD83C\uDDF9\uD83C\uDDF2\",TC:\"\uD83C\uDDF9\uD83C\uDDE8\",TV:\"\uD83C\uDDF9\uD83C\uDDFB\",UG:\"\uD83C\uDDFA\uD83C\uDDEC\",UA:\"\uD83C\uDDFA\uD83C\uDDE6\",AE:\"\uD83C\uDDE6\uD83C\uDDEA\",GB:\"\uD83C\uDDEC\uD83C\uDDE7\",US:\"\uD83C\uDDFA\uD83C\uDDF8\",UM:\"\uD83C\uDDFA\uD83C\uDDF2\",VI:\"\uD83C\uDDFB\uD83C\uDDEE\",UY:\"\uD83C\uDDFA\uD83C\uDDFE\",UZ:\"\uD83C\uDDFA\uD83C\uDDFF\",VU:\"\uD83C\uDDFB\uD83C\uDDFA\",VA:\"\uD83C\uDDFB\uD83C\uDDE6\",VE:\"\uD83C\uDDFB\uD83C\uDDEA\",VN:\"\uD83C\uDDFB\uD83C\uDDF3\",WF:\"\uD83C\uDDFC\uD83C\uDDEB\",EH:\"\uD83C\uDDEA\uD83C\uDDED\",YE:\"\uD83C\uDDFE\uD83C\uDDEA\",ZM:\"\uD83C\uDDFF\uD83C\uDDF2\",ZW:\"\uD83C\uDDFF\uD83C\uDDFC\"},a.prototype.continents={EA:{iso:\"EA\",name:\"World\"},AF:{iso:\"AF\",name:\"Africa\",pan:{x:454,y:250},zoom:1.9},AS:{iso:\"AS\",name:\"Asia\",pan:{x:904,y:80},zoom:1.8},EU:{iso:\"EU\",name:\"Europe\",pan:{x:404,y:80},zoom:5},NA:{iso:\"NA\",name:\"North America\",pan:{x:104,y:55},zoom:2.6},MA:{iso:\"MA\",name:\"Middle America\",pan:{x:104,y:200},zoom:2.6},SA:{iso:\"SA\",name:\"South America\",pan:{x:104,y:340},zoom:2.2},OC:{iso:\"OC\",name:\"Oceania\",pan:{x:954,y:350},zoom:1.9}},a.prototype.createMap=function(){this.createTooltip(),this.mapWrapper=this.createElement(\"div\",\"svgMap-map-wrapper\",this.mapContainer),this.mapImage=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),this.mapImage.setAttribute(\"viewBox\",\"0 0 2000 1001\"),this.mapImage.classList.add(\"svgMap-map-image\"),this.mapWrapper.appendChild(this.mapImage);var e,l=this.createElement(\"div\",\"svgMap-map-controls-wrapper\",this.mapWrapper),o=this.createElement(\"div\",\"svgMap-map-controls-zoom\",l);[\"in\",\"out\",\"reset\"].forEach(function(l){var t;(\"reset\"===l&&this.options.showZoomReset||\"reset\"!==l)&&(this[t=\"zoomControl\"+l.charAt(0).toUpperCase()+l.slice(1)]=this.createElement(\"button\",\"svgMap-control-button svgMap-zoom-button svgMap-zoom-\"+l+\"-button\",o),this[t].type=\"button\",this[t].addEventListener(\"click\",function(){this.zoomMap(l)}.bind(this),{passive:!0}))}.bind(this)),this.zoomControlIn.setAttribute(\"aria-label\",\"Zoom in\"),this.zoomControlOut.setAttribute(\"aria-label\",\"Zoom out\"),this.options.showContinentSelector&&(t=this.createElement(\"div\",\"svgMap-map-continent-controls-wrapper\",this.mapWrapper),this.continentSelect=this.createElement(\"select\",\"svgMap-continent-select\",t),e=this,Object.keys(a.prototype.continents).forEach(function(l){let t=e.createElement(\"option\",\"svgMap-continent-option svgMap-continent-iso-\"+a.prototype.continents[l].iso,e.continentSelect,a.prototype.continents[l].name);t.value=l}),this.continentSelect.addEventListener(\"change\",function(l){l.target.value&&this.zoomContinent(l.target.value)}.bind(e),{passive:!0}),t.setAttribute(\"aria-label\",\"Select continent\"));var t=Object.assign({},this.mapPaths);this.options.countries.EH||(t.MA.d=t[\"MA-EH\"].d,delete t.EH),delete t[\"MA-EH\"],\"RU\"===this.options.countries.Crimea&&(t.RU.d=t[\"RU-WITH-CRIMEA\"].d,t.UA.d=t[\"UA-WITHOUT-CRIMEA\"].d),delete t[\"RU-WITH-CRIMEA\"],delete t[\"UA-WITHOUT-CRIMEA\"],this.tooltipMoveEvent=function(l){this.moveTooltip(l)}.bind(this),Object.keys(t).forEach(function(l){var t=this.mapPaths[l];if(t.d){var i=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");if(i.setAttribute(\"d\",t.d),i.setAttribute(\"id\",this.id+\"-map-country-\"+l),i.setAttribute(\"data-id\",l),i.classList.add(\"svgMap-country\"),this.mapImage.appendChild(i),i.addEventListener(\"touchstart\",function(l){i.parentNode.appendChild(i),i.classList.add(\"svgMap-active\");var t=i.getAttribute(\"data-id\"),e=i.getAttribute(\"data-link\");this.options.touchLink&&e?window.location.href=e:(this.setTooltipContent(this.getTooltipContent(t)),this.showTooltip(l),this.moveTooltip(l),i.addEventListener(\"touchmove\",this.tooltipMoveEvent,{passive:!0}))}.bind(this),{passive:!0}),i.addEventListener(\"mouseenter\",function(l){i.parentNode.appendChild(i);var t=i.getAttribute(\"data-id\");this.setTooltipContent(this.getTooltipContent(t)),this.showTooltip(l),i.addEventListener(\"mousemove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0}),this.options.data.values&&this.options.data.values[l]&&this.options.data.values[l].link){i.setAttribute(\"data-link\",this.options.data.values[l].link),this.options.data.values[l].linkTarget&&i.setAttribute(\"data-link-target\",this.options.data.values[l].linkTarget);let o=!1;i.addEventListener(\"mousedown\",function(){o=!1}),i.addEventListener(\"touchstart\",function(){o=!1}),i.addEventListener(\"mousemove\",function(){o=!0}),i.addEventListener(\"touchmove\",function(){o=!0});l=function(l){var t,e;o||(t=i.getAttribute(\"data-link\"),(e=i.getAttribute(\"data-link-target\"))?window.open(t,e):window.location.href=t)};i.addEventListener(\"click\",l),i.addEventListener(\"touchend\",l)}i.addEventListener(\"mouseleave\",function(){this.hideTooltip(),i.removeEventListener(\"mousemove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0}),i.addEventListener(\"touchend\",function(){this.hideTooltip(),i.classList.remove(\"svgMap-active\"),i.removeEventListener(\"touchmove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0})}}.bind(this));var n=this;this.mapPanZoom=i(this.mapImage,{zoomEnabled:!0,fit:!0,center:!0,minZoom:this.options.minZoom,maxZoom:this.options.maxZoom,zoomScaleSensitivity:this.options.zoomScaleSensitivity,controlIconsEnabled:!1,mouseWheelZoomEnabled:this.options.mouseWheelZoomEnabled,preventMouseEventsDefault:!0,onZoom:function(){n.setControlStatuses()},beforePan:function(l,t){var e=.85*n.mapWrapper.offsetWidth,o=.85*n.mapWrapper.offsetHeight,i=this.getSizes(),a=-((i.viewBox.x+i.viewBox.width)*i.realZoom)+e,L=i.width-e-i.viewBox.x*i.realZoom,e=-((i.viewBox.y+i.viewBox.height)*i.realZoom)+o,i=i.height-o-i.viewBox.y*i.realZoom;return{x:Math.max(a,Math.min(L,t.x)),y:Math.max(e,Math.min(i,t.y))}}}),0!=this.options.initialPan.x||0!=this.options.initialPan.y?this.mapPanZoom.zoomAtPointBy(this.options.initialZoom,{x:this.options.initialPan.x,y:this.options.initialPan.y}):this.mapPanZoom.zoom(this.options.initialZoom),this.setControlStatuses()},a.prototype.getTooltipContent=function(e){if(this.options.onGetTooltip){var l=this.options.onGetTooltip(this.tooltip,e,this.options.data.values[e]);if(l)return l}l=this.createElement(\"div\",\"svgMap-tooltip-content-container\");!1===this.options.hideFlag&&(t=this.createElement(\"div\",\"svgMap-tooltip-flag-container svgMap-tooltip-flag-container-\"+this.options.flagType,l),\"image\"===this.options.flagType?this.createElement(\"img\",\"svgMap-tooltip-flag\",t).setAttribute(\"src\",this.options.flagURL.replace(\"{0}\",e.toLowerCase())):\"emoji\"===this.options.flagType&&(t.innerHTML=this.emojiFlags[e])),this.createElement(\"div\",\"svgMap-tooltip-title\",l).innerHTML=this.getCountryName(e);var o,t=this.createElement(\"div\",\"svgMap-tooltip-content\",l);return this.options.data.values[e]?(o=\"<table>\",Object.keys(this.options.data.data).forEach(function(l){var t=this.options.data.data[l],l=this.options.data.values[e][l];(void 0!==l&&!0===this.options.hideMissingData||!1===this.options.hideMissingData)&&(t.floatingNumbers&&(l=l.toFixed(1)),t.thousandSeparator&&(l=this.numberWithCommas(l,t.thousandSeparator)),l=t.format?t.format.replace(\"{0}\",\"<span>\"+l+\"</span>\"):\"<span>\"+l+\"</span>\",o+=\"<tr><td>\"+(t.name||\"\")+\"</td><td>\"+l+\"</td></tr>\")}.bind(this)),o+=\"</table>\",t.innerHTML=o):this.createElement(\"div\",\"svgMap-tooltip-no-data\",t).innerHTML=this.options.noDataText,l},a.prototype.setControlStatuses=function(){this.zoomControlIn.classList.remove(\"svgMap-disabled\"),this.zoomControlIn.setAttribute(\"aria-disabled\",\"false\"),this.zoomControlOut.classList.remove(\"svgMap-disabled\"),this.zoomControlOut.setAttribute(\"aria-disabled\",\"false\"),this.options.showZoomReset&&(this.zoomControlReset.classList.remove(\"svgMap-disabled\"),this.zoomControlReset.setAttribute(\"aria-disabled\",\"false\")),this.mapPanZoom.getZoom().toFixed(3)<=this.options.minZoom&&(this.zoomControlOut.classList.add(\"svgMap-disabled\"),this.zoomControlOut.setAttribute(\"aria-disabled\",\"true\")),this.mapPanZoom.getZoom().toFixed(3)>=this.options.maxZoom&&(this.zoomControlIn.classList.add(\"svgMap-disabled\"),this.zoomControlIn.setAttribute(\"aria-disabled\",\"true\")),this.options.showZoomReset&&this.mapPanZoom.getZoom().toFixed(3)==this.options.initialZoom&&(this.zoomControlReset.classList.add(\"svgMap-disabled\"),this.zoomControlReset.setAttribute(\"aria-disabled\",\"true\"))},a.prototype.zoomMap=function(l){if(this[\"zoomControl\"+l.charAt(0).toUpperCase()+l.slice(1)].classList.contains(\"svgMap-disabled\"))return!1;\"reset\"===l?(this.mapPanZoom.reset(),0!=this.options.initialPan.x||0!=this.options.initialPan.y?this.mapPanZoom.zoomAtPointBy(this.options.initialZoom,{x:this.options.initialPan.x,y:this.options.initialPan.y}):this.mapPanZoom.zoom(this.options.initialZoom)):this.mapPanZoom[\"in\"==l?\"zoomIn\":\"zoomOut\"]()},a.prototype.zoomContinent=function(l){l=this.continents[l];\"EA\"==l.iso?this.mapPanZoom.reset():l.pan&&(this.mapPanZoom.reset(),this.mapPanZoom.zoomAtPoint(l.zoom,l.pan))},a.prototype.addMouseWheelZoomNotice=function(){var l=document.createElement(\"div\");l.classList.add(\"svgMap-block-zoom-notice\");var t=document.createElement(\"div\");t.innerHTML=-1!=navigator.appVersion.indexOf(\"Mac\")?this.options.mouseWheelKeyMessageMac:this.options.mouseWheelKeyMessage,l.append(t),this.wrapper.append(l)},a.prototype.showMouseWheelZoomNotice=function(l){this.mouseWheelNoticeJustHidden||(this.autoHideMouseWheelNoticeTimeout&&clearTimeout(this.autoHideMouseWheelNoticeTimeout),this.autoHideMouseWheelNoticeTimeout=setTimeout(function(){this.hideMouseWheelZoomNotice()}.bind(this),l||2400),this.wrapper.classList.add(\"svgMap-block-zoom-notice-active\"))},a.prototype.hideMouseWheelZoomNotice=function(){this.wrapper.classList.remove(\"svgMap-block-zoom-notice-active\"),this.autoHideMouseWheelNoticeTimeout&&clearTimeout(this.autoHideMouseWheelNoticeTimeout)},a.prototype.blockMouseWheelZoomNotice=function(l){this.mouseWheelNoticeJustHidden=!0,this.mouseWheelNoticeJustHiddenTimeout&&clearTimeout(this.mouseWheelNoticeJustHiddenTimeout),this.mouseWheelNoticeJustHiddenTimeout=setTimeout(function(){this.mouseWheelNoticeJustHidden=!1}.bind(this),l||600)},a.prototype.addMouseWheelZoomWithKeyEvents=function(){if(this.wrapper.addEventListener(\"wheel\",function(l){document.body.classList.contains(\"svgMap-zoom-key-pressed\")?(this.hideMouseWheelZoomNotice(),this.blockMouseWheelZoomNotice()):this.showMouseWheelZoomNotice()}.bind(this),{passive:!0}),document.addEventListener(\"keydown\",function(l){\"Alt\"!=l.key&&\"Control\"!=l.key&&\"Meta\"!=l.key&&\"Shift\"!=l.key||(document.body.classList.add(\"svgMap-zoom-key-pressed\"),this.hideMouseWheelZoomNotice(),this.blockMouseWheelZoomNotice())}.bind(this)),this.wrapper.addEventListener(\"wheel\",function(l){(l.altKey||l.ctrlKey||l.metaKey||l.shiftKey)&&document.body.classList.add(\"svgMap-zoom-key-pressed\")}),document.body.classList.contains(\"svgMap-key-events-added\"))return!1;document.body.classList.add(\"svgMap-key-events-added\"),document.addEventListener(\"keyup\",function(l){\"Alt\"!=l.key&&\"Control\"!=l.key&&\"Meta\"!=l.key&&\"Shift\"!=l.key||document.body.classList.remove(\"svgMap-zoom-key-pressed\")})},a.prototype.mapPaths={AF:{d:\"M1369.9,333.8h-5.4l-3.8-0.5l-2.5,2.9l-2.1,0.7l-1.5,1.3l-2.6-2.1l-1-5.4l-1.6-0.3v-2l-3.2-1.5l-1.7,2.3l0.2,2.6 l-0.6,0.9l-3.2-0.1l-0.9,3l-2.1-1.3l-3.3,2.1l-1.8-0.8l-4.3-1.4h-2.9l-1.6-0.2l-2.9-1.7l-0.3,2.3l-4.1,1.2l0.1,5.2l-2.5,2l-4,0.9 l-0.4,3l-3.9,0.8l-5.9-2.4l-0.5,8l-0.5,4.7l2.5,0.9l-1.6,3.5l2.7,5.1l1.1,4l4.3,1.1l1.1,4l-3.9,5.8l9.6,3.2l5.3-0.9l3.3,0.8l0.9-1.4 l3.8,0.5l6.6-2.6l-0.8-5.4l2.3-3.6h4l0.2-1.7l4-0.9l2.1,0.6l1.7-1.8l-1.1-3.8l1.5-3.8l3-1.6l-3-4.2l5.1,0.2l0.9-2.3l-0.8-2.5l2-2.7 l-1.4-3.2l-1.9-2.8l2.4-2.8l5.3-1.3l5.8-0.8l2.4-1.2l2.8-0.7L1369.9,333.8L1369.9,333.8z\"},AL:{d:\"M1077.5,300.5l-2,3.1l0.5,1.9l0,0l1,1l-0.5,1.9l-0.1,4.3l0.7,3l3,2.1l0.2,1.4l1,0.4l2.1-3l0.1-2.1l1.6-0.9V312 l-2.3-1.6l-0.9-2.6l0.4-2.1l0,0l-0.5-2.3l-1.3-0.6l-1.3-1.6l-1.3,0.5L1077.5,300.5L1077.5,300.5z\"},DZ:{d:\"M1021,336.9l-3.6,0.4l-2.2-1.5h-5.6l-4.9,2.6l-2.7-1l-8.7,0.5l-8.9,1.2l-5,2l-3.4,2.6l-5.7,1.2l-5.1,3.5l2,4.1 l0.3,3.9l1.8,6.7l1.4,1.4l-1,2.5l-7,1l-2.5,2.4l-3.1,0.5l-0.3,4.7l-6.3,2.5l-2.1,3.2L944,383l-5.4,1l-8.9,4.7l-0.1,7.5v0.4l-0.1,1.2 l20.3,15.5l18.4,13.9l18.6,13.8l1.3,3l3.4,1.8l2.6,1.1l0.1,4l6.1-0.6l7.8-2.8l15.8-12.5l18.6-12.2l-2.5-4l-4.3-2.9l-2.6,1.2l-2-3.6 l-0.2-2.7l-3.4-4.7l2.1-2.6l-0.5-4l0.6-3.5l-0.5-2.9l0.9-5.2l-0.4-3l-1.9-5.6l-2.6-11.3l-3.4-2.6v-1.5l-4.5-3.8l-0.6-4.8l3.2-3.6 l1.1-5.3l-1-6.2L1021,336.9L1021,336.9z\"},AD:{d:\"M985.4,301.7l0.2-0.4l-0.2-0.2l-0.7-0.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l0.1,0.1v0.4l0.1,0.2h0.4L985.4,301.7 L985.4,301.7z\"},AO:{d:\"M1068.3,609.6l-16.6-0.1l-1.9,0.7l-1.7-0.1l-2.3,0.9l-0.5,1.2l2.8,4l1.1,4.3l1.6,6.1l-1.7,2.6l-0.3,1.3l1.3,3.8 l1.5,3.9l1.6,2.2l0.3,3.6l-0.7,4.8l-1.8,2.8l-3.3,4.2l-1.3,2.6l-1.9,5.7l-0.3,2.7l-2,5.9l-0.9,5.5l0.5,4l2.7-1.2l3.3-1l3.6,0.1 l3.2,2.9l0.9-0.4l22.5-0.3l3.7,3l13.4,0.9l10.3-2.5l-3.5-4l-3.6-5.2l0.8-20.3l11.6,0.1l-0.5-2.2l0.9-2.4l-0.9-3l0.7-3l-0.5-2 l-2.6-0.4l-3.5,1l-2.4-0.2l-1.4,0.6l0.5-7.6l-1.9-2.3l-0.3-4l0.9-3.8l-1.2-2.4v-4h-6.8l0.5-2.3h-2.9l-0.3,1.1l-3.4,0.3l-1.5,3.7 l-0.9,1.6l-3-0.9l-1.9,0.9l-3.7,0.5l-2.1-3.3l-1.3-2.1l-1.6-3.8L1068.3,609.6L1068.3,609.6z M1046.5,608.3l0.2-2.7l0.9-1.7l2-1.3 l-2-2.2l-1.8,1.1l-2.2,2.7l1.4,4.8L1046.5,608.3L1046.5,608.3z\"},AI:{d:\"M627.9,456.2l0.1-0.2l-0.2-0.1l-0.8,0.5v0.1L627.9,456.2z\"},AG:{d:\"M634.3,463.8l0.2-0.1v-0.1v-0.2l-0.1-0.1l-0.1-0.2l-0.4-0.2l-0.5,0.5v0.2l0.1,0.3l0.6,0.1L634.3,463.8L634.3,463.8z M634.5,460.3v-0.5l-0.1-0.2h-0.3l-0.1-0.1h-0.1l-0.1,0.1l0.1,0.6l0.5,0.3L634.5,460.3L634.5,460.3z\"},AR:{d:\"M669.8,920.7l0.9-3l-7.3-1.5l-7.7-3.6l-4.3-4.6l-3-2.8l5.9,13.5h5l2.9,0.2l3.3,2.1L669.8,920.7L669.8,920.7z M619.4,712.6l-7.4-1.5l-4,5.7l0.9,1.6l-1.1,6.6l-5.6,3.2l1.6,10.6l-0.9,2l2,2.5l-3.2,4l-2.6,5.9l-0.9,5.8l1.7,6.2l-2.1,6.5 l4.9,10.9l1.6,1.2l1.3,5.9l-1.6,6.2l1.4,5.4l-2.9,4.3l1.5,5.9l3.3,6.3l-2.5,2.4l0.3,5.7l0.7,6.4l3.3,7.6l-1.6,1.2l3.6,7.1l3.1,2.3 l-0.8,2.6l2.8,1.3l1.3,2.3l-1.8,1.1l1.8,3.7l1.1,8.2l-0.7,5.3l1.8,3.2l-0.1,3.9l-2.7,2.7l3.1,6.6l2.6,2.2l3.1-0.4l1.8,4.6l3.5,3.6 l12,0.8l4.8,0.9l2.2,0.4l-4.7-3.6l-4.1-6.3l0.9-2.9l3.5-2.5l0.5-7.2l4.7-3.5l-0.2-5.6l-5.2-1.3l-6.4-4.5l-0.1-4.7l2.9-3.1l4.7-0.1 l0.2-3.3l-1.2-6.1l2.9-3.9l4.1-1.9l-2.5-3.2l-2.2,2l-4-1.9l-2.5-6.2l1.5-1.6l5.6,2.3l5-0.9l2.5-2.2l-1.8-3.1l-0.1-4.8l-2-3.8 l5.8,0.6l10.2-1.3l6.9-3.4l3.3-8.3l-0.3-3.2l-3.9-2.8l-0.1-4.5l-7.8-5.5l-0.3-3.3l-0.4-4.2l0.9-1.4l-1.1-6.3l0.3-6.5l0.5-5.1 l5.9-8.6l5.3-6.2l3.3-2.6l4.2-3.5l-0.5-5.1l-3.1-3.7l-2.6,1.2l-0.3,5.7l-4.3,4.8l-4.2,1.1l-6.2-1l-5.7-1.8l4.2-9.6l-1.1-2.8 l-5.9-2.5l-7.2-4.7l-4.6-1L632,713.7l-1-1.3l-6.3-0.3l-1.6,5.1L619.4,712.6L619.4,712.6z\"},AM:{d:\"M1219,325.1l-0.9-4.4l-2.5-1.1l-2.5-1.7l1-2l-3.1-2.2l0.7-1.5l-2.2-1.1l-1.4-1.7l-6.9,1l1.3,2.2v3.1l4.2,1.5 l2.4,1.9l1-0.2l1.8,1.7h2.3l0.2,1l2.8,3.7L1219,325.1L1219,325.1z\"},AW:{d:\"M586.6,492.9l-0.1-0.1l-0.3-0.6l-0.3-0.3l-0.1,0.1l-0.1,0.3l0.3,0.3l0.3,0.4l0.3,0.1L586.6,492.9L586.6,492.9z\"},AU:{d:\"M1726.7,832l-3-0.5l-1.9,2.9l-0.6,5.4l-2.1,4l-0.5,5.3l3,0.2l0.8,0.3l6.6-4.3l0.6,1.7l4-4.9l3.2-2.2l4.5-7.3 l-2.8-0.5l-4.8,1.2l-3.4,0.9L1726.7,832L1726.7,832z M1776.8,659.7l0.5-2.3l0.1-3.6l-1.6-3.2l0.1-2.7l-1.3-0.8l0.1-3.9l-1.2-3.2 l-2.3,2.4l-0.4,1.8l-1.5,3.5l-1.8,3.4l0.6,2.1l-1.2,1.3l-1.5,4.8l0.1,3.7l-0.7,1.8l0.3,3.1l-2.6,5l-1.3,3.5l-1.7,2.9l-1.7,3.4 l-4.1,2.1l-4.9-2.1l-0.5-2l-2.5-1.6h-1.6l-3.3-3.8l-2.5-2.2l-3.9-2l-3.9-3.5l-0.1-1.8l2.5-3.1l2.1-3.2l-0.3-2.6l1.9-0.2l2.5-2.5 l2-3.4l-2.2-3.2l-1.5,1.2l-2-0.5l-3.5,1.8l-3.2-2l-1.7,0.7l-4.5-1.6l-2.7-2.7l-3.5-1.5l-3.1,0.9l3.9,2.1l-0.3,3.2l-4.8,1.2l-2.8-0.7 l-3.6,2.2l-2.9,3.7l0.6,1.5l-2.7,1.7l-3.4,5.1l0.6,3.5l-3.4-0.6h-3.5l-2.5-3.8l-3.7-2.9l-2.8,0.8l-2.6,0.9l-0.3,1.6l-2.4-0.7 l-0.3,1.8l-3,1.1l-1.7,2.5l-3.5,3.1l-1.4,4.8l-2.3-1.3l-2.2,3.1l1.5,3l-2.6,1.2l-1.4-5.5l-4.8,5.4l-0.8,3.5l-0.7,2.5l-3.8,3.3 l-2,3.4l-3.5,2.8l-6.1,1.9l-3.1-0.2l-1.5,0.6l-1.1,1.4l-3.5,0.7l-4.7,2.4l-1.4-0.8l-2.6,0.5l-4.6,2.3l-3.2,2.7l-4.8,2.1l-3.1,4.4 l0.4-4.8l-3.1,4.6l-0.1,3.7l-1.3,3.2l-1.5,1.5l-1.3,3.7l0.9,1.9l0.1,2l1.6,5l-0.7,3.3l-1-2.5l-2.3-1.8l0.4,5.9l-1.7-2.8l0.1,2.8 l1.8,5l-0.6,5l1.7,2.5l-0.4,1.9l0.9,4.1l-1.3,3.6l-0.3,3.6l0.7,6.5l-0.7,3.7l-2.2,4.4l-0.6,2.3l-1.5,1.5l-2.9,0.8l-1.5,3.7l2.4,1.2 l4,4.1h3.6l3.8,0.3l3.3-2.1l3.4-1.8l1.4,0.3l4.5-3.4l3.8-0.3l4.1-0.7l4.2,1.2l3.6-0.6l4.6-0.2l3-2.6l2.3-3.3l5.2-1.5l6.9-3.2l5,0.4 l6.9-2.1l7.8-2.3l9.8-0.6l4,3.1l3.7,0.2l5.3,3.8l-1.6,1.5l1.8,2.4l1.3,4.6l-1.6,3.4l2.9,2.6l4.3-5.1l4.3-2.1l6.7-5.5l-1.6,4.7 l-3.4,3.2l-2.5,3.7l-4.4,3.5l5.2-1.2l4.7-4.4l-0.9,4.8l-3.2,3.1l4.7,0.8l1.3,2.6l-0.4,3.3l-1.5,4.9l1.4,4l4,1.9l2.8,0.4l2.4,1 l3.5,1.8l7.2-4.7l3.5-1.2l-2.7,3.4l2.6,1.1l2.7,2.8l4.7-2.7l3.8-2.5l6.3-2.7l6-0.2l4.2-2.3l0.9-2l3-4.5l3.9-4.8l3.6-3.2l4.4-5.6 l3.3-3.1l4.4-5l5.4-3.1l5-5.8l3.1-4.5l1.4-3.6l3.8-5.7l2.1-2.9l2.5-5.7l-0.7-5.4l1.7-3.9l1.1-3.7v-5.1l-2.8-5.1l-1.9-2.5l-2.9-3.9 l0.7-6.7l-1.5,1l-1.6-2.8l-2.5,1.4l-0.6-6.9l-2.2-4l1-1.5l-3.1-2.8l-3.2-3l-5.3-3.3l-0.9-4.3l1.3-3.3l-0.4-5.5l-1.3-0.7l-0.2-3.2 l-0.2-5.5l1.1-2.8l-2.3-2.5l-1.4-2.7l-3.9,2.4L1776.8,659.7L1776.8,659.7z\"},AT:{d:\"M1060.2,264l-2.3-1.2l-2.3,0.3l-4-1.9l-1.7,0.5l-2.6,2.5l-3.8-2l-1.5,2.9l-1.7,0.8l1,4l-0.4,1.1l-1.7-1.3l-2.4-0.2 l-3.4,1.2l-4.4-0.3l-0.6,1.6l-2.6-1.7l-1.5,0.3l0.2,1.1l-0.7,1.6l2.3,1.1l2.6,0.2l3.1,0.9l0.5-1.2l4.8-1.1l1.3,2.2l7.2,1.6l4.2,0.4 l2.4-1.4l4.3-0.1l0.9-1.1l1.3-4l-1.1-1.3h2.8l0.2-2.6l-0.7-2.1L1060.2,264L1060.2,264z\"},AZ:{d:\"M1210.1,318.9l-1,0.2l1.2,2.4l3.2,2.9l3.7,0.9l-2.8-3.7l-0.2-1h-2.3L1210.1,318.9L1210.1,318.9z M1220.5,309.6 l-4.3-3.8l-1.5-0.2l-1.1,0.9l3.2,3.4l-0.6,0.7l-2.8-0.4l-4.2-1.8l-1.1,1l1.4,1.7l2.2,1.1l-0.7,1.5l3.1,2.2l-1,2l2.5,1.7l2.5,1.1 l0.9,4.4l5.3-4.7l1.9-0.5l1.9,1.9l-1.2,3.1l3.8,3.4l1.3-0.3l-0.8-3.2l1.7-1.5l0.4-2.2l-0.1-5l4.2-0.5l-2-1.7l-2.5-0.2l-3.5-4.5 l-3.4-3.2l0,0l-2.6,2.5l-0.5,1.5L1220.5,309.6L1220.5,309.6z\"},BS:{d:\"M574.4,437.3l0.2-0.6l-0.3-0.1l-0.5,0.7l-0.6,0.3h-0.3l-0.7-0.3h-0.5l-0.4,0.5l-0.6,0.1l0.1,0.1v0.2l-0.2,0.3v0.2 l0.1,0.3l1.5-0.1l1.3-0.2l0.7-0.9L574.4,437.3z M575.2,435.3l-0.4-0.3l-0.4,0.3l0.1,0.3L575.2,435.3L575.2,435.3z M575.2,429.5 l-0.4-0.2l-0.3,0.5l0.3,0.1l0.7-0.1l0.5,0.1l0.5,0.4l0.3-0.2l-0.1-0.1l-0.4-0.3l-0.6-0.1h-0.2L575.2,429.5L575.2,429.5z M568.6,430.8l0.7-0.6l0.7-0.3l0.9-1.1l-0.1-0.9l0.2-0.4l-0.6,0.1l-0.1,0.3l-0.1,0.3l0.3,0.4v0.2l-0.2,0.4l-0.3,0.1l-0.1,0.2 l-0.3,0.1l-0.4,0.5l-0.8,0.6l-0.2,0.3L568.6,430.8L568.6,430.8z M569.8,427.6l-0.6-0.2L569,427l-0.4-0.1l-0.1,0.2v0.2l0.1,0.4 l0.2-0.1l0.8,0.4l0.4-0.3L569.8,427.6z M565.7,426.5v-0.7l-0.4-0.5l-0.6-0.4l-0.1-1.2l-0.3-0.7l-0.2-0.6l-0.4-0.8v0.5l0.1,0.1 l0.1,0.6l0.4,0.9l0.1,0.4l-0.1,0.4l-0.4,0.1l-0.1,0.2l0.5,0.3l0.8,0.3l0.5,1.3L565.7,426.5L565.7,426.5z M561.6,423l-0.5-0.3 l-0.2-0.3l-0.7-0.7l-0.3-0.1l-0.2,0.4l0.4,0.1l0.9,0.7l0.4,0.2L561.6,423L561.6,423z M568.9,419l-0.1-0.3h-0.1l-0.3,0.1l-0.3,0.9 h0.3L568.9,419L568.9,419z M551.3,417.9l-0.2-0.3l-0.3,0.2h-0.5l-0.2,0.1h-0.4l-0.3,0.2l0.4,0.8l0.3,0.3l0.1,1l0.2,0.1l-0.1,0.7 l1.1,0.1l0.4-0.8V420v-0.1v-0.2v-0.2v-0.9l-0.3-0.5l-0.4,0.6l-0.4-0.3l0.6-0.4L551.3,417.9L551.3,417.9z M564.2,418.2l-1-1.4v-0.2 l-0.5-1.5l-0.3-0.1l-0.1,0.1l-0.1,0.2l0.4,0.4v0.4l0.3,0.2l0.4,1.1l0.4,0.4l-0.1,0.3l-0.4,0.3l-0.1,0.2h0.1l0.6-0.1h0.4L564.2,418.2 L564.2,418.2z M553.7,413l0.5-0.2l0,0l-0.3-0.2h-0.7l-0.4,0.1l-0.2,0.2l0.1,0.1l0.4,0.1L553.7,413L553.7,413z M551.3,415l-0.5-0.6 l-0.3-0.9l-0.2-0.4l0.1-0.5l-0.3-0.4l-0.6-0.4l-0.3,0.1l0.1,1.1l-0.2,0.6l-0.8,1.1l0.1,0.4l0,0l0.1,0.2l-0.5,0.4v-0.3l-0.6,0.1 l0.3,0.5l0.6,0.4l0.3,0.1l0.3-0.2v0.5l0.3,0.4l0.1,0.4l0.3-0.3l0.6-0.2l0.2-0.2l0.7-0.4v-0.2l0.1-0.6L551.3,415L551.3,415z M558,410 l-0.3-0.5l-0.1,0.1l-0.1,0.4l-0.3,0.4l0.5-0.1l0.4,0.1l0.6,0.5l0.7,0.2l0.3,0.6l0.6,0.6v0.6l-0.4,0.6l-0.1,0.7l-0.6,0.1l0.1,0.1 l0.3,0.3l0.1,0.4l0.2,0.2v-0.7l0.3-0.8l0.4-1.3l-0.1-0.3l-0.3-0.3l-0.7-0.9l-0.7-0.3L558,410L558,410z M549.2,402.1l-0.5-0.4 l-0.2,0.4v0.1l-0.1,0.3l-0.5,0.4l-0.5,0.1l-0.7-0.6l-0.2-0.1l0.8,1.1l0.3,0.1h0.4l0.9-0.3l1.6-0.5l1.7-0.2l0.1-0.2l-0.1-0.3 l-0.8,0.2l-1-0.1l-0.2,0.2h-0.4L549.2,402.1z M555.3,407.3l0.2-0.3l0.4-1.8l0.8-0.6l0.1-1.2l-0.5-0.5l-0.4-0.2l-0.1-0.2l0.1-0.2 l-0.2-0.1l-0.3-0.2l-0.4-0.6l-0.4-0.4l-0.7-0.1l-0.6-0.1l-0.4-0.1l-0.5,0.3h0.8l1.5,0.3l0.7,1.5l0.5,0.4l0.1,0.4l-0.2,0.4v0.4 l-0.3,0.5l-0.1,0.8l-0.3,0.4l-0.7,0.5l0.4,0.2l0.3,0.6L555.3,407.3L555.3,407.3z\"},BH:{d:\"M1253,408.3l0.7-3l-0.5-0.9l-1.6,1.2l0.6,0.9l-0.2,0.7L1253,408.3z\"},BD:{d:\"M1486.5,431.9l-4.5-10.1l-1.5,0.1l-0.2,4l-3.5-3.3l1.1-3.6l2.4-0.4l1.6-5.3l-3.4-1.1l-5,0.1l-5.4-0.9l-1.2-4.4 l-2.7-0.4l-4.8-2.7l-1.2,4.3l4.6,3.4l-3.1,2.4l-0.8,2.3l3.7,1.7l-0.4,3.8l2.6,4.8l1.6,5.2l2.2,0.6l1.7,0.7l0.6-1.2l2.5,1.3l1.3-3.5 l-0.9-2.6l5.1,0.2l2.8,3.7l1.5,3.1l0.8,3.2l2,3.3l-1.1-5.1l2.1,1L1486.5,431.9L1486.5,431.9z\"},BB:{d:\"M644.9,488.9l0.4-0.4l-0.3-0.3l-0.6-0.8l-0.3,0.1v1l0.1,0.3l0.5,0.3L644.9,488.9L644.9,488.9z\"},BY:{d:\"M1112.8,219.4l-5.2-1.5l-4.6,2.3l-2.6,1l0.9,2.6l-3.5,2l-0.5,3.4l-4.8,2.2h-4.6l0.6,2.7l1.7,2.3l0.3,2.4l-2.7,1.2 l1.9,2.9l0.5,2.7l2.2-0.3l2.4-1.6l3.7-0.2l5,0.5l5.6,1.5l3.8,0.1l2,0.9l1.6-1.1l1.5,1.5l4.3-0.3l2,0.6l-0.2-3.1l1.2-1.4l4.1-0.3l0,0 l-2-3.9l-1.5-2l0.8-0.6l3.9,0.2l1.6-1.3l-1.7-1.6l-3.4-1.1l0.1-1.1l-2.2-1.1l-3.7-3.9l0.6-1.6l-1-2.9l-4.8-1.4l-2.3,0.7 L1112.8,219.4L1112.8,219.4z\"},BE:{d:\"M1000.7,246.2l-4.4,1.3l-3.6-0.5l0,0l-3.8,1.2l0.7,2.2l2.2,0.1l2.4,2.4l3.4,2.9l2.5-0.4l4.4,2.8l0.4-3.5l1.3-0.2 l0.4-4.2l-2.8-1.4L1000.7,246.2L1000.7,246.2z\"},BZ:{d:\"M482.5,471.1l1.4-2.2l1-0.2l1.3-1.7l1-3.2l-0.3-0.6l0.9-2.3l-0.4-1l1.3-2.7l0.3-1.8h-1.1l0.1-0.9h-1l-2.5,3.9 l-0.9-0.8l-0.7,0.3l-0.1,1l-0.7,5l-1.2,7.2L482.5,471.1L482.5,471.1z\"},BJ:{d:\"M996.9,498l-4.3-3.7h-2l-1.9,1.9l-1.2,1.9l-2.7,0.6l-1.2,2.8l-1.9,0.7l-0.7,3.3l1.7,1.9l2,2.3l0.2,3.1l1.1,1.3 l-0.2,14.6l1.4,4.4l4.6-0.8l0.3-10.2L992,518l1-4l1.7-1.9l2.7-4l-0.6-1.7l1.1-2.5l-1.2-3.8L996.9,498L996.9,498z\"},BM:{d:\"M630.2,366.8l0.4-0.6h-0.1l-0.5,0.5l-0.6,0.2l0.1,0.1h0.1L630.2,366.8z\"},BT:{d:\"M1474.7,395.5l-2.7-1.8l-2.9-0.1l-4.2-1.5l-2.6,1.6l-2.6,4.8l0.3,1.2l5.5,2.5l3.2-1l4.7,0.4l4.4-0.2l-0.4-3.9 L1474.7,395.5L1474.7,395.5z\"},BO:{d:\"M655.7,700.5l1.6-1.3l-0.8-3.6l1.3-2.8l0.5-5l-1.6-4l-3.2-1.7l-0.8-2.6l0.6-3.6l-10.7-0.3l-2.7-7.4l1.6-0.1 l-0.3-2.8l-1.2-1.8l-0.5-3.7l-3.3-1.9l-3.5,0.1l-2.5-1.9l-3.8-1.2l-2.4-2.4l-6.3-1l-6.4-5.7l0.3-4.3l-0.9-2.5l0.4-4.7l-7.3,1.1 l-2.8,2.3l-4.8,2.6l-1.1,1.9l-2.9,0.2l-4.2-0.6l5.5,10.3l-1.1,2.1l0.1,4.5l0.3,5.4l-1.9,3.2l1.2,2.4l-1.1,2.1l2.8,5.3L591,684 l3.1,4.3l1.2,4.6l3.2,2.7l-1.1,6.2l3.7,7.1l3.1,8.8l3.8-0.9l4-5.7l7.4,1.5l3.7,4.6l1.6-5.1l6.3,0.3l1,1.3l1.5-7.6l-0.2-3.4l2.1-5.6 l9.5-1.9l5.1,0.1l5.4,3.3L655.7,700.5L655.7,700.5z\"},BA:{d:\"M1062.2,284.9l-2.3,0.1l-1,1.3l-1.9-1.4l-0.9,2.5l2.7,2.9l1.3,1.9l2.5,2.3l2,1.4l2.2,2.5l4.7,2.4l0.4-3.4l1.5-1.4 l0.9-0.6l1.2-0.3l0.5-2.9l-2.7-2.3l1-2.7h-1.8l0,0l-2.4-1.4l-3.5,0.1L1062.2,284.9L1062.2,284.9z\"},BW:{d:\"M1116.7,685l-1-0.5l-3.2,1.5h-1.6l-3.7,2.5l-2-2.6l-8.6,2.2l-4.1,0.2l-0.9,22.7l-5.4,0.2l-0.6,18.5l1.4,1l3,6.1 l-0.7,3.8l1.1,2.3l4-0.7l2.8-2.8l2.7-1.9l1.5-3.1l2.7-1.5l2.3,0.8l2.5,1.8l4.4,0.3l3.6-1.5l0.6-2l1.2-3l3-0.5l1.7-2.4l2-4.3l5.2-4.7 l8-4.7l-3.4-2.9l-4.2-0.9l-1.5-4.1l0.1-2.2l-2.3-0.7l-6-7l-1.6-3.7l-1.1-1.1L1116.7,685L1116.7,685z\"},BR:{d:\"M659,560.1l-1.4,0.2l-3.1-0.5l-1.8,1.7l-2.6,1.1l-1.7,0.2l-0.7,1.3l-2.7-0.3l-3.5-3l-0.3-2.9l-1.4-3.3l1-5.4 l1.6-2.2l-1.2-3l-1.9-0.9l0.8-2.8l-1.3-1.5l-2.9,0.3l0.7,1.8l-2.1,2.4l-6.4,2.4l-4,1l-1.7,1.5l-4.4-1.6l-4.2-0.8l-1,0.6l2.4,1.6 l-0.3,4.3l0.7,4l4.8,0.5l0.3,1.4l-4.1,1.8l-0.7,2.7l-2.3,1l-4.2,1.5l-1.1,1.9l-4.4,0.5l-3-3.4l-1.1,0.8l-1-3.8l-1.6-2l-1.9,2.2 l-10.9-0.1v3.9l3.3,0.7l-0.2,2.4l-1.1-0.6l-3.2,1v4.6l2.5,2.4l0.9,3.6l-0.1,2.8l-2.2,17.4l-5.1-0.3l-0.7,1l-4.6,1.2l-6.2,4.3l-0.4,3 l-1.3,2.2l0.7,3.4l-3.3,1.9l0.1,2.7L562,620l2.6,5.8l3.3,3.8l-1,2.8l3.7,0.3l2.3,3.4l4.9,0.2l4.4-3.8l0.2,9.7l2.6,0.7l3-1.1l4.2,0.6 l2.9-0.2l1.1-1.9l4.8-2.6l2.8-2.3l7.3-1.1l-0.4,4.7l0.9,2.5l-0.3,4.3l6.4,5.7l6.3,1l2.4,2.4l3.8,1.2l2.5,1.9l3.5-0.1l3.3,1.9 l0.5,3.7l1.2,1.8l0.3,2.8l-1.6,0.1l2.7,7.4l10.7,0.3l-0.6,3.6l0.8,2.6l3.2,1.7l1.6,4l-0.5,5l-1.3,2.8l0.8,3.6l-1.6,1.3l1.9,3.6 l0.4,8.6l6,1.2l2.1-1.2l3.9,1.7l1.2,1.9l1,5.8l0.9,2.5l2,0.3l2-1.1l2.1,1.2l0.3,3.5l-0.3,3.8l-0.7,3.6l2.6-1.2l3.1,3.7l0.5,5.1 l-4.2,3.5l-3.3,2.6l-5.3,6.2l-5.9,8.6l3.4-0.7l6.2,4.9l1.9-0.2l6.2,4.1l4.8,3.5l3.8,4.3l-1.9,3l2.1,3.7l2.9-3.7l1.5-6l3.2-3l3.9-5 l4.5-11.2l3.4-3.5l0.8-3.1l0.3-6.4l-1.3-3.5l0.3-4.8l4.1-6.3l6-5.1l6-1.8l3.6-2.9l8.5-2.4h5.9l1.1-3.8l4.2-2.8l0.6-6.5l5.1-8.3 l0.5-8.5l1.6-2.6l0.3-4.1l1.1-9.9l-1-11.9l1.4-4.7l1.4-0.1l3.9-5.5l3.3-7.2l7.7-8.8l2.7-4.2l2-10.5l-1-3.9l-2-8.1l-2.1-2l-4.8-0.2 l-4.3-1.9l-7.3-7.1l-8.4-5.3l-8.4,0.3l-10.9-3.4l-6.5,2l0.8-3.5l-2.7-3.8l-9.4-3.8l-7.1-2.3l-4.2,4.1l-0.3-6.3l-9.9-1l-1.7-2 l4.2-5.2l-0.1-4.4l-3-1l-3-11.2l-1.3-3.5l-1.9,0.3l-3.5,5.8l-1.8,4.7l-2.1,2.4l-2.7,0.5l-0.8-1.8l-1.2-0.3l-1.8,1.8l-2.4-1.3 l-3.2-1.4l-2.7,0.7l-2.3-0.6l-0.5,1.8l0.9,1.3l-0.5,1.3L659,560.1L659,560.1z\"},VG:{d:\"M619.2,455.1l0.3-0.2l-0.2-0.1h-0.4l-0.3,0.2l0.1,0.1H619.2L619.2,455.1z M620.3,454.7l0.4-0.4l-0.5,0.1l-0.2,0.2 l0.1,0.1h0.1L620.3,454.7L620.3,454.7z M621.1,452.9h-0.2h-0.5l0,0l0.1,0.1h0.3l0.3,0.1l0,0L621.1,452.9L621.1,452.9z\"},BN:{d:\"M1617.8,543.4l2.7,3.3l1.1-2.2l2.7,0.2l0.1-4.1l0.1-3.1l-4.6,3.5L1617.8,543.4L1617.8,543.4z\"},BG:{d:\"M1121.6,294.3l-3-0.7l-4-2.2l-5.8,1.4l-2.3,1.6l-7.5-0.3l-4-1l-1.9,0.5l-1.8-2.6l-1.1,1.4l0.7,2.3l2.8,2.6l-1.7,1.9 l-0.7,2l0.6,0.7l-0.7,0.9l2.8,2l0.8,4.1l3.8,0.2l3.9-1.7l3.9,2.1l4.6-0.6l-0.3-3l5-2l4.5,0.8l-2.1-3.5l1.3-4.4L1121.6,294.3 L1121.6,294.3z\"},BF:{d:\"M978.8,477.2h-3.6l-1.4-1.2l-3,0.9l-5.2,2.6l-1.1,2l-4.3,2.9l-0.8,1.6l-2.3,1.3l-2.7-0.9l-1.6,1.6l-0.8,4.4 l-4.5,5.2l0.2,2.2l-1.6,2.7l0.4,3.7l2.5,1.4l1,2.1l2.5,1.3l1.9-1.6l2.7-0.2l3.8,1.6l-0.8-4.8l0.2-3.6l9.7-0.3l2.4,0.5l1.8-1l2.6,0.5 l4.9,0.1l1.9-0.7l1.2-2.8l2.7-0.6l1.2-1.9l0.1-4.4l-6.4-1.4l-0.2-3.1l-3.1-4.1l-0.8-2.9L978.8,477.2L978.8,477.2z\"},BI:{d:\"M1148.2,590l-0.3-2.5l0,0l-3-0.4l-1.7,3.6l-3.5-0.5l1.4,2.9l0.1,1.1l2,6.1l-0.1,0.3l0.6-0.1l2.1-2.3l2.2-3.3 l1.4-1.4v-2L1148.2,590L1148.2,590z\"},KH:{d:\"M1574.8,481.8l-5.2-2.3l-2,4.3l-4.9-2.4l-5.3-1l-7.1,1.3l-3,5.2l2.1,7.7l3.4,6.6l2.6,3.3l4.7,0.9l4.7-2.5l5.8-0.5 l-2.8-3.8l8.9-4.9l-0.1-7.7L1574.8,481.8L1574.8,481.8z\"},CM:{d:\"M1060.1,502.9l0.2-4.3l-0.5-4.2l-2.2-4.1l-1.6,0.4l-0.2,2l2.3,2.6l-0.6,1.1l-0.3,2.1l-4.6,5l-1.5,4l-0.7,3.3 l-1.2,1.4l-1.1,4.5l-3,2.6l-0.8,3.2l-1.2,2.6l-0.5,2.6l-3.9,2.2l-3.2-2.6l-2.1,0.1l-3.3,3.7l-1.6,0.1l-2.7,6.1l-1.4,4.5v1.8l1.4,0.9 l1.1,2.8l2.6,1.1l2.2,4.2l-0.8,5l9.2,0.2l2.6-0.4l3.4,0.8l3.4-0.8l0.7,0.3l7.1,0.3l4.5,1.7l4.5,1.5l0.4-3.5l-0.6-1.8l-0.3-2.9 l-2.6-2.1l-2.1-3.2l-0.5-2.3l-2.6-3.3l0.4-1.9l-0.6-2.7l0.4-5l1.4-1.1l2.7-6.5l0.9-1.7l-1.8-4.4l-0.8-2.6l-2.5-1.1l-3.3-3.7l1.2-3 l2.5,0.6l1.6-0.4l3.1,0.1L1060.1,502.9L1060.1,502.9z\"},CA:{d:\"M659,276.7l-0.7-3l-2.5,1.9l0.5,2.1l5.6,2.6l1.9-0.4l3.3-2.5l-4.7,0.1L659,276.7L659,276.7z M673.4,260.8l0.2-1.1 l-4.1-2.6l-5.9-1.6l-1.9,0.6l3.5,2.9l5.7,1.9L673.4,260.8L673.4,260.8z M368.1,264.5l0.2-3.4l-3.2-2.6l-0.4-2.9l-0.1-2.1l-4.1-0.7 l-2.4-0.9l-4.1-1.4l-1.4,1.5l-0.6,3.3l4.3,1.1l-0.4,1.8l2.9,2.2v2.2l6.3,2.8L368.1,264.5L368.1,264.5z M704.2,251l3.9-3.8l1.4-1.7 l-2.1-0.3l-4.9,2.2l-4.2,3.5l-8.1,9.8l-5.3,3.7l1.6,1.7l-3.8,2.2l0.2,1.9l9.6,0.1l5.4-0.3l4.4,1.5l-4.4,2.9l2.9,0.2l7.3-5.4l1.2,0.8 l-2.5,5.1l3,1.2l2.3-0.2l3.5-5.5l-0.5-3.9l0.3-3.3l-3.7,1.1l2.8-4.6l-4.3-1.9l-2.7,1.5l-3.9-1.7l2.4-2.1l-2.9-1.3l-3.8,2L704.2,251 L704.2,251z M347.4,229.8l-1.9,2l-1.4,2.6l0.9,1.9l-0.6,2.8l0.7,2.8h1.9l-0.2-4.9l7.1-6.9l-4.9,0.5L347.4,229.8L347.4,229.8z M628.3,182.8l-0.4-1.2l-1.7-0.1l-2.8,1.7l-0.4,0.4l0.1,1.7l1.7,0.5L628.3,182.8L628.3,182.8z M618.7,179.6l0.8-1.1l-6-0.1l-4.9,2.7 v1.5l3,0.2L618.7,179.6L618.7,179.6z M615.6,163l-2.7-0.5l-5,5.2l-3.6,4.4l-5.7,2.8l6.3-0.6l-0.8,3.4l8.2-3l6.2-3l0.8,2.6l5.9,1.3 l4.9-1.8l-1.9-1.8l-3.4,0.4l1.3-2.7l-3.7-1.7l-3.4-1.9l-1.5-1.5l-2.8,0.9L615.6,163L615.6,163z M660.2,154.8l3.7-1.7l1-0.7l1.4-2.3 l-2.3-1.5l-4.2,0.7l-3.8,3.1l-0.7,2.6L660.2,154.8L660.2,154.8z M586.4,144.1l-0.8-2l-0.3-1l-1.6-1l-3-1.5l-4.9,2.3l-5,1.7l3.5,2.4 l3.8-0.6l4.1,1.6L586.4,144.1z M608.8,142l-6.6-1l5.7-2.6l-0.4-6l-1.9-2.3l-4.5-0.8l-8.1,3.8l-5.5,5.8l2.9,2.1l1.6,3.3l-6.3,5.5 l-3.2-0.2l-6.2,4.4l4.2-5.2l-4.8-1.8l-4.5,0.9l-2.4,3.4l-5.9-0.1l-7.2,0.8l-5.1-2.4l-5,0.4l-1.5-2.9l-2.1-1.3l-3.8,0.5l-5.2,0.3 l-4.4,1.8l2,2.3l-7,2.8l-1.4-3.3l-4.4,1l-11.8,0.6l-6.4-1.2l8.5-2.6l-2.8-2.8l-4.4,0.4l-4.7-1l-7.5-1.9l-3.8-2.3l-4.5-0.3l-3.3,1.6 l-5.9,0.9l3.9-4.1l-9.4,3.6l-1.4-4.7l-2.1-0.6l-3.8,2.5l-4.5,1.2l-0.2-2.2l-8.2,1.4l-8.8,2.3l-5.2-0.6l-7,1.6l-6.2,2.3l-3.7-0.5 l-3.3-2.6l-5.9-1.3l0,0l-24.3,20.2l-35.4,32.4l4.2,0.1l2.7,1.6l0.6,2.6l0.2,3.9l7.6-3.3l6.4-1.9l-0.5,3l0.7,2.4l1.7,2.7l-1.1,4.2 l-1.5,6.8l4.6,3.8l-3.1,3.7l-5.1,2.9l0,0l-2.5,3.1l2.1,4.4l-3.1,4.9l4.1,2.6l-3.6,3.7l-1.3,5.5l6.9,2.5l1.6,2.7l5.4,6.1h0.7h13.9 h14.6h4.8h15h14.5h14.7h14.8h16.7h16.8h10.1l1.3-2.4h1.6l-0.8,3.4l1,1l3.2,0.4l4.6,1l3.8,1.9l4.4-0.8l5.3,1.6l0,0l3.2-2.4l3.2-1 l1.8-1.5l1.5-0.8l4,1.2l3.3,0.2l0.8,0.8l0.1,3.5l5.2,1l-1.7,1.7l1.2,1.9l-1.9,2.3l1.8,0.8l-1.9,2.1l0,0l1.2,0.2l1.3-0.9l0.5,1.4 l3.4,0.7l3.8,0.1l3.8,0.6l4,1.2l0.8,2l1.4,4.7l-2.4,2l-3.8-0.8l-1-3.8l-0.9,3.9l-3.8,3.4l-0.8,2.9l-1.1,1.7l-4.1,2l0,0l-3.7,3.4 l-2,2.2l2.7,0.4l4.5-2l2.9-1.7l1.6-0.3l2.6,0.6l1.7-0.9l2.8-0.8l4.7-0.8l0,0l0,0l0.3-1.8l-0.3,0.1l-1.7,0.3l-1.8-0.6l2.3-2.1 l1.9-0.7l3.9-0.9l4.6-0.9l1.8,1.2l1.9-1.4l1.9-0.8l0.9,0.4l0.1,0.1l6.7-4.2l2.7-1.2h7.7h9.3l1-1.6l1.7-0.3l2.5-0.9l2.7-2.8l3.2-4.9 l5.5-4.7l1.1,1.7l3.7-1.1l1.5,1.8l-2.8,8.5l2.1,3.5l5.9-0.8l8.1-0.2l-10.4,5.1l-1.5,5.2l3.7,0.5l7.1-4.5l5.8-2.4l12.2-3.7l7.5-4.1 l-2.6-2.2l1-4.5l-7.1,7l-8.6,0.8l-5.5-3.1l-0.1-4.6l0.6-6.8l6.1-4.1l-3.3-3.1l-7.6,0.6l-12.1,5.2l-10.9,8.2l-4.6,1l7.8-5.7l10.1-8.3 l7.2-2.7l5.7-4.4l5.2-0.5l7.3,0.1l10,1.3l8.6-1l7.8-5.1l8.7-2.2l4.2-2.1l4.2-2.3l2-6.8l-1.1-2.3l-3.4-0.8v-5.1l-2.3-1.9l-6.9-1.6 l-2.8-3.4l-4.8-3.4l3.4-3.7l-2-7.1l-2.6-7.5l-1-5.2l-4.3,2.7l-7.4,6.5l-8.1,3.2l-1.6-3.4l-3.7-1l2.2-7.3l2.6-4.9l-7.7-0.5l-0.1-2.2 l-3.6-3.3l-3-2l-4.5,1.5l-4.2-0.5l-6.6-1.6l-3.9,1.3l-3.8,9l-1,5.3l-8.8,6.1l3.1,4.5l0.5,5l-1.7,4l-4.7,4.1L610,224l-9,2.8l1.7,3.2 l-2.2,9.6l-5.6,6.3l-4.6,1.9l-4.4-5.8l-0.1-6.8l1.7-6l3.6-5.2l-4.8-0.6l-7.5-0.4l-3.6-2.5l-4.8-1.6l-1.7-2.9l-3.3-2.2l-7-2.6 l-7.1,1.2l0.7-4.5l1.5-5.5l-6-1l4.9-6.8l4.9-4.6l9.4-6.5l8.6-4.6l5.6-0.7l2.9-3.7l5.1-2.4l6.4-0.4l7.7-3.8l2.9-2.4l7.4-4.7l3.2-2.8 l3.2,1.7l6.5-0.9L637,155l2.3-2.7l-0.8-2.9l5-2.9l1.7-2.7l-3.5-2.6l-5.4-0.8l-5.5-0.4l-4.6,5.9l-6.5,4.6l-7.2,4l-1.3-3.7l4.2-4 l-2.2-3.5l-8.7,4.2L608.8,142L608.8,142z M533.3,123.1l-2.8-1l-14.1,3.2l-5.1,2l-7.8,3.9l5.4,1.4l6.2-0.1l-11.5,2.1v1.9l5.6,0.1 l9-0.4l6.5,1.2l-6.2,1l-5.5-0.3l-7.1,0.9l-3.3,0.6l0.6,4.2l4.2-0.6l4.1,1.5l-0.3,2.5l7.8-0.5l11.2-0.8l9.4-1.8l5-0.4l5.7,1.5 l6.7,0.8l3.1-1.9l-0.7-2.1l7-0.4l2.6-2.4l-5-2.5l-4.2-2.6l2.4-3.6l2.7-5.1l-2.2-2l-3-0.9l-4.2,0.8l-2.8,5.3l-4.3,2.1l2.2-5.1 l-1.7-1.7l-7.3,2.7L539,124l-10.4,1.5L533.3,123.1L533.3,123.1z M572.4,121.6l-1.7-1.1l-5.4,0.2l-2.1,0.7l2.2,3.6 C565.4,125,572.4,121.6,572.4,121.6z M680.1,123.2l-4.4-2.8l-8.4-0.5l-2.1,0.3l-1.7,1.8l2,2.8l0.9,0.3l4.8-0.7l4.1,0.1l4.1,0.1 L680.1,123.2L680.1,123.2z M640.7,122.9l5.7-3.2l-11.2,1.3l-5.8,2.1l-7.1,4.6l-3.3,5.2l5.6,0.1l-6.1,2.3l1.8,1.9l5.9,0.8l7.3,1.5 l13.8,1.2l7.9-0.6l3.2-1.6l2,1.8l3.3,0.3l2,3.3l-3.5,1.4l7.1,1.8l4.6,2.6l0.5,1.9L674,154l-8.6,5.4l-3.2,2.7l0.2,2l-9.2,0.7l-8,0.1 l-5.4,4.2l2.4,1.9l13-0.9l0.9-1.6l4.7,2.7l4.7,2.9l-2.4,1.6l3.8,2.8l7.6,3.3l10.7,2.3l0.3-2l-2.8-3.5l-3.5-4.9l8.5,4.6l4.7,1.5 l3.6-4.1v-5.6l-1-1.5l-4.4-2.5l-2.7-3.3l2.3-3.2l5.8-0.7l3.8,5.4l4,2.4l10.7-6.5l3.3-3.9l-6.4-0.3l-3.2-5.1l-5.9-1.2l-7.7-3.5l9-2.5 l-0.8-5l-2.2-2.1l-8.3-2.1l-1.9-3.3l-8.2,1.2l1.1-2.3l-3.6-2.5l-6.8-2.6l-5.2,2.1l-9,1.5l3.3-3.4l-2.3-5.3l-11.6,2.1l-7.1,4.1 L640.7,122.9L640.7,122.9z M590.7,119.5l-7.1,2.4l0.9,3.4l-7.4-0.7l-1.7,1.7l5.8,3.9l0.9,2l3.4,0.5l8.4-2l5.1-4.7l-3.8-2.2l6-2.4 l0.5-1.5l-7.5,0.6L590.7,119.5L590.7,119.5z M613,124.9l5.6-1l10-4.5l-6.1-1.2l-7.8-0.2l-5.2,1.4l-4.2,2.1l-2.5,2.6l-1.8,4.5 l4.3,0.2L613,124.9z M498.3,132.1l2.6-2.3l9.1-3.6l13.8-3.6l6.4-1.3l-1.6-2.1l-1.9-1.5l-9.4-0.2l-4.1-1.1l-14,0.8l-0.3,3.1l-7.6,3.3 l-7.4,3.8l-4.3,2.2l5.9,2.7l-0.6,2.3L498.3,132.1L498.3,132.1z M622.4,113.8l0.3-1.6l-1.4-1.7l-6.9,1.3L610,114l3.2,1.3l5.1,0.4 L622.4,113.8L622.4,113.8z M613.7,105.2l-1.1,0.7l-4.8-0.3l-7.6,1.6l-3.8-0.1l-4.3,3.8l6.6-0.4l-3.4,2.9l3.2,0.8l6.8-0.5l5.8-3.7 l2.8-2.5L613.7,105.2z M574.6,107.7l1.8-2.3l-3.1-0.5l-5.7,1.7l-0.7,4.7l-6.1-0.4L558,108l-8.2-1.6l-5.4,1.4l-11.6,4.8l4.1,0.8 l17.8-0.5l-10.6,2.2l-1.5,1.6l5.9-0.1l12.2-2.2l13.8-0.8l5.1-2.3l2.3-2.4l-3.7-0.2l-4.3,0.8C573.9,109.5,574.6,107.7,574.6,107.7z M629.8,103.4l-7.1-0.3l-3.8,2l2.6,1.5l7,0.6l1.4,2.1l-2.2,2.4l-1.5,2.8l8.5,1.6l5.5,0.6l8-0.1l11.6-0.8l4.3,0.6l6.7-1l3.5-1.4l1-2 l-2.3-1.9l-5.8-0.3l-8,0.4l-7,1.1l-5.1-0.4l-4.8-0.3l-1.2-1.1l-3.1-1.1l2.8-1.9l-1.4-1.6l-7.3,0.1L629.8,103.4L629.8,103.4z M554.8,100.8l-6,0.7l-5.5-0.1l-12.1,3.1l-11.6,3.7l0,0l3.6,1l7-0.7l9.8-2.1l3.8-0.3l5.2-1.6L554.8,100.8z M635.3,101.4l1-0.5 l-1.5-0.9l-7.2-0.1l-0.6,1.3l6.4,0.3L635.3,101.4L635.3,101.4z M576.9,100.6l3.2-1.4l-4.1-0.8l-5.9,0.5l-5.1,1.5l3.3,1.5 C568.3,101.9,576.9,100.6,576.9,100.6z M584.7,96.4l-3.3-0.9l-1.6-0.2l-5.7,1.3l-1,0.7h6L584.7,96.4z M631.1,98.9l3-1.7l-2.3-1.6 l-1.7-0.3l-4.4-0.1l-2.1,1.8l-0.7,1.8l1.6,1.1L631.1,98.9L631.1,98.9z M617.4,97.7l0.1-2.2l-7.4-1.7l-6.1-0.6l-2.1,1.7l2.8,1.1 l-5.3,1.4l7.7,0.2l4,1.5l5.2,0.5L617.4,97.7z M671.1,91.6l0.6-2.8L667,88l-4.7-0.9l-1.6-2.2l-8.2,0.2l0.3,0.9l-3.9,0.3l-4.1,1.3 l-4.9,1.9l-0.3,1.9l2,1.5h6.5l-4.3,1.2l-2.1,1.6l1.6,1.9l6.7,0.6l6.8-0.4l10.5-3.4l6.4-1.3L671.1,91.6z M749.6,77.8l-7-0.2l-6.9-0.3 l-10.2,0.6l-1.4-0.4l-10.3,0.2l-6.4,0.4l-5.1,0.6l-5,2l-2.3-1l-3.9-0.2l-6.7,1.4l-7.4,0.6l-4.1,0.1l-6,0.8l-1.1,1.3l2.5,1.2l0.8,1.6 l4.4,1.5l12.4-0.3l7.2,0.5l-7.2,1.5l-2.2-0.4l-9.3-0.2l-1.1,2.2l3,1.7l-2.8,1.6l-7.5,1.1l-4.9,1.7l4.8,0.9l1.7,3l-7.5-2l-2.5,0.3 l-2,3.4l-8,1.1l-2,2.3l6.7,0.3l4.9,0.6l11.7-0.8l8.4,1.4l12.6-3l1-1.1l-6.4,0.2l0.5-1.1l6.5-1.4l3.6-1.9l6.8-1.3l5-1.6l-0.8-2.2 l3.3-0.8l-4.3-0.6l11.1-0.4l3.2-0.9l7.9-0.8l9.3-3.5l6.8-1.1l10.3-2.5h-7.4l3.9-0.9l9-0.8l9.7-1.6l1.1-1.1l-5.2-1l-6.7-0.4 L749.6,77.8L749.6,77.8z\"},CV:{d:\"M841.4,477.6l0.1-0.4l-0.2-0.6l-0.3-0.1l-0.6,0.4l-0.1,0.3l0.1,0.3l0.3,0.3l0.3,0.1L841.4,477.6L841.4,477.6z M847.7,475.9l0.4-0.2V475l-0.1-0.3h-0.4l-0.2,0.4v0.1v0.4L847.7,475.9L847.7,475.9L847.7,475.9z M846.3,476.7l-0.5-0.9l-0.3-0.1 l-0.6-0.7v-0.3l-0.3-0.1v0.2v0.4l-0.2,0.5v0.5l0.4,0.8l0.4,0.2l0.7,0.1L846.3,476.7L846.3,476.7z M849.4,468.9v0.5l-0.3,0.7l0.5,0.3 l0.3,0.1l0.6-0.4l0.2-0.5l-0.1-0.3l-0.3-0.3l-0.3-0.1l-0.1,0.1L849.4,468.9L849.4,468.9z M843,466.4l-1-0.1l-0.6-0.2h-0.1v0.3 l0.4,0.8l0.2-0.5l0.2-0.1l0.8,0.2l0.4-0.1l-0.1-0.1L843,466.4L843,466.4z M849.7,466.2l-0.1-0.5V465h-0.2l-0.3,0.2l0.1,0.7l0.1,0.1 l0.2,0.5L849.7,466.2L849.7,466.2z M838.6,465.2V465l-0.3-0.5l-0.3,0.1l-0.4,0.2l-0.1,0.3l0.4,0.2h0.2L838.6,465.2L838.6,465.2z M837.1,464.3l0.8-0.6l0.2-0.3l-0.2-0.5l-0.5-0.1l-1.2,0.6l-0.1,0.2l0.1,0.3l0.1,0.5l0.2,0.1L837.1,464.3L837.1,464.3z\"},KY:{d:\"M527,449.1l-0.1-0.3l-0.1,0.1v0.6h0.5h0.2l0.3-0.2h0.6l-0.1-0.2l-0.8-0.1l-0.1,0.1l-0.2,0.1L527,449.1L527,449.1z M535,446.8L535,446.8l-0.1-0.1h-0.1l-0.3,0.1h-0.1h-0.1l-0.1,0.1l-0.1,0.1h0.2l0.4-0.2H535L535,446.8L535,446.8z M535.8,446.7 l0.5-0.2l0,0l-0.1-0.1h-0.1l-0.1,0.1h-0.1l-0.5,0.3h0.2L535.8,446.7L535.8,446.7z\"},CF:{d:\"M1110.5,517.3l-0.5-0.3l-2-1.8l-0.3-2l0.8-2.6V508l-3.3-4l-0.7-2.7l-3.5,1.1l-2.8,2.5l-4,7l-5.2,2.9l-5.4-0.4 l-1.6,0.6l0.6,2.3l-2.9,2.2l-2.3,2.5l-7.1,2.4l-1.4-1.4l-0.9-0.2l-1,1.7l-4.7,0.4l-2.7,6.5l-1.4,1.1l-0.4,5l0.6,2.7l-0.4,1.9 l2.6,3.3l0.5,2.3l2.1,3.2l2.6,2.1l0.3,2.9l0.6,1.8l2.9-5.9l3.3-3.4l3.8,1.1l3.6,0.4l0.5-4.5l2.2-3.2l3-2l4.6,2.1l3.6,2.4l4.1,0.6 l4.2,1.2l1.6-3.8l0.8-0.5l2.6,0.6l6.2-3.1l2.2,1.3l1.8-0.2l0.9-1.5l2-0.6l4.3,0.7l3.6,0.1l1.8-0.6l-0.9-2.1l-4.2-2.5l-1.5-3.8 l-2.4-2.7l-3.8-3.4l-0.1-2l-3.1-2.6L1110.5,517.3L1110.5,517.3z\"},TD:{d:\"M1108.4,447.6l-22.4-12.2l-22.3-12.2l-5.4,3.5l1.6,9.9l2,1.6l0.2,2.1l2.3,2.2l-1.1,2.7l-1.8,12.9l-0.2,8.3l-6.9,6 l-2.3,8.4l2.4,2.3v4.1l3.6,0.2l-0.5,2.9l2.2,4.1l0.5,4.2l-0.2,4.3l3.1,5.8l-3.1-0.1l-1.6,0.4l-2.5-0.6l-1.2,3l3.3,3.7l2.5,1.1 l0.8,2.6l1.8,4.4l-0.9,1.7l4.7-0.4l1-1.7l0.9,0.2l1.4,1.4l7.1-2.4l2.3-2.5l2.9-2.2l-0.6-2.3l1.6-0.6l5.4,0.4l5.2-2.9l4-7l2.8-2.5 l3.5-1.1v-1.6l-2.1-1.8l-0.1-3.7l-1.2-2.5l-2,0.4l0.5-2.4l1.4-2.6l-0.7-2.7l1.8-1.9l-1.2-1.5l1.4-3.9l2.4-4.7l4.8,0.4L1108.4,447.6 L1108.4,447.6z\"},CL:{d:\"M648.4,905.2l-3.7-0.7l-3.3,2.5l0.2,4.1l-1.2,2.8l-7.2-2.2l-8.6-4l-4.5-1.3l9.7,6.8l6.3,3.2l7.5,3.4l5.3,0.9 l4.3,1.8l3,0.5l2.3,0.1l3.2-1.8l0.5-2.4l-2.9-0.2h-5L648.4,905.2L648.4,905.2z M601.1,708.9l-3.7-7.1l1.1-6.2l-3.2-2.7l-1.2-4.6 L591,684l-1.2,3.3l-2.7,1.6l2.1,9l1.5,10.4l-0.1,14.2v13.2l0.9,12.3l-1.9,7.8l2.1,7.8l-0.5,5.3l3.2,9.5l-0.1,9.5l-1.2,10.2 l-0.6,10.5l-2.1,0.2l2.4,7.3l3.3,6.3l-1.1,4.3l1.9,11.6l1.5,8.8l3.5,0.9l-1.1-7.7l4,1.6l1.8,12.7l-6.4-2.1l2,10.2l-2.7,5.5l8.2,1.8 l-3.4,4.8l0.2,6l5,10.6l4.2,4.1l0.2,3.6l3.3,3.8l7.5,3.5l0,0l7.4,4.2l6.2,2l2-0.1l-1.8-5.7l3.4-2.2l1.7-1.5h4.2l-4.8-0.9l-12-0.8 l-3.5-3.6l-1.8-4.6l-3.1,0.4l-2.6-2.2l-3.1-6.6l2.7-2.7l0.1-3.9l-1.8-3.2l0.7-5.3l-1.1-8.2l-1.8-3.7l1.8-1.1l-1.3-2.3l-2.8-1.3 l0.8-2.6l-3.1-2.3l-3.6-7.1l1.6-1.2l-3.3-7.6l-0.7-6.4l-0.3-5.7l2.5-2.4l-3.3-6.3l-1.5-5.9l2.9-4.3l-1.4-5.4l1.6-6.2l-1.3-5.9 l-1.6-1.2l-4.9-10.9l2.1-6.5l-1.7-6.2l0.9-5.8l2.6-5.9l3.2-4l-2-2.5l0.9-2l-1.6-10.6l5.6-3.2l1.1-6.6l-0.9-1.6l-3.8,0.9L601.1,708.9 L601.1,708.9z\"},CN:{d:\"M1587.2,453.3l0.6-3.6l2-2.8l-1.6-2.5l-3.2-0.1l-5.8,1.8l-2.2,2.8l1,5.5l4.9,2L1587.2,453.3L1587.2,453.3z M1600.4,256.8l-6.1-6.1l-4.4-3.7l-3.8-2.7l-7.7-6.1l-5.9-2.3l-8.5-1.8l-6.2,0.2l-5.1,1.1l-1.7,3l3.7,1.5l2.5,3.3l-1.2,2l0.1,6.5 l1.9,2.7l-4.4,3.9l-7.3-2.3l0.6,4.6l0.3,6.2l2.7,2.6l2.4-0.8l5.4,1l2.5-2.3l5.1,2l7.2,4.3l0.7,2.2l-4.3-0.7l-6.8,0.8l-2.4,1.8 l-1.4,4.1l-6.3,2.4l-3.1,3.3l-5.9-1.3l-3.2-0.5l-0.4,4l2.9,2.3l1.9,2.1l-2.5,2l-1.9,3.3l-4.9,2.2l-7.5,0.2l-7.2,2.2l-4.4,3.3l-3.2-2 l-6.2,0.1l-9.3-3.8l-5.5-0.9l-6.4,0.8l-11.2-1.3l-5.5,0.1l-4.7-3.6l-4.9-5.7l-3.4-0.7l-7.9-3.8l-7.2-0.9l-6.4-1l-3-2.7l-1.3-7.3 l-5.8-5l-8.1-2.3l-5.7-3.3l-3.3-4.4l-1.7,0.5l-1.8,4.2l-3.8,0.6l2.5,6.2l-1.6,2.8l-10.7-2l1,11.1l-2,1.4l-9,2.4l8.7,10.7l-2.9,1.6 l1.7,3.5l-0.2,1.4l-6.8,3.4l-1,2.4l-6.4,0.8l-0.6,4l-5.7-0.9l-3.2,1.2l-4,3l1.1,1.5l-1,1.5l3,5.9l1.6-0.6l3.5,1.4l0.6,2.5l1.8,3.7 l1.4,1.9l4.7,3l2.9,5l9.4,2.6l7.6,7.5l0.8,5.2l3,3.3l0.6,3.3l-4.1-0.9l3.2,7l6.2,4l8.5,4.4l1.9-1.5l4.7,2l6.4,4.1l3.2,0.9l2.5,3.1 l4.5,1.2l5,2.8l6.4,1.5l6.5,0.6l3-1.4l1.5,5.1l2.6-4.8l2.6-1.6l4.2,1.5l2.9,0.1l2.7,1.8l4.2-0.8l3.9-4.8l5.3-4l4.9,1.5l3.2-2.6 l3.5,3.9l-1.2,2.7l6.1,0.9l3-0.4l2.7,3.7l2.7,1.5l1.3,4.9l0.8,5.3l-4.1,5.3l0.7,7.5l5.6-1l2.3,5.8l3.7,1.3l-0.8,5.2l4.5,2.4l2.5,1.2 l3.8-1.8l0.6,2.6l0.7,1.5l2.9,0.1l-1.9-7.2l2.7-1l2.7-1.5h4.3l5.3-0.7l4.1-3.4l3,2.4l5.2,1.1l-0.2,3.7l3,2.6l5.9,1.6l2.4-1l7.7,2 l-0.9,2.5l2.2,4.6l3-0.4l0.8-6.7l5.6-0.9l7.2-3.2l2.5-3.2l2.3,2.1l2.8-2.9l6.1-0.7l6.6-5.3l6.3-5.9l3.3-7.6l2.3-8.4l2.1-6.9l2.8-0.5 l-0.1-5.1l-0.8-5.1l-3.8-2l-2.5-3.4l2.8-1.7l-1.6-4.7l-5.4-4.9l-5.4-5.8l-4.6-6.3l-7.1-3.5l0.9-4.6l3.8-3.2l1-3.5l6.7-1.8l-2.4-3.4 l-3.4-0.2l-5.8-2.5l-3.9,4.6l-4.9-1.9l-1.5-2.9l-4.7-1l-4.7-4.4l1.2-3l5-0.3l1.2-4.1l3.6-4.4l3.4-2.2l4.4,3.3l-1.9,4.2l2.3,2.5 l-1.4,3l4.8-1.8l2.4-2.9l6.3-1.9l2.1-4l3.8-3.4l1-4.4l3.6,2l4.6,0.2l-2.7-3.3l6.3-2.6l-0.1-3.5l5.5,3.6l0,0l-1.9-3.1l2.5-0.1 l-3.8-7.3l-4.7-5.3l2.9-2.2l6.8,1.1l-0.6-6l-2.8-6.8l0.4-2.3l-1.3-5.6l-6.9,1.8l-2.6,2.5h-7.5l-6-5.8l-8.9-4.5L1600.4,256.8 L1600.4,256.8z\"},CO:{d:\"M578.3,497.2l1.2-2.1l-1.3-1.7l-2-0.4l-2.9,3.1l-2.3,1.4l-4.6,3.2l-4.3-0.5l-0.5,1.3l-3.6,0.1l-3.3,3l-1.4,5.4 l-0.1,2.1l-2.4,0.7l-4.4,4.4l-2.9-0.2l-0.7,0.9l1.1,3.8l-1.1,1.9l-1.8-0.5l-0.9,3.1l2.2,3.4l0.6,5.4l-1.2,1.6l1.1,5.9l-1.2,3.7 l2,1.5l-2.2,3.3l-2.5,4l-2.8,0.4l-1.4,2.3l0.2,3.2l-2.1,0.5l0.8,2l5.6,3.6l1-0.1l1.4,2.7l4.7,0.9l1.6-1l2.8,2.1l2.4,1.5l1.5-0.6 l3.7,3l1.8,3l2.7,1.7l3.4,6.7l4.2,0.8l3-1.7l2.1,1.1l3.3-0.6l4.4,3l-3.5,6.5l1.7,0.1l2.9,3.4l2.2-17.4l0.1-2.8l-0.9-3.6l-2.5-2.4 v-4.6l3.2-1l1.1,0.6l0.2-2.4l-3.3-0.7v-3.9l10.9,0.1l1.9-2.2l1.6,2l1,3.8l1.1-0.8l-1.7-6.4l-1.4-2.2l-2-1.4l2.9-3.1l-0.2-1.5 l-1.5-1.9l-1-4.2l0.5-4.6l1.3-2.1l1.2-3.4l-2-1.1l-3.2,0.7l-4-0.3l-2.3,0.7l-3.8-5.5l-3.2-0.8l-7.2,0.6l-1.3-2.2l-1.3-0.6l-0.2-1.3 l0.8-2.4l-0.4-2.5l-1.1-1.4l-0.6-2.9l-2.9-0.5l1.8-3.7l0.9-4.5l1.8-2.4l2.2-1.8l1.6-3.2L578.3,497.2L578.3,497.2z\"},KM:{d:\"M1221.1,650.5l-0.4-0.4h-0.4v0.2l0.1,0.4l1.1,0.2L1221.1,650.5L1221.1,650.5z M1225,649L1225,649l-0.3,0.1l-0.1,0.2 l-0.1,0.3h-0.3h-0.2h-0.4l0.8,0.5l0.5,0.5l0.2,0.2l0.1-0.2l0.1-0.7L1225,649L1225,649z M1219.4,647.9l0.2-0.3l-0.2-0.7l-0.4-0.8 l0.1-1.4l-0.2-0.2h-0.3l-0.1,0.1l-0.1,0.3l-0.3,2l0.4,0.6l0.3,0.1L1219.4,647.9L1219.4,647.9L1219.4,647.9z\"},CG:{d:\"M1080.3,549.9l-3.6-0.4l-3.8-1.1l-3.3,3.4l-2.9,5.9l-0.4,3.5l-4.5-1.5l-4.5-1.7l-7.1-0.3l-0.4,2.8l1.5,3.3l4.2-0.5 l1.4,1.2l-2.4,7.4l2.7,3.8l0.6,4.9l-0.8,4.3l-1.7,3l-4.9-0.3l-3-3l-0.5,2.8l-3.8,0.8l-1.9,1.6l2.1,4.2l-4.3,3.5l4.6,6.7l2.2-2.7 l1.8-1.1l2,2.2l1.5,0.6l1.9-2.4l3.1,0.1l0.4,1.8l2,1.1l3.4-4l3.3-3.1l1.4-2l-0.2-5.3l2.5-6.2l2.6-3.2l3.7-3.1l0.6-2l0.2-2.4l0.9-2.2 l-0.3-3.6l0.7-5.6l1.1-4l1.6-3.4L1080.3,549.9L1080.3,549.9z\"},CR:{d:\"M509.1,502.6l-1.4,1.3l-1.7-0.4l-0.8-1.3l-1.7-0.5l-1.4,0.8l-3.5-1.7l-0.9,0.8l-1.4,1.2l1.5,0.9l-0.9,2l-0.1,2 l0.7,1.3l1.7,0.6l1.2,1.8l1.2-1.6l-0.3-1.8l1.4,1.1l0.3,1.9l1.9,0.8l2.1,1.3l1.5,1.5l0.1,1.4l-0.7,1.1l1.1,1.3l2.9,1.4l0.4-1.2 l0.5-1.3l-0.1-1.2l0.8-0.7l-1.1-1l0.1-2.5l2.2-0.6l-2.4-2.7l-2-2.6L509.1,502.6L509.1,502.6z\"},HR:{d:\"M1065,280.4l-4-2.6l-1.6-0.8l-3.9,1.7l-0.3,2.5l-1.7,0.6l0.2,1.7l-2-0.1l-1.8-1l-0.8,1l-3.5-0.2l-0.2,0.1v2.2l1.7,2 l1.3-2.6l3.3,1l0.3,2l2.5,2.6l-1,0.5l4.6,4.5l4.8,1.8l3.1,2.2l5,2.3l0,0l0.5-1l-4.7-2.4l-2.2-2.5l-2-1.4l-2.5-2.3l-1.3-1.9l-2.7-2.9 l0.9-2.5l1.9,1.4l1-1.3l2.3-0.1l4.4,1l3.5-0.1l2.4,1.4l0,0l1.7-2.3l-1.7-1.8l-1.5-2.4l0,0l-1.8,0.9L1065,280.4L1065,280.4z\"},CU:{d:\"M539,427.3l-4.9-2.1l-4.3-0.1l-4.7-0.5l-1.4,0.7l-4.2,0.6l-3,1.3l-2.7,1.4l-1.5,2.3l-3.1,2l2.2,0.6l2.9-0.7l0.9-1.6 l2.3-0.1l4.4-3.3l5.4,0.3l-2.3,1.6l1.8,1.3l7,1l1.5,1.3l4.9,1.7l3.2-0.2l0.8,3.6l1.7,1.8l3.5,0.4l2.1,1.7l-4.1,3.5l7.9-0.6l3.8,0.5 l3.7-0.3l3.8-0.8l0.8-1.5l-3.9-2.6l-4-0.3l0.6-1.7l-3.1-1.3h-1.9l-3-2.8l-4.2-4l-1.8-1.5l-5.2,0.8L539,427.3L539,427.3z\"},CW:{d:\"M595.9,494.9v-0.6l-0.9-0.4v0.3l0.1,0.2l0.3,0.1l0.1,0.2l-0.1,0.6l0.2,0.3L595.9,494.9L595.9,494.9z\"},CY:{d:\"M1149.9,348.4l-0.3-0.1l-0.5,0.2l-0.4,0.4l-0.4,0.3l-0.5-0.3l0.2,0.9l0.6,1.1l0.2,0.3l0.3,0.2l1.1,0.3h0.3h0.6 l0.2,0.1l0.2,0.4h0.4v-0.1v-0.3l0.2-0.2l0.3-0.2h0.3l0.6-0.1l0.6-0.2l0.5-0.4l0.9-1h0.3h0.3h0.6l0.6-0.1l-0.2-0.4l-0.1-0.1l-0.4-0.5 l-0.2-0.4l0.1-0.6l2.5-1.9l0.5-0.5l-0.8,0.2l-0.6,0.4l-0.4,0.2l-0.7,0.4l-2.3,0.8l-0.8,0.1h-0.8l-1-0.1l-0.9-0.2v0.7l-0.2,0.6 l-0.6,0.2L1149.9,348.4L1149.9,348.4z\"},CZ:{d:\"M1049.4,248.5l-2.1,0.6l-1.4-0.7l-1.1,1.2l-3.4,1.2l-1.7,1.5l-3.4,1.3l1,1.9l0.7,2.6l2.6,1.5l2.9,2.6l3.8,2l2.6-2.5 l1.7-0.5l4,1.9l2.3-0.3l2.3,1.2l0.6-1.4l2.2,0.1l1.6-0.6l0.1-0.6l0.9-0.3l0.2-1.4l1.1-0.3l0.6-1.1h1.5l-2.6-3.1l-3.6-0.3l-0.7-2 l-3.4-0.6l-0.6,1.5l-2.7-1.2l0.1-1.7l-3.7-0.6L1049.4,248.5L1049.4,248.5z\"},CD:{d:\"M1124.9,539.4l-4.3-0.7l-2,0.6l-0.9,1.5l-1.8,0.2l-2.2-1.3l-6.2,3.1l-2.6-0.6l-0.8,0.5l-1.6,3.8l-4.2-1.2l-4.1-0.6 l-3.6-2.4l-4.6-2.1l-3,2l-2.2,3.2l-0.5,4.5l-0.3,3.8l-1.6,3.4l-1.1,4l-0.7,5.6l0.3,3.6l-0.9,2.2l-0.2,2.4l-0.6,2l-3.7,3.1l-2.6,3.2 l-2.5,6.2l0.2,5.3l-1.4,2l-3.3,3.1l-3.4,4l-2-1.1l-0.4-1.8l-3.1-0.1l-1.9,2.4l-1.5-0.6l-2,1.3l-0.9,1.7l-0.2,2.7l-1.5,0.7l0.8,2 l2.3-0.9l1.7,0.1l1.9-0.7l16.6,0.1l1.3,4.7l1.6,3.8l1.3,2.1l2.1,3.3l3.7-0.5l1.9-0.9l3,0.9l0.9-1.6l1.5-3.7l3.4-0.3l0.3-1.1h2.9 l-0.5,2.3h6.8v4l1.2,2.4l-0.9,3.8l0.3,4l1.9,2.3l-0.5,7.6l1.4-0.6l2.4,0.2l3.5-1l2.6,0.4l1.9,0.1l0.3,2l2.6-0.1l3.5,0.6l1.8,2.8 l4.5,0.9l3.4-2l1.2,3.4l4.3,0.8l2,2.8l2.1,3.5h4.3l-0.3-6.9l-1.5,1.2l-3.9-2.5l-1.4-1.1l0.8-6.4l1.2-7.5l-1.2-2.8l1.6-4.1l1.6-0.7 l7.5-1.1l1,0.3l0.2-1.1l-1.5-1.7l-0.7-3.5l-3.4-3.5l-1.8-4.5l1-2.7l-1.5-3.6l1.1-10.2l0.1,0.1l-0.1-1.1l-1.4-2.9l0.6-3.5l0.8-0.4 l0.2-3.8l1.6-1.8l0.1-4.8l1.3-2.4l0.3-5.1l1.2-3l2.1-3.3l2.2-1.7l1.8-2.3l-2.3-0.8l0.3-7.5l0,0l-5-4.2l-1.4-2.7l-3.1,1.3l-2.6-0.4 l-1.5,1.1l-2.5-0.8l-3.5-5.2l-1.8,0.6L1124.9,539.4L1124.9,539.4z\"},DK:{d:\"M1035.9,221.2l-1.7-3l-6.7,2l0.9,2.5l5.1,3.4L1035.9,221.2L1035.9,221.2z M1027.3,216.1l-2.6-0.9l-0.7-1.6l1.3-2 l-0.1-3l-3.6,1.6l-1.5,1.7l-4,0.4l-1.2,1.7l-0.7,1.6l0.4,6.1l2.1,3.4l3.6,0.8l3-0.9l-1.5-3l3.1-4.3l1.4,0.7L1027.3,216.1 L1027.3,216.1z\"},DJ:{d:\"M1217.8,499.2l-2.5-1.7l3.1-1.5l0.1-2.7l-1.4-1.9l-1.6,1.5l-2.4-0.5l-1.9,2.8l-1.8,3l0.5,1.7l0.2,2l3.1,0.1l1.3-0.5 l1.3,1.1L1217.8,499.2L1217.8,499.2z\"},DM:{d:\"M635.8,475.1l0.3-0.7l-0.1-1l-0.2-0.4l-0.8-0.3v0.2l-0.1,0.5l0.3,0.8l0.1,1.1L635.8,475.1z\"},DO:{d:\"M579.6,457.4v1.8l1.4,1l2.6-4.4l2-0.9l0.6,1.6l2.2-0.4l1.1-1.2l1.8,0.3l2.6-0.2l2.5,1.3l2.3-2.6l-2.5-2.3l-2.4-0.2 l0.3-1.9l-3,0.1l-0.8-2.2l-1.4,0.1l-3.1-1.6l-4.4-0.1l-0.8,1.1l0.2,3.5l-0.7,2.4l-1.5,1.1l1.2,1.9L579.6,457.4L579.6,457.4z\"},EC:{d:\"M553.1,573.1l-2.4-1.5l-2.8-2.1l-1.6,1l-4.7-0.9l-1.4-2.7l-1,0.1l-5.6-3.6l-3.9,2.5l-3.1,1.4l0.4,2.6l-2.2,4.1 l-1,3.9l-1.9,1l1,5.8l-1.1,1.8l3.4,2.7l2.1-2.9l1.3,2.8l-2.9,4.7l0.7,2.7l-1.5,1.5l0.2,2.3l2.3-0.5l2.3,0.7l2.5,3.2l3.1-2.6l0.9-4.3 l3.3-5.5l6.7-2.5l6-6.7l1.7-4.1L553.1,573.1z\"},EG:{d:\"M1129.7,374.8l-5.5-1.9l-5.3-1.7l-7.1,0.2l-1.8,3l1.1,2.7l-1.2,3.9l2,5.1l1.3,22.7l1,23.4h22.1h21.4h21.8l-1-1.3 l-6.8-5.7l-0.4-4.2l1-1.1l-5.3-7l-2-3.6l-2.3-3.5l-4.8-9.9l-3.9-6.4l-2.8-6.7l0.5-0.6l4.6,9.1l2.7,2.9l2,2l1.2-1.1l1.2-3.3l0.7-4.8 l1.3-2.5l-0.7-1.7l-3.9-9.2l0,0l-2.5,1.6l-4.2-0.4l-4.4-1.5l-1.1,2.1l-1.7-3.2l-3.9-0.8l-4.7,0.6l-2.1,1.8l-3.9,2L1129.7,374.8 L1129.7,374.8z\"},SV:{d:\"M487.2,487l0.6-2.5l-0.7-0.7l-1.1-0.5l-2.5,0.8l-0.1-0.9l-1.6-1l-1.1-1.3l-1.5-0.5l-1.4,0.4l0.2,0.7l-1.1,0.7 l-2.1,1.6l-0.2,1l1.4,1.3l3.1,0.4l2.2,1.3l1.9,0.6l3.3,0.1L487.2,487L487.2,487z\"},GQ:{d:\"M 1040.1 557.8 l -9.2 -0.2 l -1.9 7.2 l 1 0.9 l 1.9 -0.3 h 8.2 V 557.8 L 1040.1 557.8 z M 1023 551 L 1023.6 550.2 L 1023.6 549.8 L 1024.6 548.25 L 1024.45 547.5 L 1023.04 547.4 L 1022.5 548.2 L 1022.55 548.55 L 1022.25 549.36 L 1021.55 549.5 L 1021.25 550.15 L 1021.5 550.7 L 1023 551 M 1003.8 580.2 L 1003.9 580.44 L 1003.82 580.62 L 1003.65 580.55 L 1003.63 580.232 L 1003.8 580.2\"},ER:{d:\"M1198.1,474l-3.2-3.1l-1.8-5.9l-3.7-7.3l-2.6,3.6l-4,1l-1.6,2l-0.4,4.2l-1.9,9.4l0.7,2.5l6.5,1.3l1.5-4.7l3.5,2.9 l3.2-1.5l1.4,1.3l3.9,0.1l4.9,2.5l1.6,2.2l2.5,2.1l2.5,3.7l2,2.1l2.4,0.5l1.6-1.5l-2.8-1.9l-1.9-2.2l-3.2-3.7l-3.2-3.6L1198.1,474z\"},EE:{d:\"M1093.2,197.5l-5.5,0.9l-5.4,1.6l0.9,3.4l3.3,2.1l1.5-0.8l0.1,3.5l3.7-1l2.1,0.7l4.4,2.2h3.8l1.6-1.9l-2.5-5.5 l2.6-3.4l-0.9-1l0,0l-4.6,0.2L1093.2,197.5z\"},ET:{d:\"M1187.6,477l-1.5,4.7l-6.5-1.3l-0.7,5.5l-2.1,6.2l-3.2,3.2l-2.3,4.8l-0.5,2.6l-2.6,1.8l-1.4,6.7v0.7l0.2,5l-0.8,2 l-3,0.1l-1.8,3.6l3.4,0.5l2.9,3.1l1,2.5l2.6,1.5l3.5,6.9l2.9,1.1v3.6l2,2.1h3.9l7.2,5.4h1.8l1.3-0.1l1.2,0.7l3.8,0.5l1.6-2.7 l5.1-2.6l2.3,2.1h3.8l1.5-2l3.6-0.1l4.9-4.5l7.4-0.3l15.4-19.1l-4.8,0.1l-18.5-7.6l-2.2-2.2l-2.1-3.1l-2.2-3.5l1.1-2.3l-1.3-1.1 l-1.3,0.5l-3.1-0.1l-0.2-2l-0.5-1.7l1.8-3l1.9-2.8l-2-2.1l-2.5-3.7l-2.5-2.1l-1.6-2.2l-4.9-2.5l-3.9-0.1l-1.4-1.3l-3.2,1.5 L1187.6,477L1187.6,477z\"},FK:{d:\"M690.3,902.7l-0.1-0.3l-0.4-0.2l-0.2-0.1l0.1,0.2l0.1,0.3l0.1,0.2l0.2,0.1L690.3,902.7L690.3,902.7z M695.8,901.4 L695.8,901.4l-0.3-0.1l-0.1,0.2l0.2,0.3l0.4,0.1L695.8,901.4L695.8,901.4z M682.9,900l-0.1,0.2l-0.4,0.1l0.2,0.3l0.6,0.4h0.4 l0.1-0.3l-0.1-0.6h-0.3L682.9,900L682.9,900z M685.7,898l-0.9-0.3l-0.4-0.3h-0.3l0.4,0.4l0.1,0.2l0.1,0.2l0.6,0.3l0.6,0.3l0.4,0.3 l-0.1,0.1l-0.8,0.3h-0.3l-0.2,0.1l0.4,0.2l0.6-0.1l0.2-0.1h0.2l0.3,0.1v0.2l-0.1,0.2l-0.2,0.2l-0.4,0.3l-0.6,0.4h-0.8l-0.7,0.7 l0.9,0.5l0.7,0.3h0.9v-0.1l0.2-0.1h0.3l0.1-0.1l0.2-0.4v-0.6h0.2l0.3,0.1l0.7-0.1l0.3-0.1l0.6-0.9l0.4-0.8l0.2-0.4l0.3-0.2l0.1-0.2 l0.1-0.3l0.3-0.2v-0.3l-0.4-0.2l-0.3-0.2l-0.3,0.3l-0.2-0.1l-0.9,0.3h-0.4l-0.3-0.2l-0.4-0.1l-0.4,0.1l-0.5,0.5L685.7,898L685.7,898 z M686.4,897.6l0.1-0.3l-0.1-0.2l-0.5-0.2h-0.5l0.2,0.5l0.2,0.2H686.4z M692.3,896.9h-0.4l0.4,0.5l-0.8,0.8l0.2,0.6l0.3,0.4l0.1,0.2 l-0.1,0.1l-0.4,0.1l-0.3,0.1l-0.2,0.3l-0.9,0.9l0.2,0.2l-0.3,0.7l0.2,0.3l0.8,0.7l0.8,0.4v-0.7l0.4-0.1l0.4,0.2l0.4-0.2l-0.9-1h0.3 l2.5,0.5l-0.1-0.4l-0.1-0.2l-0.3-0.4l1.5-0.4l0.5-0.3l0.2-0.3l0.6-0.1l0.8-0.3l-0.1-0.1l0.1-0.3l-0.4-0.2l-0.5-0.1l0.1-0.3l0.5-0.1 l-0.8-0.7l-0.3-0.1l-1,0.1l-0.3,0.1v0.2l0.1,0.3l0.3,0.3l0.1,0.2l-0.2-0.1l-1.1-0.4l-0.2-0.1l-0.2-0.4l0.2-0.1l0.3,0.1l0.1-0.3 l-0.4-0.3l-0.4-0.1l-0.9,0.1L692.3,896.9L692.3,896.9z\"},FO:{d:\"M947,186.9v-0.3l-0.1-0.3v-0.2h-0.1l-0.5-0.1l-0.1-0.2h-0.1v0.2l0.1,0.4l0.5,0.4L947,186.9L947,186.9L947,186.9zM947.5,184.8v-0.1l-0.2-0.2l-0.5-0.2l-0.2-0.1l-0.2,0.1v0.2l0.1,0.1l0.4,0.1l0.4,0.3h0.1L947.5,184.8L947.5,184.8z M945.1,182.9l-0.2-0.1l-0.5,0.1h-0.3l0.1,0.3l0.6,0.2h0.3h0.3l0.2-0.1l-0.1-0.2L945.1,182.9L945.1,182.9z M947.6,182.4l-0.8-0.2l-0.6-0.3l-1,0.1l0.7,1.1l0.8,0.7l0.4,0.2v-0.1v-0.2l-0.4-0.5l-0.1-0.1V183l0.1-0.1h0.2l0.3,0.2h0.2L947.6,182.4L947.6,182.4z M948.6,182.2l-0.3-0.2l-0.4-0.4v0.5v0.3v0.1h0.1l0.3,0.1L948.6,182.2L948.6,182.2z\"},FJ:{d:\"M1976.7,674.4l-3.7,2l-1.9,0.3l-3.1,1.3l0.2,2.4l3.9-1.3l3.9-1.6L1976.7,674.4L1976.7,674.4z M1965.7,682.5l-1.6,1 l-2.3-0.8l-2.7,2.2l-0.2,2.8l2.9,0.8l3.6-0.9l1.8-3.3L1965.7,682.5L1965.7,682.5z\"},FI:{d:\"M1093.4,144.4l0.8-3.8l-5.7-2.1l-5.8,1.8l-1.1,3.9l-3.4,2.4l-4.7-1.3l-5.3,0.3l-5.1-2.9l-2.1,1.4l5.9,2.7l7.2,3.7 l1.7,8.4l1.9,2.2l6.4,2.6l0.9,2.3l-2.6,1.2l-8.7,6.1l-3.3,3.6l-1.5,3.3l2.9,5.2l-0.1,5.7l4.7,1.9l3.1,3.1l7.1-1.2l7.5-2.1l8-0.5l0,0 l7.9-7.4l3.3-3.3l0.9-2.9l-7.3-3.9l0.9-3.7l-4.9-4.1l1.7-4.8l-6.4-6.3l2.8-4.1l-7.2-3.7L1093.4,144.4L1093.4,144.4z\"},FR:{d:\"M1012.2,290.9l2.7,0.8l-0.5,2.7l-0.1,0.1l-0.3-0.2l-0.5,0.6l0,0.3l-3.6,2.6l-10-1.6l-7.4,2l-0.5,3.7l-6,0.8 l-1.3-0.7l0.7-0.3l0.2-0.4l-0.2-0.2l-0.7-0.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l0.1,0.1v0.2l-3.7-1.8l-1.9,1.3l-9.4-2.8l-2-2.4l2.7-3.7 l1-12.3l-5.1-6.5l-3.6-3.1l-7.5-2.4l-0.4-4.6l6.4-1.3l8.2,1.6l-1.4-7l4.6,2.6l11.3-4.8l1.4-5.1l4.3-1.2l0.7,2.2l2.2,0.1l2.4,2.4 l3.4,2.9l2.5-0.4l4.4,2.8l0,0l1.1,0.5l1.4-0.1l2.4,1.6l7.1,1.2l-2.3,4.2l-0.5,4.5l-1.3,1l-2.3-0.6l0.2,1.6l-3.5,3.5v2.8l2.4-0.9 l1.8,2.7l0,0l-0.2,1.7l1.6,2.4l-1.7,1.8L1012.2,290.9z M1025.6,304.3l-1-6l-0.6,1.6l-2.7,1.1l-0.7,4.3l3,3.7L1025.6,304.3z\"},GF:{d:\"M681.4,556.2l1.8-4.7l3.5-5.8l-0.9-2.6l-5.8-5.4l-4.1-1.5l-1.9-0.7l-3.1,5.5l0.4,4.4l2.1,3.7l-1,2.7l-0.6,2.9 l-1.4,2.8l2.4,1.3l1.8-1.8l1.2,0.3l0.8,1.8l2.7-0.5L681.4,556.2z\"},PF:{d:\"M213.2,704.9l-0.1-0.3l-0.2-0.3l-0.1,0.1l0.1,0.1l0.2,0.3v0.2L213.2,704.9z M222.5,690.2l-0.2-0.2l-0.4-0.2 l-0.2-0.1l-0.2-0.1l-0.1,0.1l0.1,0.1h0.1l0.3,0.2l0.3,0.1L222.5,690.2L222.5,690.2L222.5,690.2L222.5,690.2z M198,689.1l-0.6-0.3 l0.1,0.2l0.4,0.2l0.2,0.1L198,689.1L198,689.1z M218.5,688.9l-0.4-0.5h-0.3L218.5,688.9L218.5,688.9z M196.9,687.9l-0.4-0.4 l-0.2-0.3l-0.3-0.1l0.1,0.1l0.4,0.4l0.3,0.4l0.2,0.1L196.9,687.9z M196.6,685.8l-0.1-0.1l0,0v-0.3l0.2-0.3l0.6-0.4v-0.1l0,0 l-0.2,0.1l-0.4,0.2l-0.2,0.2l-0.1,0.2l-0.1,0.3l0.1,0.2l0.1,0.1h0.2L196.6,685.8L196.6,685.8z M149.2,684.7l-0.2-0.6l-0.3-0.5 l-0.8-0.1l-0.5,0.2l-0.1,0.2l0.1,0.4l0.5,0.7l0.5,0.1l0.8-0.1l0.4,0.6l0.2,0.1l0.4,0.1l0.1-0.3l-0.2-0.5L149.2,684.7L149.2,684.7z M146.3,683.8l0.1-0.4l-0.2-0.1h-0.5v0.2l0.1,0.2l0.1,0.1l0.3,0.2L146.3,683.8L146.3,683.8z M136.6,679.5h0.2l-0.4-0.6l-0.3-0.2v0.1 v0.7l0.3,0.1L136.6,679.5z M180.5,677.9h-0.2H180h-0.1l0.5,0.1l0.4,0.2L180.5,677.9L180.5,677.9z M179.8,678l-0.3-0.1l-0.3-0.2h-0.3 l0.7,0.3H179.8L179.8,678z M136,678.1l0.1-0.2l-0.1-0.1l-0.4-0.2l0.1,0.3v0.2H136L136,678.1L136,678.1z M168.8,676.1l-0.3-0.4 l-0.2-0.3l-0.2-0.4l-0.4-0.5l0.1,0.3l0.1,0.2l0.2,0.2l0.2,0.4l0.1,0.2l0.3,0.4h0.1L168.8,676.1L168.8,676.1z M185,674.6l0.1-0.5 h-0.2L185,674.6L185,674.6L185,674.6z M170.6,673l-0.6-0.6h-0.1l0.1,0.2l0.5,0.5l0.1,0.2V673L170.6,673z M201.4,639.1l0.1-0.2v-0.2 l-0.1-0.1l-0.3-0.1l0.1,0.7L201.4,639.1L201.4,639.1z M198.7,635.4l-0.1-0.2h-0.2l-0.1,0.1v0.5L198.7,635.4L198.7,635.4z M198.8,633.8l-0.8,0.5l0.2,0.4l0.4,0.1l0.2-0.2l0.8-0.1l0.3-0.4l-0.3,0.1L198.8,633.8L198.8,633.8z M192.7,632.1l0.2-0.5l-0.2-0.1 l-0.4,0.2v0.2l0.3,0.4L192.7,632.1L192.7,632.1z M195.3,629l0.3-0.1v-0.1l-0.2-0.2l-0.3-0.1l-0.1,0.1l-0.1,0.2l0.1,0.3L195.3,629 L195.3,629z M192.4,628.9l0.1-0.3v-0.2l-0.1-0.2l-0.9-0.2l-0.1,0.1v0.4l0.2,0.5h0.3L192.4,628.9z\"},GA:{d:\"M1050.2,557.7l-0.7-0.3l-3.4,0.8l-3.4-0.8l-2.6,0.4v7.6h-8.2l-1.9,0.3l-1.1,4.8l-1.3,4.6l-1.3,2l-0.2,2.1l3.4,6.6 l3.7,5.3l5.8,6.4l4.3-3.5l-2.1-4.2l1.9-1.6l3.8-0.8l0.5-2.8l3,3l4.9,0.3l1.7-3l0.8-4.3l-0.6-4.9l-2.7-3.8l2.4-7.4l-1.4-1.2l-4.2,0.5 l-1.5-3.3L1050.2,557.7L1050.2,557.7z\"},GM:{d:\"M882.8,488.5l5,0.1l1.4-0.9h1l2.1-1.5l2.4,1.4l2.4,0.1l2.4-1.5l-1.1-1.8l-1.8,1.1l-1.8-0.1l-2.1-1.5l-1.8,0.1 l-1.3,1.5l-6.1,0.2L882.8,488.5L882.8,488.5z\"},GE:{d:\"M1200,300.2l-7.5-2.9l-7.7-1l-4.5-1.1l-0.5,0.7l2.2,1.9l3,0.7l3.4,2.3l2.1,4.2l-0.3,2.7l5.4-0.3l5.6,3l6.9-1l1.1-1 l4.2,1.8l2.8,0.4l0.6-0.7l-3.2-3.4l1.1-0.9l-3.5-1.4l-2.1-2.5l-5.1-1.3l-2.9,1L1200,300.2L1200,300.2z\"},DE:{d:\"M1043.6,232.3l-2.4-1.9l-5.5-2.4l-2.5,1.7l-4.7,1.1l-0.1-2.1l-4.9-1.4l-0.2-2.3l-3,0.9l-3.6-0.8l0.4,3.4l1.2,2.2 l-3,3l-1-1.3l-3.9,0.3l-0.9,1.3l1,2l-1,5.6l-1.1,2.3h-2.9l1.1,6.4l-0.4,4.2l1,1.4l-0.2,2.7l2.4,1.6l7.1,1.2l-2.3,4.2l-0.5,4.5h4.2 l1-1.4l5.4,1.9l1.5-0.3l2.6,1.7l0.6-1.6l4.4,0.3l3.4-1.2l2.4,0.2l1.7,1.3l0.4-1.1l-1-4l1.7-0.8l1.5-2.9l-2.9-2.6l-2.6-1.5l-0.7-2.6 l-1-1.9l3.4-1.3l1.7-1.5l3.4-1.2l1.1-1.2l1.4,0.7l2.1-0.6l-2.3-3.9l0.1-2.1l-1.4-3.3l-2-2.2l1.2-1.6L1043.6,232.3L1043.6,232.3z\"},GH:{d:\"M976.8,502.1l-2.6-0.5l-1.8,1l-2.4-0.5l-9.7,0.3l-0.2,3.6l0.8,4.8l1.4,9.1l-2.3,5.3l-1.5,7.2l2.4,5.5l-0.2,2.5 l5,1.8l5-1.9l3.2-2.1l8.7-3.8l-1.2-2.2l-1.5-4l-0.4-3.2l1.2-5.7l-1.4-2.3l-0.6-5.1l0.1-4.6l-2.4-3.3L976.8,502.1L976.8,502.1z\"},GR:{d:\"M1101.9,344.9l-0.8,2.8l6.6,1.2v1.1l7.6-0.6l0.5-1.9l-2.8,0.8v-1.1l-3.9-0.5l-4.1,0.4L1101.9,344.9L1101.9,344.9z M1113.4,307.5l-2.7-1.6l0.3,3l-4.6,0.6l-3.9-2.1l-3.9,1.7l-3.8-0.2l-1,0.2l-0.7,1.1l-2.8-0.1l-1.9,1.3l-3.3,0.6v1.6l-1.6,0.9 l-0.1,2.1l-2.1,3l0.5,1.9l2.9,3.6l2.3,3l1.3,4.3l2.3,5.1l4.6,2.9l3.4-0.1l-2.4-5.7l3.3-0.7l-1.9-3.3l5,1.7l-0.4-3.7l-2.7-1.8l-3.2-3 l1.8-1.4l-2.8-3l-1.6-3.8l0.9-1.3l3,3.2h2.9l2.5-1l-3.9-3.6l6.1-1.6l2.7,0.6l3.2,0.2l1.1-0.7L1113.4,307.5L1113.4,307.5z\"},GL:{d:\"M887.4,76.3l-26-0.4l-11.8,0.3l-5,1.3l-11.5-0.1l-12.7,2.1l-1.6,1.7l6.7,2.1l-6.2-1.3l-4.5-0.3l-7-1.4l-10.6,2.1 l-2.7-1.2h-10.4l-10.9,0.6l-8.9,1l-0.2,1.8l-5.3,0.5L744.2,88l-4.6,1.7l8.1,1.5l-2.8,1.6L730,95l-15.5,2.2l-2.2,1.7l6.4,2l14.5,1.2 l-7.5,0.2l-10.9,1.5l3.8,3.1l3,1.5l9.4-0.3l10.1-0.2l7.6,0.3l8,2.9l-1.4,2.1l3.6,1.9l1.4,5.3l1,3.6l1.4,1.9l-7,4.8l2.6,1.3l4.4-0.8 l2.6,1.8l5.3,3.4l-7.5-1.4h-3.8l-3,2.8l-1.5,3.6l4.2,1.8l4-0.8l2.6-0.8l5.5-1.9l-2.8,4.2l-2.6,2.3l-7.1,2l-7,6.3l2,2l-3.4,4l3.7,5.2 l-1.5,5l0.7,3.7l4.8,7.1l0.8,5.6l3.1,3.2h8.9l5,4.7l6.5-0.3l4.1-5.7l3.5-4.8l-0.3-4.4l8.6-4.6l3.3-3.7l1.4-3.9l4.7-3.5l6.5-1.3 l6.1-1.4l3-0.2l10.2-3.9l7.4-5.7l4.8-2.1l4.6-0.1l12.5-1.8l12.1-4.3l11.9-4.6l-5.5-0.3l-10.6-0.2l5.3-2.8l-0.5-3.6l4.2,3l2.7,2.1 l7.3-1l-0.6-4.3l-4.5-3.1l-5-1.3l2.4-1.4l7.2,2.1l0.5-2.3l-4.1-3.4h5.4l5.6-0.8l1.7-1.8l-4-2.1l8.6-0.3l-4-4.3l4.1-0.5l0.1-4.2 l-6.2-2.5l6.4-1.6l5.8-0.1l-3.6-3.2l1.1-5.1l3.6-2.9l4.9-3.2l-8-0.2l11.3-0.7l2.2-1l14.6-2.9l-1.6-1.7l-10-0.8l-16.9,1.5l-9.2,1.5 l4.5-2.3l-2.3-1.4l-7,1.2l-9.7-1.4l-12.1,0.5l-1.4-0.7l18.3-0.4l12.9-0.2l6.6-1.4L887.4,76.3L887.4,76.3z\"},GD:{d:\"M632.1,495.7l0.5-0.2l0.2-1.1l-0.3-0.1l-0.3,0.3l-0.3,0.5v0.4l-0.2,0.3L632.1,495.7L632.1,495.7z\"},GP:{d:\"M636.4,471.1l0.2-0.2v-0.3l-0.2-0.3l-0.2,0.1l-0.2,0.3v0.3l0.1,0.1H636.4L636.4,471.1z M634.5,470.3l0.2-0.2v-1.2 l0.1-0.3l-0.2-0.1l-0.2-0.2l-0.6-0.2l-0.1,0.1l-0.2,0.3l0.1,1.5l0.2,0.5l0.2,0.1L634.5,470.3L634.5,470.3z M636.1,468.9l0.8-0.2 l-0.9-0.6l-0.2-0.4v-0.3l-0.4-0.3l-0.2,0.2l-0.1,0.3l0.1,0.5l-0.3,0.4l0.1,0.4l0.4,0.1L636.1,468.9L636.1,468.9z\"},GT:{d:\"M482.8,458.9l-5.1-0.1h-5.2l-0.4,3.6h-2.6l1.8,2.1l1.9,1.5l0.5,1.4l0.8,0.4l-0.4,2.1H467l-3.3,5.2l0.7,1.2l-0.8,1.5 l-0.4,1.9l2.7,2.6l2.5,1.3l3.4,0.1l2.8,1.1l0.2-1l2.1-1.6l1.1-0.7l-0.2-0.7l1.4-0.4l1.3-1.6l-0.3-1.3l0.5-1.2l2.8-1.8l2.8-2.4 l-1.5-0.8l-0.6,0.9l-1.7-1.1h-1.6l1.2-7.2L482.8,458.9L482.8,458.9z\"},GN:{d:\"M912.4,493l-0.8,0.4l-3-0.5l-0.4,0.7l-1.3,0.1l-4-1.5l-2.7-0.1l-0.1,2.1l-0.6,0.7l0.4,2.1l-0.8,0.9h-1.3l-1.4,1 l-1.7-0.1l-2.6,3.1l1.6,1.1l0.8,1.4l0.7,2.8l1.3,1.2l1.5,0.9l2.1,2.5l2.4,3.7l3-2.8l0.7-1.7l1-1.4l1.5-0.2l1.3-1.2h4.5l1.5,2.3 l1.2,2.7L917,515l0.9,1.7v2.3l1.5-0.3l1.2-0.2l1.5-0.7l2.3,3.9l-0.4,2.6l1.1,1.3l1.6,0.1l1.1-2.6l1.6,0.2h0.9l0.3-2.8l-0.4-1.2 l0.6-0.9l2-0.8l-1.3-5.1l-1.3-2.6l0.5-2.2l1.1-0.5l-1.7-1.8l0.3-1.9l-0.7-0.7l-1.2,0.6l0.2-2.1l1.2-1.6l-2.3-2.7l-0.6-1.7l-1.3-1.4 l-1.1-0.2l-1.3,0.9l-1.8,0.8l-1.6,1.4l-2.4-0.5l-1.5-1.6l-0.9-0.2l-1.5,0.8h-0.9L912.4,493L912.4,493z\"},GW:{d:\"M900.2,492.1l-10.3-0.3l-1.5,0.7l-1.8-0.2l-3,1.1l0.3,1.3l1.7,1.4v0.9l1.2,1.8l2.4,0.5l2.9,2.6l2.6-3.1l1.7,0.1 l1.4-1h1.3l0.8-0.9l-0.4-2.1l0.6-0.7L900.2,492.1L900.2,492.1z\"},GY:{d:\"M656.1,534.2l-2.1-2.3l-2.9-3.1l-2.1-0.1l-0.1-3.3l-3.3-4.1l-3.6-2.4l-4.6,3.8l-0.6,2.3l1.9,2.3l-1.5,1.2l-3.4,1.1 v2.9l-1.6,1.8l3.7,4.8l2.9-0.3l1.3,1.5l-0.8,2.8l1.9,0.9l1.2,3l-1.6,2.2l-1,5.4l1.4,3.3l0.3,2.9l3.5,3l2.7,0.3l0.7-1.3l1.7-0.2 l2.6-1.1l1.8-1.7l3.1,0.5l1.4-0.2l-3.3-5.6L655,551l-1.8-0.1l-2.4-4.6l1.1-3.3l-0.3-1.5l3.5-1.6L656.1,534.2L656.1,534.2z\"},HT:{d:\"M580.6,446.7l-4.6-1l-3.4-0.2l-1.4,1.7l3.4,1l-0.3,2.4l2.2,2.8l-2.1,1.4l-4.2-0.5l-5-0.9l-0.7,2.1l2.8,1.9l2.7-1.1 l3.3,0.4l2.7-0.4l3.6,1.1l0.2-1.8l-1.2-1.9l1.5-1.1l0.7-2.4L580.6,446.7z\"},HN:{d:\"M514.1,476.8l-1.3-1.8l-1.9-1l-1.5-1.4l-1.6-1.2l-0.8-0.1l-2.5-0.9l-1.1,0.5l-1.5,0.2l-1.3-0.4l-1.7-0.4l-0.8,0.7 l-1.8,0.7l-2.6,0.2l-2.5-0.6l-0.9,0.4l-0.5-0.6l-1.6,0.1l-1.3,1.1l-0.6-0.2l-2.8,2.4l-2.8,1.8l-0.5,1.2l0.3,1.3l-1.3,1.6l1.5,0.5 l1.1,1.3l1.6,1l0.1,0.9l2.5-0.8l1.1,0.5l0.7,0.7l-0.6,2.5l1.7,0.6l0.7,2l1.8-0.3l0.8-1.5h0.8l0.2-3.1l1.3-0.2h1.2l1.4-1.7l1.5,1.3 l0.6-0.8l1.1-0.7l2.1-1.8l0.3-1.3l0.5,0.1l0.8-1.5l0.6-0.2l0.9,0.9l1.1,0.3l1.3-0.8h1.4l2-0.8l0.9-0.9L514.1,476.8L514.1,476.8z\"},HK:{d:\"M1604.9,430.9v-0.2v-0.2l-0.4-0.2h-0.3l0.1,0.2l0.4,0.5L1604.9,430.9L1604.9,430.9z M1603.6,430.9l-0.1-0.5l0.2-0.3 l-0.9,0.3l-0.1,0.3v0.1l0.2,0.1H1603.6L1603.6,430.9z M1605.2,429.7l-0.1-0.3l-0.2-0.1l-0.1-0.3l-0.1-0.2l0,0l-0.3-0.1l-0.2-0.1 h-0.4l-0.1,0.1h-0.2l-0.2,0.2l0,0v0.2l-0.5,0.4v0.2l0.3,0.2l0.5-0.1l0.6,0.2l0.8,0.3v-0.2v-0.3L1605.2,429.7L1605.2,429.7z\"},HU:{d:\"M1079.1,263.8l-1.6,0.4l-1,1.5l-2.2,0.7l-0.6-0.4l-2.3,1l-1.9,0.2l-0.3,1.2l-4.1,0.8l-1.9-0.7l-2.6-1.6l-0.2,2.6 h-2.8l1.1,1.3l-1.3,4l0.8,0.1l1.2,2.1l1.6,0.8l4,2.6l4.2,1.2l1.8-0.9l0,0l3.7-1.6l3.2,0.2l3.8-1.1l2.6-4.3l1.9-4.2l2.9-1.3l-0.6-1.6 l-2.9-1.7l-1,0.6L1079.1,263.8L1079.1,263.8z\"},IS:{d:\"M915.7,158.6l-6.9-0.4l-7.3,2.9l-5.1-1.5l-6.9,3l-5.9-3.8l-6.5,0.8l-3.6,3.7l8.7,1.3l-0.1,1.6l-7.8,1.1l8.8,2.7 l-4.6,2.5l11.7,1.8l5.6,0.8l3.9-1l12.9-3.9l6.1-4.2l-4.4-3.8L915.7,158.6L915.7,158.6z\"},IN:{d:\"M1414.1,380.1l-8.5-4.4l-6.2-4l-3.2-7l4.1,0.9l-0.6-3.3l-3-3.3l-0.8-5.2l-7.6-7.5l-3.7,5.4l-5.7,1l-8.5-1.6 l-1.9,2.8l3.2,5.6l2.9,4.3l5,3.1l-3.7,3.7l1,4.5l-3.9,6.3l-2.1,6.5l-4.5,6.7l-6.4-0.5l-4.9,6.6l4,2.9l1.3,4.9l3.5,3.2l1.8,5.5h-12 l-3.2,4.2l7.1,5.4l1.9,2.5l-2.4,2.3l8,7.7l4,0.8l7.6-3.8l1.7,5.9l0.8,7.8l2.5,8.1l3.6,12.3l5.8,8.8l1.3,3.9l2,8l3.4,6.1l2.2,3 l2.5,6.4l3.1,8.9l5.5,6l2.2-1.8l1.7-4.4l5-1.8l-1.8-2.1l2.2-4.8l2.9-0.3l-0.7-10.8l1.9-6.1l-0.7-5.3l-1.9-8.2l1.2-4.9l2.5-0.3 l4.8-2.3l2.6-1.6l-0.3-2.9l5-4.2l3.7-4l5.3-7.5l7.4-4.2l2.4-3.8l-0.9-4.8l6.6-1.3l3.7,0.1l0.5-2.4l-1.6-5.2l-2.6-4.8l0.4-3.8 l-3.7-1.7l0.8-2.3l3.1-2.4l-4.6-3.4l1.2-4.3l4.8,2.7l2.7,0.4l1.2,4.4l5.4,0.9l5-0.1l3.4,1.1l-1.6,5.3l-2.4,0.4l-1.1,3.6l3.5,3.3 l0.2-4l1.5-0.1l4.5,10.1l2.4-1.5l-0.9-2.7l0.9-2.1l-0.9-6.6l4.6,1.4l1.5-5.2l-0.3-3.1l2.1-5.4l-0.9-3.6l6.1-4.4l4.1,1.1l-1.3-3.9 l1.6-1.2l-0.9-2.4l-6.1-0.9l1.2-2.7l-3.5-3.9l-3.2,2.6l-4.9-1.5l-5.3,4l-3.9,4.8l-4.2,0.8l2.7,2l0.4,3.9l-4.4,0.2l-4.7-0.4l-3.2,1 l-5.5-2.5l-0.3-1.2l-1.5-5.1l-3,1.4l0.1,2.7l1.5,4.1l-0.1,2.5l-4.6,0.1l-6.8-1.5l-4.3-0.6l-3.8-3.2l-7.6-0.9l-7.7-3.5l-5.8-3.1 l-5.7-2.5l0.9-5.9L1414.1,380.1L1414.1,380.1z\"},ID:{d:\"M1651.9,637.3l0.5-1.7l-1.8-1.9l-2.8-2l-5.3,1.3l7,4.4L1651.9,637.3L1651.9,637.3z M1672.8,636.7l4-4.8l0.1-1.9 l-0.5-1.3l-5.7,2.6l-2.8,3.9l-0.7,2.1l0.6,0.8L1672.8,636.7L1672.8,636.7z M1637.2,623.7l-1.6,2.2l-3.1,0.1l-2.2,3.6l3,0.1l3.9-0.9 l6.6-1.2l-1.2-2.8l-3.5,0.6L1637.2,623.7L1637.2,623.7z M1665.3,623.7l-5.2,2.3l-3.8,0.5l-3.4-1.9l-4.5,1.3l-0.2,2.3l7.4,0.8 l8.6-1.8L1665.3,623.7L1665.3,623.7z M1585.8,615.3l-0.7-2.3l-2.3-0.5l-4.4-2.4l-6.8-0.4l-4.1,6.1l5.1,0.4l0.8,2.8l10,2.6l2.4-0.8 l4.1,0.6l6.3,2.4l5.2,1.2l5.8,0.5l5.1-0.2l5.9,2.5l6.6-2.4l-6.6-3.8l-8.3-1.1l-1.8-4.1l-10.3-3.1l-1.3,2.6L1585.8,615.3 L1585.8,615.3z M1732.4,611.7l0.2-3l-1.2-1.9l-1.3,2.2l-1.2,2.2l0.3,4.8L1732.4,611.7z M1691.4,594.2l-1.4-2.1l-5.7,0.3l1,2.7 l3.9,1.2L1691.4,594.2L1691.4,594.2z M1709.5,591.8l-6.1-1.8l-6.9,0.3l-1.5,3.5l3.9,0.2l3.2-0.4l4.6,0.5l4.7,2.6L1709.5,591.8 L1709.5,591.8z M1730.5,579.5l-0.8-2.4l-9-2.6l-2.9,2.1l-7.6,1.5l2.3,3.2l5,1.2l2.1,3.7l8.3,0.1l0.4,1.6l-4-0.1l-6.2,2.3l4.2,3.1 l-0.1,2.8l1.2,2.3l2.1-0.5l1.8-3.1l8.2,5.9l4.6,0.5l10.6,5.4l2.3,5.3l1,6.9l-3.7,1.8l-2.8,5.2l7.1-0.2l1.6-1.8l5.5,1.3l4.6,5.2 l1.5-20.8l1-20.7l-6-1.2l-4.1-2.3l-4.7-2.2h-5l-6.6,3.8l-4.9,6.8l-5.7-3.8L1730.5,579.5z M1680.5,563.1l-1-1.4l-5.5,4.6l-6.5,0.3 l-7.1-0.9l-4.4-1.9l-4.7,4.8l-1.2,2.6l-2.9,9.6l-0.9,5l-2.4,4.2l1.6,4.3l2.3,0.1l0.6,6.1l-1.9,5.9l2.3,1.9l3.6-1l0.3-9.1l-0.2-7.4 l3.8-1.9l-0.7,6.2l3.9,3.7l-0.8,2.5l1.3,1.7l5.6-2.4l-3,5.2l2.1,2.2l3.1-1.9l0.3-4.1l-4.7-7.4l1.1-2.2l-5.1-8.1l5-2.5l2.6-3.7 l2.4,0.9l0.5-2.9l-10.5,2.1l-3.1,2.9l-5-5.6l0.9-4.8l4.9-1l9.3-0.3l5.4,1.3l4.3-1.3L1680.5,563.1L1680.5,563.1z M1699.9,565 l-0.6-2.6l-3.3-0.6l-0.5-3.5l-1.8,2.3l-1,5.1l1.7,8.2l2.2,4l1.6-0.8l-2.3-3.3l0.9-3.9l2.9,0.6L1699.9,565L1699.9,565z M1639,560.5 l0.9-2.9l-4.3-6l3-5.8l-5-1h-6.4l-1.7,7.2l-2,2.2l-2.7,8.9l-4.5,1.3l-5.4-1.8l-2.7,0.6l-3.2,3.2l-3.6-0.4l-3.6,1.2l-3.9-3.5l-1-4.3 l-3.3,4.2l-0.6,5.9l0.8,5.6l2.6,5.4l2.8,1.8l0.7,8.5l4.6,0.8l3.6-0.4l2,3.1l6.7-2.3l2.8,2l4,0.4l2,3.9l6.5-2.9l0.8,2.3l2.5-9.7 l0.3-6.4l5.5-4.3l-0.2-5.8l1.8-4.3l6.7-0.8L1639,560.5L1639,560.5z M1570.3,609.4l0.7-9.8l1.7-8l-2.6-4l-4.1-0.5l-1.9-3.6l-0.9-4.4 l-2-0.2l-3.2-2.2l2.3-5.2l-4.3-2.9l-3.3-5.3l-4.8-4.4l-5.7-0.1l-5.5-6.8l-3.2-2.7l-4.5-4.3l-5.2-6.2l-8.8-1.2l-3.6-0.3l0.6,3.2 l6.1,7l4.4,3.6l3.1,5.5l5.1,4l2.2,4.9l1.7,5.5l4.9,5.3l4.1,8.9l2.7,4.8l4.1,5.2l2.2,3.8l7,5.2l4.5,5.3L1570.3,609.4L1570.3,609.4z\"},IR:{d:\"M1213.5,324.4l-3.2-2.9l-1.2-2.4l-3.3,1.8l2.9,7.3l-0.7,2l3.7,5.2l0,0l4.7,7.8l3.7,1.9l1,3.8l-2.3,2.2l-0.5,5 l4.6,6.1l7,3.4l3.5,4.9l-0.2,4.6h1.7l0.5,3.3l3.4,3.4l1.7-2.5l3.7,2.1l2.8-1l5.1,8.4l4.3,6.1l5.5,1.8l6.1,4.9l6.9,2.1l5.1-3.1l4-1.1 l2.8,1.1l3.2,7.8l6.3,0.8l6.1,1.5l10.5,1.9l1.2-7.4l7.4-3.3l-0.9-2.9l-2.7-1l-1-5.7l-5.6-2.7l-2.8-3.9l-3.2-3.3l3.9-5.8l-1.1-4 l-4.3-1.1l-1.1-4l-2.7-5.1l1.6-3.5l-2.5-0.9l0.5-4.7l0.5-8l-1.6-5.5l-3.9-0.2l-7.3-5.7l-4.3-0.7l-6.5-3.3l-3.8-0.6l-2.1,1.2 l-3.5-0.2l-3,3.7l-4.4,1.2l-0.2,1.6l-7.9,1.7l-7.6-1.1l-4.3-3.3l-5.2-1.3l-2.5-4.8l-1.3,0.3l-3.8-3.4l1.2-3.1l-1.9-1.9l-1.9,0.5 l-5.3,4.7l-1.8,0.2L1213.5,324.4L1213.5,324.4z\"},IQ:{d:\"M1207.3,334.9l-6.2-0.9l-2.1,1l-2.1,4.1l-2.7,1.6l1.2,4.7l-0.9,7.8l-11,6.7l3.1,7.7l6.7,1.7l8.5,4.5l16.7,12.7 l10.2,0.5l3.2-6.1l3.7,0.5l3.2,0.4l-3.4-3.4l-0.5-3.3h-1.7l0.2-4.6l-3.5-4.9l-7-3.4l-4.6-6.1l0.5-5l2.3-2.2l-1-3.8l-3.7-1.9 l-4.7-7.8l0,0l-2.3,1.1L1207.3,334.9L1207.3,334.9z\"},IE:{d:\"M947.3,231.7l-3.5-1.3l-2.9,0.1l1.1-3.2l-0.8-3.2l-3.7,2.8l-6.7,4.7l2.1,6.1l-4.2,6.4l6.7,0.9l8.7-3.6l3.9-5.4 L947.3,231.7L947.3,231.7z\"},IL:{d:\"M1167.8,360.5l-1.4,0.1l-0.4,1.1h-1.8l-0.1,0.1l-0.6,1.6l-0.6,4.8l-1.1,2.9l0.4,0.4l-1.4,2.1l0,0l3.9,9.2l0.7,1.7 l1.7-10.2l-0.4-2.4l-2.4,0.8l0.1-1.7l1.2-0.8l-1.4-0.7l0.7-4.3l2,0.9l0.7-2h-0.1l0.6-1L1167.8,360.5L1167.8,360.5z\"},IT:{d:\"M1057.8,328.6l-1.6,5.1l0.9,2l-0.9,3.3l-4.2-2.4l-2.7-0.7l-7.5-3.3l0.6-3.4l6.2,0.6l5.2-0.7L1057.8,328.6z M1072.3,316.2l-0.8,2.3l-3.1-3l-4.5-1l-1.9,4.1l3.9,2.3l-0.4,3.3l-2.1,0.4l-2.5,5.6l-2.1,0.5l-0.1-2l0.8-3.5l1.1-1.3l-2.3-3.7 l-1.8-3.2l-2.2-0.8l-1.7-2.7l-3.4-1.2l-2.3-2.5l-3.9-0.4l-4.2-2.8l-4.9-4l-3.6-3.6l-1.9-6l-2.6-0.7l-4.2-2.1l-2.3,0.9l-2.8,2.8 l-2.1,0.5l0.5-2.7l-2.7-0.8l-1.5-4.8l1.7-1.8l-1.6-2.4l0.2-1.7l2.2,1.3l2.4-0.3l2.7-2.1l0.9,1l2.4-0.2l0.9-2.5l3.8,0.8l2.1-1.1 l0.3-2.5l3.1,0.9l0.5-1.2l4.8-1.1l1.3,2.2l7.2,1.6l-0.3,3l1.4,2.7l-4.1-0.9l-3.9,2.2l0.4,3l-0.5,1.8l1.9,3.1l4.9,3.1l2.9,5.1l6,5 l4-0.1l1.4,1.4l-1.4,1.2l4.8,2.3l3.9,1.9l4.7,3.2L1072.3,316.2z M1040.2,305.3l-0.1-0.6l-0.6,0.1l-0.2,0.5H1040.2z M1040.3,292.4 l-0.9,0.3l0.2,0.9l0.7-0.1L1040.3,292.4z M1021.6,311.6l-2.8-0.3l1.3,3.6l0.4,7.6l2.1,1.7l2-2.1l2.4,0.4l0.4-8.4l-3.3-4.4 L1021.6,311.6z\"},CI:{d:\"M946.5,506.2l-2.3,0.9l-1.3,0.8l-0.9-2.7l-1.6,0.7l-1-0.1l-1,1.9l-4.3-0.1l-1.6-1l-0.7,0.6l-1.1,0.5l-0.5,2.2 l1.3,2.6l1.3,5.1l-2,0.8l-0.6,0.9l0.4,1.2l-0.3,2.8h-0.9l-0.3,1.8l0.6,3.1l-1.2,2.8l1.6,1.8l1.8,0.4l2.3,2.7l0.2,2.5l-0.5,0.8 l-0.5,5.2l1.1,0.2l5.6-2.4l3.9-1.8l6.6-1.1l3.6-0.1l3.9,1.3l2.6-0.1l0.2-2.5l-2.4-5.5l1.5-7.2l2.3-5.3l-1.4-9.1l-3.8-1.6l-2.7,0.2 l-1.9,1.6l-2.5-1.3l-1-2.1L946.5,506.2L946.5,506.2z\"},JM:{d:\"M550.7,458.5l3.9-0.1l-0.8-1.8l-2.7-1.5l-3.7-0.6l-1.2-0.2l-2.4,0.4l-0.8,1.5l2.9,2.3l3,1L550.7,458.5L550.7,458.5z \"},JP:{d:\"M1692.5,354.9l-4.5-1.3l-1.1,2.7l-3.3-0.8l-1.3,3.8l1.2,3l4.2,1.8l-0.1-3.7l2.1-1.5l3.1,2.1l1.3-3.9L1692.5,354.9 L1692.5,354.9z M1716.9,335.6l-3.6-6.7l1.3-6.4l-2.8-5.2l-8.1-8.7l-4.8,1.2l0.2,3.9l5.1,7.1l1,7.9l-1.7,2.5l-4.5,6.5l-5-3.1v11.5 l-6.3-1.3l-9.6,1.9l-1.9,4.4l-3.9,3.3l-1.1,4l-4.3,2l4,4.3l4.1,1.9l0.9,5.7l3.5,2.5l2.5-2.7l-0.8-10.8l-7.3-4.7l6.1-0.1l5-3l8.6-1.4 l2.4,4.8l4.6,2.4l4.4-7.3l9.1-0.4l5.4-3l0.6-4.6l-2.5-3.2L1716.9,335.6L1716.9,335.6z M1705.1,291.4l-5.3-2.1l-10.4-6.4l1.9,4.8 l4.3,8.5l-5.2,0.4l0.6,4.7l4.6,6.1h5.7l-1.6-6.8l10.8,4.2l0.4-6.1l6.4-1.7l-6-6.9l-1.7,2.6L1705.1,291.4L1705.1,291.4z\"},JO:{d:\"M1186.6,367.6l-3.1-7.7l-9.6,6.7l-6.3-2.5l-0.7,2l0.4,3.9l-0.6,1.9l0.4,2.4l-1.7,10.2l0.3,0.9l6.1,1l2.1-2l1.1-2.3 l4-0.8l0.7-2.2l1.7-1l-6.1-6.4l10.4-3.1L1186.6,367.6L1186.6,367.6z\"},KZ:{d:\"M1308.8,223.8l-9-1.3l-3.1,2.5l-10.8,2.2l-1.7,1.5l-16.8,2.1l-1.4,2.1l5,4.1l-3.9,1.6l1.5,1.7l-3.6,2.9l9.4,4.2 l-0.2,3l-6.9-0.3l-0.8,1.8l-7.3-3.2l-7.6,0.2l-4.3,2.5l-6.6-2.4l-11.9-4.3l-7.5,0.2l-8.1,6.6l0.7,4.6l-6-3.6l-2.1,6.8l1.7,1.2 l-1.7,4.7l5.3,4.3l3.6-0.2l4.2,4.1l0.2,3.2l2.8,1l4.4-1.3l5-2.7l4.7,1.5l4.9-0.3l1.9,3.9l0.6,6l-4.6-0.9l-4,1l0.9,4.5l-5-0.6l0.6,2 l3.2,1.6l3.7,5.5l6.4,2.1l1.5,2.1l-0.7,2.6l0.7,1.5l1.8-2l5.5-1.3l3.8,1.7l4.9,4.9l2.5-0.3l-6.2-22.8l11.9-3.6l1.1,0.5l9.1,4.5 l4.8,2.3l6.5,5.5l5.7-0.9l8.6-0.5l7.5,4.5l1.5,6.2l2.5,0.1l2.6,5l6.6,0.2l2.3,3h1.9l0.9-4.5l5.4-4.3l2.5-1.2l0.3-2.7l3.1-0.8 l9.1,2.1l-0.5-3.6l2.5-1.3l8.1,2.6l1.6-0.7l8.6,0.2l7.8,0.6l3.3,2.2l3.5,0.9l-1.7-3.5l2.9-1.6l-8.7-10.7l9-2.4l2-1.4l-1-11.1l10.7,2 l1.6-2.8l-2.5-6.2l3.8-0.6l1.8-4.2l-4.3-3.8l-6,0.9l-3.3-2.6l-3.9-1.2l-4.1-3.6l-3.2-1.1l-6.2,1.6l-8.3-3.6l-1.1,3.3l-18.1-15.5 l-8.3-4.7l0.8-1.9l-9.1,5.7l-4.4,0.4l-1.2-3.3l-7-2.1l-4.3,1.5L1308.8,223.8L1308.8,223.8z\"},KE:{d:\"M1211.7,547.2h-3.8l-2.3-2.1l-5.1,2.6l-1.6,2.7l-3.8-0.5l-1.2-0.7l-1.3,0.1h-1.8l-7.2-5.4h-3.9l-2-2.1v-3.6 l-2.9-1.1l-3.8,4.2l-3.4,3.8l2.7,4.4l0.7,3.2l2.6,7.3l-2.1,4.7l-2.7,4.2l-1.6,2.6v0.3l1.4,2.4l-0.4,4.7l20.2,13l0.4,3.7l8,6.3 l2.2-2.1l1.2-4.2l1.8-2.6l0.9-4.5l2.1-0.4l1.4-2.7l4-2.5l-3.3-5.3l-0.2-23.2L1211.7,547.2L1211.7,547.2z\"},KW:{d:\"M1235.6,381.4l-3.7-0.5l-3.2,6.1l4.9,0.6l1.7,3.1l3.8-0.2l-2.4-4.8l0.3-1.5L1235.6,381.4L1235.6,381.4z\"},KG:{d:\"M1387.2,302.6l-3.5-0.9l-3.3-2.2l-7.8-0.6l-8.6-0.2l-1.6,0.7l-8.1-2.6l-2.5,1.3l0.5,3.6l-9.1-2.1l-3.1,0.8l-0.3,2.7 l1.8,0.6l-3.1,4.1l4.6,2.3l3.2-1.6l7.1,3.3l-5.2,4.5l-4.1-0.6l-1.4,2l-5.9-1.1l0.6,3.7l5.4-0.5l7.1,2l9.5-0.9l1-1.5l-1.1-1.5l4-3 l3.2-1.2l5.7,0.9l0.6-4l6.4-0.8l1-2.4l6.8-3.4L1387.2,302.6L1387.2,302.6z\"},LA:{d:\"M1574.8,481.8l0.2-6.4l-2-4.5l-4.8-4.4l-4.3-5.6l-5.7-7.5l-7.3-3.8l1.3-2.3l3.3-1.7l-3-5.5l-6.8-0.1l-3.4-5.7 l-4-5.1l-2.7,1l1.9,7.2l-2.9-0.1l-0.7-1.5l-4.1,4.1l-0.8,2.4l2.6,1.9l0.9,3.8l3.8,0.3l-0.4,6.7l1,5.7l5.3-3.8l1.8,1.2l3.2-0.2 l0.8-2.2l4.3,0.4l4.9,5.2l1.3,6.3l5.2,5.5l0.5,5.4l-1.5,2.9l4.9,2.4l2-4.3L1574.8,481.8L1574.8,481.8z\"},LV:{d:\"M1102.1,210.1h-3.8l-4.4-2.2l-2.1-0.7l-3.7,1l-0.2,4.6l-3.6,0.1l-4.4-4.5l-4,2.1l-1.7,3.7l0.5,4.5l5-1.9l7.9,0.4 l4.4-0.6l0.9,1.3l2.5,0.4l5,2.9l2.6-1l4.6-2.3l-2.1-3.6l-1-2.8L1102.1,210.1L1102.1,210.1z\"},LB:{d:\"M1167.8,360.5l0.9-3.5l2.6-2.4l-1.2-2.5l-2.4-0.3l-0.1,0.2l-2.1,4.5l-1.3,5.2h1.8l0.4-1.1L1167.8,360.5 L1167.8,360.5z\"},LS:{d:\"M1128.1,766.5l1.1-2l3.1-1l1.1-2.1l1.9-3.1l-1.7-1.9l-2.3-2l-2.6,1.3l-3.1,2.5l-3.2,4l3.7,4.9L1128.1,766.5 L1128.1,766.5z\"},LR:{d:\"M929.4,523.3l-1.6-0.2l-1.1,2.6l-1.6-0.1l-1.1-1.3l0.4-2.6l-2.3-3.9l-1.5,0.7l-1.2,0.2l-2.6,3l-2.6,3.4l-0.3,1.9 l-1.3,2l3.7,4.1l4.8,3.5l5.1,4.8l5.7,3.1l1.5-0.1l0.5-5.2l0.5-0.8l-0.2-2.5l-2.3-2.7l-1.8-0.4l-1.6-1.8l1.2-2.8l-0.6-3.1 L929.4,523.3L929.4,523.3z\"},LY:{d:\"M1111.8,371.4l-1.5-2.1l-5.4-0.8l-1.8-1.1h-2l-2-2.8l-7.3-1.3l-3.6,0.8l-3.7,3l-1.5,3.1l1.5,4.8l-2.4,3l-2.5,1.6 l-5.9-3.1l-7.7-2.7l-4.9-1.2l-2.8-5.7l-7.2-2.8l-4.5-1.1l-2.2,0.6l-6.4-2.2l-0.1,4.9l-2.6,1.8l-1.5,2l-3.7,2.5l0.7,2.6l-0.4,2.7 l-2.6,1.4l1.9,5.6l0.4,3l-0.9,5.2l0.5,2.9l-0.6,3.5l0.5,4l-2.1,2.6l3.4,4.7l0.2,2.7l2,3.6l2.6-1.2l4.3,2.9l2.5,4l8.8,2.8l3.1,3.5 l3.9-2.4l5.4-3.5l22.3,12.2l22.4,12.2v-2.7h6.3l-0.5-12.7l-1-23.4l-1.3-22.7l-2-5.1l1.2-3.9l-1.1-2.7L1111.8,371.4L1111.8,371.4z\"},LI:{d:\"M1024.4,273.6v-0.2l0.1-0.2l-0.1-0.1l-0.1-0.2l-0.1-0.1v-0.2l-0.1-0.1v-0.2l-0.1-0.1l-0.2,0.6v0.5l0.1,0.2h0.1 L1024.4,273.6L1024.4,273.6z\"},LT:{d:\"M1100.4,221.2l-5-2.9l-2.5-0.4l-0.9-1.3l-4.4,0.6l-7.9-0.4l-5,1.9l1.7,5l5,1.1l2.2,0.9l-0.2,1.7l0.6,1.5l2.5,0.6 l1.4,1.9h4.6l4.8-2.2l0.5-3.4l3.5-2L1100.4,221.2L1100.4,221.2z\"},LU:{d:\"M1007,258.6l0.2-2.7l-1-1.4l-1.3,0.2l-0.4,3.5l1.1,0.5L1007,258.6z\"},MK:{d:\"M1094,304.8l-2.8-2l-2.4,0.1l-1.7,0.4l-1.1,0.2l-2.9,1l-0.1,1.2h-0.7l0,0l-0.4,2.1l0.9,2.6l2.3,1.6l3.3-0.6l1.9-1.3 l2.8,0.1l0.7-1.1l1-0.2L1094,304.8L1094,304.8z\"},MG:{d:\"M1255.7,658.4l-1.1-4.2l-1.4-2.7l-1.8-2.7l-2,2.8l-0.3,3.8l-3.3,4.5l-2.3-0.8l0.6,2.7l-1.8,3.2l-4.8,3.9l-3.4,3.7 h-2.4l-2.2,1.2l-3.1,1.3l-2.8,0.2l-1,4.1l-2.2,3.5l0.1,5.9l0.8,4l1.1,3l-0.8,4.1l-2.9,4.8l-0.2,2.1l-2.6,1.1l-1.3,4.6l0.2,4.6l1.6,5 l-0.1,5.7l1.2,3.3l4.2,2.3l3,1.7l5-2.7l4.6-1.5l3.1-7.4l2.8-8.9l4.3-12l3.3-8.8l2.7-7.4l0.8-5.4l1.6-1.5l0.7-2.7l-0.8-4.7l1.2-1.9 l1.6,3.8l1.1-1.9l0.8-3.1l-1.3-2.9L1255.7,658.4L1255.7,658.4z\"},MW:{d:\"M1169.2,661.5l0.1-2.3l-1.2-1.9l0.1-2.8l-1.5-4.7l1.7-3.5l-0.1-7.7l-1.9-4.1l0.2-0.7l0,0l-1.1-1.7l-5.4-1.2l2.6,2.8 l1.2,5.4l-1,1.8l-1.2,5.1l0.9,5.3l-1.8,2.2l-1.9,5.9l2.9,1.7l3,3l1.6-0.6l2.1,1.6l0.3,2.6l-1.3,2.9l0.2,4.5l3.4,4l1.9-4.5l2.5-1.3 l-0.1-8.2l-2.2-4.6l-1.9-2h-0.3v0.8l1.1,0.3l1,3.4l-0.2,0.8l-1.9-2.5l-1,1.6L1169.2,661.5L1169.2,661.5z\"},MY:{d:\"M1558.1,554.4l-0.5-3.8l-0.6-2.1l0.5-2.9l-0.5-4.3l-2.6-4.3l-3.5-3.8l-1.3-0.6l-1.7,2.6l-3.7,0.8l-0.6-3.3l-4.7-2.8 l-0.9,1.1l1.4,2.7l-0.4,4.7l2.1,3.4l1,5.3l3.4,4.3l0.8,3.2l6.7,5l5.4,4.8l4-0.5l0.1-2.1l-2.3-5.6L1558.1,554.4z M1560.9,563.3 l0.2,0.2l-0.1,0.2l-0.9,0.4l-0.9-0.4l0.3-0.6l0.6-0.1l0.5,0.2L1560.9,563.3z M1645.2,540.2l-3.8,0.4l1.2,3.1l-4,2.1l-5-1h-6.4 l-1.7,7.2l-2,2.2l-2.7,8.9l-4.5,1.3l-5.4-1.8l-2.7,0.6l-3.2,3.2l-3.6-0.4l-3.6,1.2l-3.9-3.5l-1-4.3l4.1,2.2l4.4-1.2l0.9-5.4l2.4-1.2 l6.7-1.4l3.8-5l2.6-4l2.7,3.3l1.1-2.2l2.7,0.2l0.1-4.1l0.1-3.1l4.1-4.4l2.5-5h2.3l3.1,3.2l0.4,2.8l3.8,1.7l4.8,2L1645.2,540.2z\"},MV:{d:\"M1389.1,551.6L1389.1,551.6l0.1-0.3l-0.1-0.1h-0.1l-0.1,0.2v0.1v0.1H1389.1z M1389.4,545.7l0.1-0.2v-0.1v-0.1v-0.1 v-0.1l-0.1,0.1l-0.1,0.2v0.1l-0.1,0.1v0.1H1389.4L1389.4,545.7z\"},ML:{d:\"M1000.3,450.3l-6.1,0.6l-0.1-4l-2.6-1.1l-3.4-1.8l-1.3-3l-18.6-13.8l-18.4-13.9l-8.4,0.1l2.4,27.4l2.4,27.5l1,0.8 l-1.3,4.4l-22.3,0.1l-0.9,1.4l-2.1-0.4l-3.2,1.3l-3.8-1.8l-1.8,0.2l-1,3.7l-1.9,1.2l0.2,3.9l1.1,3.7l2.1,1.8l0.4,2.4l-0.3,2l0.3,2.3 h0.9l1.5-0.8l0.9,0.2l1.5,1.6l2.4,0.5l1.6-1.4l1.8-0.8l1.3-0.9l1.1,0.2l1.3,1.4l0.6,1.7l2.3,2.7l-1.2,1.6l-0.2,2.1l1.2-0.6l0.7,0.7 l-0.3,1.9l1.7,1.8l0.7-0.6l1.6,1l4.3,0.1l1-1.9l1,0.1l1.6-0.7l0.9,2.7l1.3-0.8l2.3-0.9l-0.4-3.7l1.6-2.7l-0.2-2.2l4.5-5.2l0.8-4.4 l1.6-1.6l2.7,0.9l2.3-1.3l0.8-1.6l4.3-2.9l1.1-2l5.2-2.6l3-0.9l1.4,1.2h3.6l3.6-0.3l2-2.2l7.6-0.6l4.9-1l0.5-3.9l3-4.3L1000.3,450.3 L1000.3,450.3z\"},MT:{d:\"M1053.6,344l-0.2-0.2l-0.5-0.5l-0.5-0.1l0.1,0.6l0.4,0.4h0.5L1053.6,344L1053.6,344z M1052.2,342.8L1052.2,342.8 v-0.2l-0.3-0.1l-0.4,0.1l0.1,0.1l0.3,0.2L1052.2,342.8z\"},MQ:{d:\"M638,479.9l-0.2-0.7l-0.1-0.2l-0.2-0.3l0.1-0.3v-0.1h-0.2l-0.3-0.5l-0.6-0.3h-0.3l-0.2,0.2v0.3l0.3,0.9l0.2,0.2 l0.5,0.2l-0.4,0.4v0.1l0.1,0.3h0.9l0.2,0.3l0.1-0.1L638,479.9L638,479.9z\"},MR:{d:\"M949.8,413.3l-20.3-15.5l-0.2,9.7l-17.9-0.3l-0.2,16.3L906,424l-1.4,3.3l0.9,9.2l-21.6-0.1l-1.2,2.2l2.8,2.7l1.4,3 l-0.7,3.2l0.6,3.2l0.5,6.3l-0.8,5.9l-1.7,3.2l0.4,3.4l2-2l2.7,0.5l2.8-1.4h3.1l2.6,1.8l3.7,1.7l3.2,4.7l3.6,4.4l1.9-1.2l1-3.7 l1.8-0.2l3.8,1.8l3.2-1.3l2.1,0.4l0.9-1.4l22.3-0.1l1.3-4.4l-1-0.8l-2.4-27.5l-2.4-27.4L949.8,413.3L949.8,413.3z\"},MU:{d:\"M1294.7,702.5l0.3-0.3l0.2-0.4l0.3-0.3l0.1-0.7l-0.2-0.8l-0.4-0.7l-0.5,0.1l-0.3,0.4l-0.2,0.5l-0.5,0.3l-0.1,0.3 l-0.2,0.7l-0.1,0.4l-0.2,0.1v0.2l0.3,0.3l0.8,0.1L1294.7,702.5L1294.7,702.5z\"},YT:{d:\"M1228.7,654.7v-0.3l0.2-0.5v-0.1l0.1-0.5l-0.3-0.3h-0.2l-0.2-0.3l-0.3,0.3l0.3,0.5l-0.1,0.3l-0.1,0.4l0.1,0.4 l0.2,0.2L1228.7,654.7L1228.7,654.7z\"},MX:{d:\"M444.4,407.8l-3.6-1.4l-3.9-2l-0.8-3l-0.2-4.5l-2.4-3.6l-1-3.7l-1.6-4.4l-3.1-2.5l-4.4,0.1l-4.8,5l-4-1.9l-2.2-1.9 l-0.4-3.5l-0.8-3.3l-2.4-2.8l-2.1-2l-1.3-2.2h-9.3l-0.8,2.6H391h-10.7l-10.7-4.4l-7.1-3.1l1-1.3l-7,0.7l-6.3,0.5l0.2,5.7l0.7,5.1 l0.7,4.1l0.8,4l2.6,1.8l2.9,4.5l-1,2.9l-2.7,2.3l-2.1-0.3l-0.6,0.5l2.3,3.7l2.9,1.5l1,1.7l0.9-0.9l3.1,2.9l2.1,2l0.1,3.4l-1.2,4.7 l2.5,1.6l3.3,3.1l2.9,3.6l0.7,3.9h1l2.7-2.3l0.4-1.2l-1.5-2.8l-1.6-2.9l-2.6-0.2l0.4-3.4l-0.9-3l-1-2.8l-0.5-5.9l-2.6-3.2l-0.6-2.3 l-1.2-1.6v-4.1l-1,0.1l-0.1-2.2l-0.7-0.5l-0.4-1.4l-2.7-4.4l-1.1-2.6l1-4.8l0.1-3l1.8-2.6l2.4,1.7l1.9-0.2l3.1,2.5l-0.9,2.4l0.4,4.9 l1.5,4.7l-0.4,2l1.7,3.1l2.3,3.4l2.7,0.5l0.3,4.4l2.4,3.1l2.5,1.5l-1.8,4l0.7,1.5l4.1,2.6l1.9,4l4.5,4.9l3.8,6.4l1.3,3.2v2.5 l1.4,2.9l-0.3,2.2l-1.6,1.6l0.3,1.8l-1.9,0.7l0.8,3.1l2.2,4l5.3,3.6l1.9,2.9l5.4,2l3,0.4l1.2,1.7l4.2,3l5.9,3l4,0.9l4.8,2.9l4,1.2 l3.7,1.7l2.9-0.7l4.8-2.4l3.1-0.4l4.4,1.6l2.6,2.1l5.5,6.9l0.4-1.9l0.8-1.5l-0.7-1.2l3.3-5.2h7.1l0.4-2.1l-0.8-0.4l-0.5-1.4 l-1.9-1.5l-1.8-2.1h2.6l0.4-3.6h5.2l5.1,0.1l0.1-1l0.7-0.3l0.9,0.8l2.5-3.9h1l1.2-0.1l1.2,1.6l2-5l1.2-2.7l-0.9-1.1l1.8-3.9l3.5-3.8 l0.6-3.1l-1.2-1.3l-3.4,0.5l-4.8-0.2l-6,1.5l-4,1.7l-1.2,1.8l-1.2,5.4l-1.8,3.7l-3.9,2.6l-3.6,1.1l-4.3,1.1l-4.3,0.6l-5.1,1.8 l-1.9-2.6l-5.6-1.7l-1.8-3.2l-0.7-3.6l-3-4.7l-0.4-5l-1.2-3.1l-0.5-3.4l1.1-3.1l1.8-8.6l1.8-4.5l3.1-5.6L444.4,407.8L444.4,407.8z\"},MD:{d:\"M1118.5,283.3l1.2-0.7l0.5-2.1l1.1-2l-0.5-1.1l1-0.5l0.6,0.9l3,0.2l1.2-0.5l-1-0.6l0.2-1l-2-1.5l-1.1-2.6l-1.9-1.1 v-2.1l-2.5-1.6l-2-0.3l-3.9-1.9l-3.2,0.6l-1.1,0.9l1.6,0.6l1.8,1.9l1.9,2.6l3.4,3.7l0.6,2.7l-0.2,2.7L1118.5,283.3z\"},MC:{d:\"M1013.5,295.2l0-0.3l0.5-0.6l0.3,0.2L1013.5,295.2z\"},MN:{d:\"M1473.7,252.1l-3.7-4.6l-6.6-1.5l-4.8-0.8l-6.9-2.5l-1.3,6.4l4,3.6l-2.4,4.3l-7.9-1.6l-5-0.2l-4.7-2.9l-5.1-0.1 l-5.3-1.9l-5.9,2.9l-6.6,5.4l-4.7,1l3.3,4.4l5.7,3.3l8.1,2.3l5.8,5l1.3,7.3l3,2.7l6.4,1l7.2,0.9l7.9,3.8l3.4,0.7l4.9,5.7l4.7,3.6 l5.5-0.1l11.2,1.3l6.4-0.8l5.5,0.9l9.3,3.8l6.2-0.1l3.2,2l4.4-3.3l7.2-2.2l7.5-0.2l4.9-2.2l1.9-3.3l2.5-2l-1.9-2.1l-2.9-2.3l0.4-4 l3.2,0.5l5.9,1.3l3.1-3.3l6.3-2.4l1.4-4.1l2.4-1.8l6.8-0.8l4.3,0.7l-0.7-2.2l-7.2-4.3l-5.1-2l-2.5,2.3l-5.4-1l-2.4,0.8l-2.7-2.6 l-0.3-6.2l-0.6-4.6l-5.5,0.5l-3.9-2.1l-3.3-0.7l-4.5,4.4l-5.8,1l-3.6,1.6l-6.7-1h-4.5l-4.9-3.1l-6.5-3l-5.4-0.8l-5.7,0.8l-3.9,1.1 L1473.7,252.1L1473.7,252.1z\"},ME:{d:\"M1080,299.8l0.4-0.6l-2-1.2l-1.8-0.7l-0.8-0.8l-1.5-1.1l-0.9,0.6l-1.5,1.4l-0.4,3.4l-0.5,1l0,0l2.3,1.2l1.6,2.1 l1.1,0.4l0,0l-0.5-1.9l2-3.1l0.4,1.2l1.3-0.5L1080,299.8z\"},MS:{d:\"M631.8,465.7l-0.1-0.5h-0.1l-0.2,0.4v0.3l0.3,0.1L631.8,465.7z\"},MA:{d:\"M965.2,348.4l-2.3-0.1l-5.5-1.4l-5,0.4l-3.1-2.7h-3.9l-1.8,3.9l-3.7,6.7l-4,2.6l-5.4,2.9L927,365l-0.9,3.4l-2.1,5.4 l1.1,7.9l-4.7,5.3l-2.7,1.7l-4.4,4.4l-5.1,0.7l-2.8,2.4l-0.1,0.1l-3.6,6.5l-3.7,2.3l-2.1,4l-0.2,3.3l-1.6,3.8l-1.9,1l-3.1,4l-2,4.5 l0.3,2.2l-1.9,3.3l-2.2,1.7l-0.3,3h0.1l12.4-0.5l0.7-2.3l2.3-2.9l2-8.8l7.8-6.8l2.8-8.1l1.7-0.4l1.9-5l4.6-0.7l1.9,0.9h2.5l1.8-1.5 l3.4-0.2l-0.1-3.4l0,0h0.8l0.1-7.5l8.9-4.7l5.4-1l4.4-1.7l2.1-3.2l6.3-2.5l0.3-4.7l3.1-0.5l2.5-2.4l7-1l1-2.5l-1.4-1.4l-1.8-6.7 l-0.3-3.9L965.2,348.4L965.2,348.4z\"},MZ:{d:\"M1203,640.7l-0.8-2.9l0,0l0,0l-4.6,3.7l-6.2,2.5l-3.3-0.1l-2.1,1.9l-3.9,0.1l-1.4,0.8l-6.7-1.8l-2.1,0.3l-1.6,6 l0.7,7.3h0.3l1.9,2l2.2,4.6l0.1,8.2l-2.5,1.3l-1.9,4.5l-3.4-4l-0.2-4.5l1.3-2.9l-0.3-2.6l-2.1-1.6l-1.6,0.6l-3-3l-17.1,5.2l0.3,4.5 l0.3,2.4l4.6-0.1l2.6,1.3l1.1,1.6l2.6,0.5l2.8,2l-0.3,8.1l-1.3,4.4l-0.5,4.7l0.8,1.9l-0.8,3.7l-0.9,0.6l-1.6,4.6l-6.2,7.2l2.2,9 l1.1,4.5l-1.4,7.1l0.4,2.3l0.6,2.9l0.3,2.8h4.1l0.7-3.3l-1.4-0.5l-0.3-2.6l2.6-2.4l6.8-3.4l4.6-2.2l2.5-2.3l0.9-2.6l-1.2-1.1l1.1-3 l0.5-6.2l-1,0.3v-1.9l-0.8-3.7l-2.4-4.8l0.7-4.6l2.3-1.4l4.1-4.6l2.2-1.1l6.7-6.8l6.4-3.1l5.2-2.5l3.7-3.9l2.4-4.4l1.9-4.6l-0.9-3.1 l0.2-9.9l-0.4-5.6L1203,640.7L1203,640.7z\"},MM:{d:\"M1533.9,435.8l-0.6-2.6l-3.8,1.8l-2.5-1.2l-4.5-2.4l0.8-5.2l-3.7-1.3l-2.3-5.8l-5.6,1l-0.7-7.5l4.1-5.3l-0.8-5.3 l-1.3-4.9l-2.7-1.5l-2.7-3.7l-3,0.4l0.9,2.4l-1.6,1.2l1.3,3.9l-4.1-1.1l-6.1,4.4l0.9,3.6l-2.1,5.4l0.3,3.1l-1.5,5.2l-4.6-1.4 l0.9,6.6l-0.9,2.1l0.9,2.7l-2.4,1.5l0.5,4.6l-2.1-1l1.1,5.1l4.6,5.2l3.4,0.9l-0.4,2.2l5.4,7.4l1.9,5.9l-0.9,7.9l3.6,1.5l3.2,0.6 l5.8-4.6l3.2-3.1l3.1,5.2l2,8.1l2.6,7.6l2.6,3.3l0.2,6.9l2.2,3.8l-1.3,4.8l0.9,4.8l2.2-6.6l2.6-5.9l-2.8-5.8l-0.2-3l-1-3.5l-4.2-5.1 l-1.7-3.2l1.7-1.1l1.4-5.6l-2.9-4.2l-4.1-4.6l-3.5-5.6l2.2-1.1l1.5-6.9l3.9-0.3l2.8-2.8l3-1.4l0.8-2.4L1533.9,435.8L1533.9,435.8z\"},NA:{d:\"M1105.4,683.7l-10.3,2.5l-13.4-0.9l-3.7-3l-22.5,0.3l-0.9,0.4l-3.2-2.9l-3.6-0.1l-3.3,1l-2.7,1.2l0.2,4.9l4.4,6.2 l1.1,4l2.8,7.7l2.7,5.2l2.1,2.6l0.6,3.5v7.6l1.6,9.8l1.2,4.6l1,6.2l1.9,4.7l3.9,4.8l2.7-3.2l2.1,1.8l0.8,2.7l2.4,0.5l3.3,1.2 l2.9-0.5l5-3.2l1.1-23.6l0.6-18.5l5.4-0.2l0.9-22.7l4.1-0.2l8.6-2.2l2,2.6l3.7-2.5h1.6l3.2-1.5V684l-2.1-1.4l-3.6-0.4L1105.4,683.7 L1105.4,683.7z\"},NR:{d:\"M1915,575.5v-0.2h-0.1h-0.1l-0.1,0.2l0.1,0.1l0.1,0.1L1915,575.5L1915,575.5z\"},NP:{d:\"M1455.2,394.8l-6.5-0.6l-6.4-1.5l-5-2.8l-4.5-1.2l-2.5-3.1l-3.2-0.9l-6.4-4.1l-4.7-2l-1.9,1.5l-2.8,2.9l-0.9,5.9 l5.7,2.5l5.8,3.1l7.7,3.5l7.6,0.9l3.8,3.2l4.3,0.6l6.8,1.5l4.6-0.1l0.1-2.5l-1.5-4.1L1455.2,394.8L1455.2,394.8z\"},NL:{d:\"M1005.5,243.9h2.9l1.1-2.3l1-5.6l-1-2l-3.9-0.2l-6.5,2.6l-3.9,8.9l-2.5,1.7l0,0l3.6,0.5l4.4-1.3l3.1,2.7l2.8,1.4 L1005.5,243.9L1005.5,243.9z\"},NC:{d:\"M1897.3,716.1v-0.3l-0.4-0.2l-0.2,0.5v0.1l0.2,0.1h0.2L1897.3,716.1L1897.3,716.1z M1901.9,708.5L1901.9,708.5 l-0.1-0.4l0.1-0.2l-0.4,0.2l-0.6,0.2l0.1,0.8l-0.1,0.4l0.3,0.1l0.1,0.3h0.2l0.7-0.2l0.3-1.1h-0.4L1901.9,708.5L1901.9,708.5z M1898.9,706.8l0.3-0.5l0.1-0.2l-0.2-0.7l-0.3-0.3l0.3-1l-0.1-0.2l-0.4-0.2l-0.9,0.3l-0.1,0.2l0.5,0.1l0.2,0.2l-0.5,0.7l-0.5,0.1 l0.1,0.5l0.2,0.4l0.7,0.2l0.3,0.4H1898.9z M1895,703.9l0.3-0.3l0.3-0.4l-0.1-0.1v-0.3l0.2-0.4l0.3-0.1l-0.2-0.2l-0.2-0.1v0.3 l-0.3,0.7l-0.1,0.3l-0.5,0.6H1895L1895,703.9z M1882.7,701l-0.6-0.7l-0.1,0.2l-0.1,0.4v0.3l0.3,0.2l0.1,0.2l-0.1,0.5v0.4l0.6,0.9 l0.1,0.7l0.3,0.6l0.5,0.5l0.4,0.5l0.8,1.4l0.2,0.5l0.4,0.3l1,1.2l0.4,0.4l0.4,0.2l0.9,0.7l0.6,0.3l0.3,0.5l0.6,0.3l0.8,0.4l0.1,0.2 v0.3l0.1,0.3l0.5,0.4l0.6,0.3l0.1,0.2l0.1,0.2l0.3-0.1l0.3,0.1l0.9,0.7l0.4-0.1h0.3l0.5-0.2l0.3-0.4l-0.1-1.1l-0.5-0.5l-0.7-0.4 l-0.4-0.5l-0.4-0.5l-0.8-1l-1.1-1l-0.5-0.2l-0.3-0.4l-0.3-0.1l-0.2-0.3l-0.5-0.3l-0.3-0.6l-0.6-0.6l-0.1-0.3l0.1-0.3l-0.1-0.3 l-0.4-0.3l-0.2-0.5l-0.2-0.3l-0.4-0.2l-0.7-0.4l-1.6-1.9l-0.7-0.6l-0.7,0.2L1882.7,701L1882.7,701z M1860.7,695l0.2-0.4l0.1-0.8 l-0.2,0.4l-0.2,1L1860.7,695z\"},NZ:{d:\"M1868.6,832.8l0.9-2.6l-5.8,2.9l-3.4,3.4l-3.2,1.6l-5.9,4.6l-5.6,3.2l-7,3.2l-5.5,2.4l-4.3,1.1l-11.3,6.1l-6.4,4.6 l-1.1,2.3l5.1,0.4l1.5,2.1l4.5,0.1l4-1.8l6.3-2.8l8.1-6.2l4.7-4.1l6.2-2.3l4-0.1l0.6-2.9l4.6-2.5l7-4.5l4.2-2.9l2.1-2.6l0.5-2.6 l-5.6,2.5L1868.6,832.8L1868.6,832.8z M1897.4,802.3l1.9-5.7l-3.1-1.7l-0.8-3.6l-2.3,0.5l-0.4,4.6l0.8,5.7l0.9,2.7l-0.9,1.1 l-0.6,4.4l-2.4,4.1l-4.2,5l-5.3,2.2l-1.7,2.4l3.7,2.5l-0.8,3.5l-6.9,5.1l1.4,0.9l-0.4,1.6l5.9-2.5l5.9-4.2l4.5-3.4l1.6-1.2l1.5-2.7 l2.8-2l3.8,0.2l4.2-3.8l5.1-5.7l-2.1-0.8l-4.6,2.5l-3.2-0.5l-2.9-2.1l2.3-4.9l-1.2-1.8l-2.9,4.4L1897.4,802.3L1897.4,802.3z\"},NI:{d:\"M514.1,476.8l-1.9-0.2l-0.9,0.9l-2,0.8h-1.4l-1.3,0.8l-1.1-0.3l-0.9-0.9l-0.6,0.2l-0.8,1.5l-0.5-0.1l-0.3,1.3 l-2.1,1.8l-1.1,0.7l-0.6,0.8l-1.5-1.3l-1.4,1.7h-1.2l-1.3,0.2l-0.2,3.1h-0.8l-0.8,1.5l-1.8,0.3l-0.4,0.4l-0.9-1l-0.7,1l2.6,2.9 l2.2,2l1,2.1l2.5,2.6l1.8,2l0.9-0.8l3.5,1.7l1.4-0.8l1.7,0.5l0.8,1.3l1.7,0.4l1.4-1.3l-0.8-1.1l-0.1-1.7l1.2-1.6l-0.2-1.7l0.7-2.7 l0.9-0.7l0.1-2.8l-0.2-1.7l0.4-2.8l0.9-2.5l1.4-2.2l-0.3-2.3l0.4-1.4L514.1,476.8L514.1,476.8z\"},NE:{d:\"M1051.3,425.6l-8.8-2.8l-18.6,12.2l-15.8,12.5l-7.8,2.8l0.1,14.6l-3,4.3l-0.5,3.9l-4.9,1l-7.6,0.6l-2,2.2l-3.6,0.3 l-0.5,3.1l0.8,2.9l3.1,4.1l0.2,3.1l6.4,1.4l-0.1,4.4l1.9-1.9h2l4.3,3.7l0.3-5.7l1.6-2.6l0.8-3.6l1.4-1.4l6-0.8l5.6,2.4l2.1,2.4 l2.9,0.1l2.6-1.5l6.8,3.3l2.8-0.2l3.3-2.7l3.3,0.2l1.6-0.9l3,0.4l4.3,1.8l4.3-3.5l1.3,0.2l3.9,7l1-0.2l0.2-2l1.6-0.4l0.5-2.9 l-3.6-0.2v-4.1l-2.4-2.3l2.3-8.4l6.9-6l0.2-8.3l1.8-12.9l1.1-2.7l-2.3-2.2l-0.2-2.1l-2-1.6l-1.6-9.9l-3.9,2.4L1051.3,425.6 L1051.3,425.6z\"},NG:{d:\"M1055.8,492.7l-1,0.2l-3.9-7l-1.3-0.2l-4.3,3.5l-4.3-1.8l-3-0.4l-1.6,0.9l-3.3-0.2l-3.3,2.7l-2.8,0.2l-6.8-3.3 l-2.6,1.5l-2.9-0.1l-2.1-2.4l-5.6-2.4l-6,0.8l-1.4,1.4l-0.8,3.6l-1.6,2.6l-0.3,5.7l-0.2,2.1l1.2,3.8l-1.1,2.5l0.6,1.7l-2.7,4 L993,514l-1,4l0.1,4.1l-0.3,10.2h4.9h4.3l3.9,4.2l1.9,4.6l3,3.9l4.5,0.2l2.2-1.4l2.1,0.3l5.8-2.3l1.4-4.5l2.7-6.1l1.6-0.1l3.3-3.7 l2.1-0.1l3.2,2.6l3.9-2.2l0.5-2.6l1.2-2.6l0.8-3.2l3-2.6l1.1-4.5l1.2-1.4l0.7-3.3l1.5-4l4.6-5l0.3-2.1l0.6-1.1L1055.8,492.7 L1055.8,492.7z\"},KP:{d:\"M1644.7,302.3L1644.7,302.3l-5.5-3.6l0.1,3.5l-6.3,2.6l2.7,3.3l-4.6-0.2l-3.6-2l-1,4.4l-3.8,3.4l-2.1,4l3.3,1.7 l3.4,0.7l0.8,1l0.4,3.5l1.1,1.2l-0.9,0.7l-0.1,2.9l1.9,1l1.6,0.6l0.8,1.2l1.3-0.5v-1.3l3.1,1.3l0.1-0.6l2.4,0.2l0.7-2.9l3.5-0.3 l2.1-0.4l-0.1-1.6l-4.3-2.8l-2.6-1l0.2-0.7l-1.2-2.8l1.3-1.7l2.9-1l1-1.9l0.3-1.1l1.9-1.4l-2.8-4.5l0.3-2.1l0.9-2l2.2,0.3l0,0l0,0 l0,0L1644.7,302.3L1644.7,302.3z\"},NO:{d:\"M1088.8,133.1l-6.9,1.1l-7.3-0.3l-5.1,4.4l-6.7-0.3l-8.5,2.3l-10.1,6.8l-6.4,4l-8.8,10.7l-7.1,7.8l-8.1,5.8 l-11.2,4.8l-3.9,3.6l1.9,13.4l1.9,6.3l6.4,3l6-1.4l8.5-6.8l3.3,3.6l1.7-3.3l3.4-4l0.9-6.9l-3.1-2.9l-1-7.6l2.3-5.3l4.3,0.1l1.3-2.2 l-1.8-1.9l5.7-7.9l3.4-6.1l2.2-3.9l4,0.1l0.6-3.1l7.9,0.9v-3.5l2.5-0.3l2.1-1.4l5.1,2.9l5.3-0.3l4.7,1.3l3.4-2.4l1.1-3.9l5.8-1.8 l5.7,2.1l-0.8,3.8l3.2-0.5l6.4-2.2l0,0l-5.4-3.3l4.8-1.4L1088.8,133.1L1088.8,133.1z M1066.2,99.8l-5.6-1l-1.9-1.7l-7.2,0.9l2.6,1.5 l-2.2,1.2l6.7,1.1L1066.2,99.8z M1040.8,91.5l-4.8-1.6l-5.1,0.2l-1,1.5h-5l-2.2-1.5l-9.3,1.6l3.2,3.5l7.6,3.8l5.7,1.4l-3,1.7 l8.4,2.9l4.4-0.2l0.9-3.9l3-0.9l1.2-3.4l8.5-1.8C1053.3,94.8,1040.8,91.5,1040.8,91.5z M1065,88.4l-9.1-1l-3.2,1.2l-5.3-1l-10.4,1.2 l4.3,2h5.1l0.9,1.3l10.6,0.7l10.1-0.5l4.3-2.4C1072.3,89.9,1065,88.4,1065,88.4z\"},OM:{d:\"M1301,437.8l2.1-2l0.8-1.8l1.6-3.8l-0.1-1.4l-2.1-0.8l-1.6-2.1l-2.9-3.7l-3.3-1.1l-4.1-0.9l-3.3-2.3l-2.9-4.3h-2.8 l-0.1,4.2l1.1,0.8l-2.4,1.3l0.3,2.6l-1.4,2.6l0.1,2.6l2.9,4.5l-2.6,12.7l-16.1,6.4l5.2,10.5l2.1,4.4l2.5-0.3l3.6-2.2l3.1,0.6 l2.5-1.8l-0.2-2.5l2.1-1.6h3.4l1.2-1.3l0.2-3.1l3.3-2.4h2.6l0.4-0.8l-1-4.2l0.6-3.2l1-1.5l2.5,0.3L1301,437.8L1301,437.8z M1284.4,407.4l0.2-2.6l-0.7-0.6l-1.3,2.2l1.3,2.2L1284.4,407.4z\"},PK:{d:\"M1388.3,346.3l-9.4-2.6l-2.9-5l-4.7-3l-2.8,0.7l-2.4,1.2l-5.8,0.8l-5.3,1.3l-2.4,2.8l1.9,2.8l1.4,3.2l-2,2.7 l0.8,2.5l-0.9,2.3l-5.1-0.2l3,4.2l-3,1.6l-1.5,3.8l1.1,3.8l-1.7,1.8l-2.1-0.6l-4,0.9l-0.2,1.7h-4l-2.3,3.6l0.8,5.4l-6.6,2.6 l-3.8-0.5l-0.9,1.4l-3.3-0.8l-5.3,0.9l-9.6-3.2l3.2,3.3l2.8,3.9l5.6,2.7l1,5.7l2.7,1l0.9,2.9l-7.4,3.3l-1.2,7.4l7.6-0.9l8.9-0.1 l9.9-1.2l4.9,4.8l2.1,4.6l4.2,1.6l3.2-4.2h12l-1.8-5.5l-3.5-3.2l-1.3-4.9l-4-2.9l4.9-6.6l6.4,0.5l4.5-6.7l2.1-6.5l3.9-6.3l-1-4.5 l3.7-3.7l-5-3.1l-2.9-4.3l-3.2-5.6l1.9-2.8l8.5,1.6l5.7-1L1388.3,346.3L1388.3,346.3z\"},PS:{d:\"M1166.9,366.1l-2-0.9l-0.7,4.3l1.4,0.7l-1.2,0.8l-0.1,1.7l2.4-0.8l0.6-1.9L1166.9,366.1L1166.9,366.1z\"},PA:{d:\"M543.5,517l-2-1.8l-1.7-1.9l-2.5-1.1l-3.1-0.2l0.3-0.6l-3.1-0.4l-2,1.9l-3.5,1.3l-2.5,1.6l-2.7,0.5l-1.5-1.6 l-0.5,0.5l-2.3-0.3l0.2-1.3l-1.9-2.3l-2.2,0.6l-0.1,2.5l1.1,1l-0.8,0.7l0.1,1.2l-0.5,1.3l-0.4,1.2l0.6,1l0.3-1.4h2.4l1.4,0.7 l2.3,0.5l1,2.5l1.8,0.4l0.8-1.1l0.8,3.8l2.6-0.3l0.9-0.9l1.5-0.9l-2.5-3.4l0.6-1.3l1.3-0.3l2.3-1.6l1.2-2.2l2.5-0.4l2.7,1.8l1,2.1 l1.4,0.4l-1.5,1.7l1,3.5l1.8,1.8l0.9-3.1l1.8,0.5l1.1-1.9l-1.1-3.8L543.5,517z\"},PG:{d:\"M1850.7,615.6l0.9-1.8l-2.4-2.2l-2.5-4l-1.6-1.5l-0.5-1.9l-0.8,0.7l0.9,4.8l2.2,4l2.2,2.5L1850.7,615.6 L1850.7,615.6z M1829.5,607l2.1-3.9l0.4-3.5l-1.1-1l-3.4,0.1l0.4,3.7l-3.3,2.3l-1.7,2.2l-3.2,0.5l-0.4-3.4l-0.8,0.1l-1,3.1l-3.1,0.5 l-5-0.9l-0.6,1.9l3.1,1.8l4.5,1.9h2.9l3-1.5l3.2-1.6l1-1.8L1829.5,607L1829.5,607z M1801.7,619.2l-0.9-4.3l5.2-0.7l-1.1-3.3l-9.1-4 l-0.6-3.7l-2.9-3.2l-3.7-3.3l-10.2-3.6l-9.6-4.4l-1,20.7l-1.5,20.8l5.7,0.2l3.1,1.1l4.6-2.2l-0.3-4.7l3.6-2.1l4.9-1.8l7,2.8l2.4,5.6 l2.9,3.5l3.9,4l5.5,1l4.8,0.7l1.1,1.6l3.8-0.4l0.8-1.8l-5.6-2.7l1.8-1.2l-4.2-1.1l0.5-2.8l-3.2,0.2l-3-6.8L1801.7,619.2 L1801.7,619.2z M1836.4,600.8l-0.5-3.3l-2-2.1l-2.1-2.6l-2.3-1.5l-1.9-1.4l-2.9-1.8l-1.6,1.5l3.9,1.9l3.1,2.7l2.4,2.1l1.2,2.4 l0.8,3.8L1836.4,600.8L1836.4,600.8z\"},PY:{d:\"M655.7,700.5l-0.3-1.9l-5.4-3.3l-5.1-0.1l-9.5,1.9l-2.1,5.6l0.2,3.4l-1.5,7.6l11.2,10.4l4.6,1l7.2,4.7l5.9,2.5 l1.1,2.8l-4.2,9.6l5.7,1.8l6.2,1l4.2-1.1l4.3-4.8l0.3-5.7l0.7-3.6l0.3-3.8l-0.3-3.5l-2.1-1.2l-2,1.1l-2-0.3l-0.9-2.5l-1-5.8 l-1.2-1.9l-3.9-1.7l-2.1,1.2l-6-1.2l-0.4-8.6L655.7,700.5L655.7,700.5z\"},PE:{d:\"M584.3,599.5l-2.9-3.4l-1.7-0.1l3.5-6.5l-4.4-3l-3.3,0.6l-2.1-1.1l-3,1.7l-4.2-0.8l-3.4-6.7l-2.7-1.7l-1.8-3l-3.7-3 l-1.5,0.6l0.8,4.9l-1.7,4.1l-6,6.7l-6.7,2.5l-3.3,5.5l-0.9,4.3l-3.1,2.6l-2.5-3.2l-2.3-0.7l-2.3,0.5l-0.2-2.3l1.5-1.5l-0.7-2.7 l-4.4,4l-1.6,4.5l3,6.1l-1.7,2.8l4.1,2.6l4.5,4.1l2,4.7l2.4,2.9l6,12.7l6.2,11.7l5.4,8.4l-0.8,1.8l2.8,5.3l4.6,3.9l10.7,6.9 l11.6,6.4l0.7,2.6l5.9,3.7l2.7-1.6l1.2-3.3l2.8-6.9l-2.8-5.3l1.1-2.1l-1.2-2.4l1.9-3.2l-0.3-5.4l-0.1-4.5l1.1-2.1l-5.5-10.3l-3,1.1 l-2.6-0.7l-0.2-9.7l-4.4,3.8l-4.9-0.2l-2.3-3.4l-3.7-0.3l1-2.8l-3.3-3.8L562,620l1.5-1.1l-0.1-2.7l3.3-1.9l-0.7-3.4l1.3-2.2l0.4-3 l6.2-4.3l4.6-1.2l0.7-1L584.3,599.5L584.3,599.5z\"},PH:{d:\"M1684.6,518.6l-0.6-2.3l-0.8-3.2l-4.8-3l0.8,4.9l-3.9,0.2l-0.7,2.8l-4.2,1.7l-2.2-2.8l-2.8,2.4l-3.4,1.7l-1.9,5.4 l1.1,1.9l3.9-3.6l2.7,0.3l1.5-2.7l3.8,3l-1.5,3.1l1.9,4.6l6.8,3.7l1.4-3l-2.1-4.7l2.4-3.2l2.5,6.4l1.5-5.8l-0.6-3.5L1684.6,518.6 L1684.6,518.6z M1670.1,506.8v-6.1l-3.6,6.1l0.5-4.2l-3,0.3l-0.3,4l-1.2,1.8l-1,1.7l3.8,4.4l1.6-1.9l1.4-4L1670.1,506.8 L1670.1,506.8z M1640,512.9l2.6-4.4l3.4-3.5l-1.5-5.2l-2.4,6.3l-2.9,4.4l-3.8,4l-2.4,4.4L1640,512.9L1640,512.9z M1657.4,496.5 l1.2,3l-0.1,3.3l0.5,2.9l3.3-1.9l2.4-2.7l-0.2-2.6h-3.6L1657.4,496.5L1657.4,496.5z M1677.4,494.8l-1.8-2.4l-5.4-0.1l4,4.8l0.3,2.4 l-3.3-0.5l1.2,3.9l1.7,0.3l0.7,4.5l2.5-1.4l-1.7-4l-0.4-2.1l4.5,1.7L1677.4,494.8L1677.4,494.8z M1654.5,489l-2.2-2.3l-4.8-0.2 l3.4,4.8l2.8,3.2L1654.5,489L1654.5,489z M1648.1,454.4h-3.3l-0.9,5.8l1.1,9.9l-2.6-2l1.2,6l1.2,2.8l3.3,3.7l0.4-2.3l1.8,1.4 l-1.5,1.7l0.1,2.6l2.9,1.4l5-0.9l4,3.8l1.1-2.4l2.5,3.4l4.8,3.1l0.2-2.9l-2-1.6l0.1-3.4l-7.5-3.6l-2.3,0.8l-3.1-0.7l-2-5.1l0.1-5.1 l3-2.1l0.6-5.3l-2.7-4.6l0.4-2.6l-0.7-1.6l-1.5,1.6L1648.1,454.4L1648.1,454.4z\"},PN:{d:\"M274.2,727.4v-0.2l-0.1-0.2l-0.2-0.1l-0.1,0.1l0.1,0.2l0.2,0.2H274.2L274.2,727.4z\"},PL:{d:\"M1069.4,228.3l-4.6-0.1l-0.5-1.4l-4.8-1.1l-5.7,2.1l-7.1,2.8l-3.1,1.7l1.4,3.1l-1.2,1.6l2,2.2l1.4,3.3l-0.1,2.1 l2.3,3.9l2.4,1.9l3.7,0.6l-0.1,1.7l2.7,1.2l0.6-1.5l3.4,0.6l0.7,2l3.6,0.3l2.6,3.1l0.3,0.4l1.9-0.9l2.7,2.2l2.8-1.3l2.4,0.6l3.4-0.8 l4.9,2.3l1.1,0.4l-1.6-2.8l3.8-5.1l2.3-0.7l0.3-1.8l-3.1-5.3l-0.5-2.7l-1.9-2.9l2.7-1.2l-0.3-2.4l-1.7-2.3l-0.6-2.7l-1.4-1.9 l-2.5-0.6l-8.7,0.1L1069.4,228.3L1069.4,228.3z\"},PT:{d:\"M937.6,335.9l-0.4-2.1l2-2.5l0.8-1.7l-1.8-1.9l1.6-4.3l-2-3.8l2.2-0.5l0.3-3l0.9-0.9l0.2-4.9l2.4-1.7l-1.3-3.1 l-3-0.2l-0.9,0.8h-3l-1.2-3.1l-2.1,0.9l-1.9,1.6l0.1,2.1l0.9,2.2l0.1,2.7l-1.3,3.8l-0.4,2.5l-2.2,2.3l-0.6,4.2l1.2,2.4l2.3,0.6 l0.4,4l-1,5.1l2.8-0.7l2.7,0.9L937.6,335.9L937.6,335.9z\"},PR:{d:\"M600.8,457.3v-0.1l0,0h0.1v-0.1l0.1-0.1l0,0v-0.1h-0.1l0,0h-0.3h-0.1v0.1v0.1l0.2,0.1l0,0L600.8,457.3L600.8,457.3 L600.8,457.3z M614.4,457l0.7-0.2v-0.1l-0.4-0.1h-0.6l-0.5,0.2l0.1,0.2h0.2H614.4z M610.7,454.8l-0.1-0.2h-0.2l-3.5-0.1l-1.3-0.2 l-0.3,0.1l-0.3,0.1l-0.1,0.4l-0.2,0.2l-0.3,0.2l0.1,0.3l0.1,0.2l0.2,0.4l-0.1,0.5l-0.2,1l0.3,0.2l0.7-0.1l0.3,0.1l0.3,0.1l0.4-0.1 l0.4-0.2l0.9,0.1l0.5-0.1l0.6,0.3l0.4-0.1l0.2,0.1h0.3h0.6l0.9-0.2l0.8-0.5l0.3-0.5l0.4-0.3l0.6-0.4v-0.9l-0.7-0.1l-0.6-0.3 l-1.1-0.1h-0.1l0.1,0.2h-0.1L610.7,454.8L610.7,454.8z\"},QA:{d:\"M1258,415.5l0.8-3.8l-0.5-3.7l-1.9-2l-1.4,0.7l-1.1,3.3l0.8,4.7l1.8,1.2L1258,415.5L1258,415.5z\"},RE:{d:\"M1284,707.9l0.2-0.4l0.1-0.8l-0.4-0.8l-0.4-0.7l-0.4-0.2l-0.8-0.1l-0.7,0.3l-0.4,0.6l-0.2,0.3l0.4,1.1l0.2,0.3 l1.1,0.6h0.5L1284,707.9L1284,707.9z\"},RO:{d:\"M1108.1,266.3h-2.1l-1,1.5l-3.6,0.6l-1.6,0.9l-2.4-1.5h-3.2l-3.2-0.7l-1.9,1.3l-2.9,1.3l-1.9,4.2l-2.6,4.3l-3.8,1.1 l2.9,2.5l0.8,1.9l3.2,1.5l0.7,2.5l3.1,1.8l1.4-1.3l1.4,0.7l-1.1,1.1l1,1l1.8,2.6l1.9-0.5l4,1l7.5,0.3l2.3-1.6l5.8-1.4l4,2.2l3,0.7 l0.4-7.4l1.6,0.5l2.3-1.3l-0.4-1.6l-2.4-1.1l-2.2,1l-2.4-1.1l-1.3-2.8l0.2-2.7l-0.6-2.7l-3.4-3.7l-1.9-2.6l-1.8-1.9L1108.1,266.3 L1108.1,266.3z\"},RU:{d:\"M1332.3,95.1l-4.5-4l-13.6-4.1l-9.4-2.1l-6.2,0.9l-5.3,2.9l5.8,0.8l6.6,3.2l8,1.7l11.5,1.3 C1325.2,95.7,1332.3,95.1,1332.3,95.1z M1153.6,87.8l0.9-0.6l-5.7-0.9L1146,87l-1.3,1l-1.5-1.2l-5.2,0.1l-6.2,0.8l7.7,0.1l-1.1,1.3 l4.4,1l3.6-0.7l0.1-0.7l2.9-0.3C1149.4,88.4,1153.6,87.8,1153.6,87.8z M1354.1,97.7l-1.5-1.8l-12.5-2.6l-3-0.3l-2.2,0.5l1.2,6 C1336.1,99.5,1354.1,97.7,1354.1,97.7z M1369.3,104l-9.2-0.7l3.4-1.2l-8.2-1.5l-6.1,1.9l-1,2l1.5,2.1l-6.9-0.1l-5.3,2.6l-4.3-1.1 l-9.3,0.5l0.3,1.3l-9.2,0.7l-4.9,2.4l-4.2,0.2l-1.2,3.3l5.5,2.6l-7.7,0.7l-9.5-0.3l-5.8,1.1l4.8,5.4l6.9,4.3l-9.6-3l-7.9,0.3l-5.1,2 l4.5,3.8l-4.9-1l-2.1-5l-4.2-2.8l-1.8,0.1l3.6,3.7l-4.6,3.5l8.1,4.2l0.4,5.4l2.9,2.9l4.7,0.5l0.4,3.5l4.4,3.1l-1.9,2.6l0.5,2.7 l-3.7,1.4l-0.5,2l-5.3-0.8l3.5-7.8l-0.5-3.6l-6.7-3.3l-3.8-7.3l-3.7-3.7l-3.6-1.6l0.8-4.2l-2.9-2.9l-11.3-1.4l-2.1,1l0.5,4.7 l-4.3,4.7l1.2,1.7l4.7,4.1l0.1,2.6l5.3,0.5l0.8,1.1l5.8,2.9l-1,2.8l-18.5-6.1l-6.6-1.7l-12.8-1.6l-1.2,1.7l5.9,3.1l-2.7,3.6 l-6.4-3.2l-5,2.2l-7.6,0.1l-2.1,1.9l-5.3-0.6l2.5-3.3l-3.2-0.2l-12.3,4.6l-7.6,2.6l0.4,3.5l-6,1.2l-4-1.9l-1.2-3l5-0.7l-3.6-3 l-12.2-1.8l4.3,3.4l-0.8,3.2l4.7,3.3l-1.1,3.8l-4.6-1.9l-4-0.3l-8,5.4l4.2,4.1l-3.2,1.4l-11.4-3.5l-2.1,2.1l3.3,2.4l0.2,2.7 l-3.8-1.4l-6-1.7l-1.9-5.8l-1-2.6l-8-4l2.9-0.7l20.1,4.2l6.4-1.5l3.7-2.9l-1.6-3.6l-4-2.6l-17.6-6.1l-11.6-1.3l-7.6-3.2l-3.6,1.8 l0,0l-6.4,2.2l-3.2,0.5l0.4,3.7l7.2,3.7l-2.8,4.1l6.4,6.3l-1.7,4.8l4.9,4.1l-0.9,3.7l7.3,3.9l-0.9,2.9l-3.3,3.3l-7.9,7.4l0,0 l5.3,2.8l-4.5,3.2l0,0l0.9,1l-2.6,3.4l2.5,5.5l-1.6,1.9l2.4,1.4l1,2.8l2.1,3.6l5.2,1.5l1,1.4l2.3-0.7l4.8,1.4l1,2.9l-0.6,1.6 l3.7,3.9l2.2,1.1l-0.1,1.1l3.4,1.1l1.7,1.6l-1.6,1.3l-3.9-0.2l-0.8,0.6l1.5,2l2,3.9l0,0l1.8,0.2l1-1.4l1.5,0.3l4.8-0.5l3.8,3.4 l-0.9,1.3l0.7,1.9l4,0.2l2.2,2.7l0.2,1.2l6.6,2.2l3.5-1l3.6,2.9l2.9-0.1l7.6,2l0.4,1.9l-1.3,3.2l1.8,3.4l-0.3,2.1l-4.7,0.5l-2.2,1.7 l0.4,2.8l4.2-1l0.4,1.3l-6.8,2.6l3.2,2.4l-3.2,5.2l-3.4,1l5,3.6l6.2,2.4l7.4,5.1l0.5-0.7l4.5,1.1l7.7,1l7.5,2.9l1.1,1.2l2.9-1 l5.1,1.3l2.1,2.5l3.5,1.4l1.5,0.2l4.3,3.8l2.4,0.4l0.5-1.5l2.6-2.5l0,0l-7.3-7.3l-0.4-4.1l-5.9-5.9l3.5-6.3l4.6-1.1l1.4-3.7l-2.8-1 l-0.2-3.2l-4.2-4.1l-3.6,0.2l-5.3-4.3l1.7-4.7l-1.7-1.2l2.1-6.8l6,3.6l-0.7-4.6l8.1-6.6l7.5-0.2l11.9,4.3l6.6,2.4l4.3-2.5l7.6-0.2 l7.3,3.2l0.8-1.8l6.9,0.3l0.2-3l-9.4-4.2l3.6-2.9l-1.5-1.7l3.9-1.6l-5-4.1l1.4-2.1l16.8-2.1l1.7-1.5l10.8-2.2l3.1-2.5l9,1.3l4.3,6.3 l4.3-1.5l7,2.1l1.2,3.3l4.4-0.4l9.1-5.7l-0.8,1.9l8.3,4.7l18.1,15.5l1.1-3.3l8.3,3.6l6.2-1.6l3.2,1.1l4.1,3.6l3.9,1.2l3.3,2.6l6-0.9 l4.3,3.8l1.7-0.5l4.7-1l6.6-5.4l5.9-2.9l5.3,1.9l5.1,0.1l4.7,2.9l5,0.2l7.9,1.6l2.4-4.3l-4-3.6l1.3-6.4l6.9,2.5l4.8,0.8l6.6,1.5 l3.7,4.6l8.4,2.6l3.9-1.1l5.7-0.8l5.4,0.8l6.5,3l4.9,3.1h4.5l6.7,1l3.6-1.6l5.8-1l4.5-4.4l3.3,0.7l3.9,2.1l5.5-0.5l7.3,2.3l4.4-3.9 l-1.9-2.7l-0.1-6.5l1.2-2l-2.5-3.3l-3.7-1.5l1.7-3l5.1-1.1l6.2-0.2l8.5,1.8l5.9,2.3l7.7,6.1l3.8,2.7l4.4,3.7l6.1,6.1l9.9,1.9 l8.9,4.5l6,5.8h7.5l2.6-2.5l6.9-1.8l1.3,5.6l-0.4,2.3l2.8,6.8l0.6,6l-6.8-1.1l-2.9,2.2l4.7,5.3l3.8,7.3l-2.5,0.1l1.9,3.1l0,0 l1.4,1.1l0,0l0,0l0,0l-0.4-2l4-4.5l5.1,3l3.2-0.1l4.4-3.6l1-3.7l2.1-7.1l1.9-7.2l-1.3-4.3l1-9l-5.2-9.9l-5.5-7.3l-1.3-6.2l-4.7-5.1 l-12.7-6.7l-5.6-0.4l-0.3,3l-5.8-1.3l-5.7-3.8l-8-0.7l4.9-14.1l3.5-11.5l13.1-1.8l14.9,1l2.5-2.8l7.9,0.8l4.3,4.3l6.4-0.6l8.4-1.6 l-7.7-3.5v-9.8l9.1-1.9l12.1,7.1l3.6-6.4l-3.2-4.7l4.7-0.5l6.5,8.1l-2.4,4.6l-0.8,6l0.3,7.5l-5.7,1.3l2.8,2.7l-0.1,3.6l6.4,8.3 l16,13.4l10.5,8.8l5.7,4.3l1.6-5.7l-4.5-6.2l5.7-1.5l-5.4-6.9l5-3.1l-4.7-2.6l-3.4-5l4.1-0.2l-9-8.6l-6.7-1.4l-2.9-2.4l-1.1-5.6 l-3.1-3.9l7,0.8l1.3-2.5l4.7,2.2l6.1-4.6l11.4,4l-1.7-2.6l2-3.6l1.5-4l3.1-0.7l6.5-4.3l9.8,1.2l-0.9-1.5l-3.8-2.3l-4.1-1.6l-9.1-4.6 l-8.1-3l6.1,0.4l2-2.5l0,0l-32.9-21.9l-9.4-2.3l-15.7-2.6l-7.9,0.3l-15.2-1.4l1.8,2.3l8.5,3.4l-2.5,1.8l-14.2-4.8l-6.8,0.6l-9.2-1.1 l-7,0.2l-3.9,1.1l-7.2-1.6l-5.1-3.8l-6.5-2.2l-9.2-0.9l-14.7,1l-16.1-4l-7.8-3l-40.1-3.4l-2.1,2.2l9.3,4.8l-7.5-0.7l-1,1.5l-9.7-1.6 l-5,1.4l-9.3-2.4l3,5.5l-8.9-2.1l-10-4.1l-0.4-2.2l-6-3.3l-9.8-2.6h-6.1l-9.3-0.9l4.7,3.9l-17.2-0.8l-3.9-2.3l-13.3-0.9l-5.3,0.8 l-0.1,1.3l-5.8-3.2l-2.3,0.9l-7.2-1.2l-5.6-0.7l1.1-1.5l6.6-2.8l2.3-1.5l-2.4-2.5l-5.5-1.9l-11.5-2.3l-10.8-0.1l-1.9,1.2L1369.3,104 L1369.3,104z M1207.1,135.6l-9.9-4.3l-3.1-4.3l3.3-4.9l2.8-5l8.6-4.7l9.8-2.4l11.3-2.4l1.3-1.5l-4.2-1.9l-6.6,0.6l-4.9,1.8 l-11.7,0.9l-10.1,3.1l-6.8,2.7l2.5,2.2l-6.6,4.4l3.9,0.7l-5.4,4.3l1.6,2.8l-3.4,1.1l1.9,2.8l7.9,1.4l2.2,2.3l13.4,0.7L1207.1,135.6 L1207.1,135.6z M1521.1,110.9l-17.9-2.6l-10.2-0.2l-3.4,0.9l3.4,3.4l12.4,3.2l4.5-1.2l14.2,0.2 C1524.1,114.6,1521.1,110.9,1521.1,110.9z M1546.3,113.2l-11.7-1.3l-8.2-0.7l1.7,1.6l10.3,2l6.8,0.4L1546.3,113.2L1546.3,113.2z M1533.8,122.7l-2.5-1.4l-8.3-1.9l-4.1,0.5l-0.8,2l1.1,0.2l8.8,0.6C1528,122.7,1533.8,122.7,1533.8,122.7z M1696.4,135l-6-3.6 l-1.4,2.2l3.5,1.6L1696.4,135z M1084,228.9l-0.6-1.5l0.2-1.7l-2.2-0.9l-5-1.1l-6.3,2l-0.7,2.6l5.9,0.7L1084,228.9z M1673.7,250.7 l-7.2-6.2l-5.1-6l-6.8-5.8l-4.9-4l-1.3,0.8l4.4,2.8l-1.9,2.8l6.8,8.3l7.8,6l6.4,8.3l2.4,4.6l5.5,6.8l3.8,6l4.6,5.2l-0.1-4.8l6.5,3.8 l-3-4.4l-9.5-6.3l-3.7-9l8.9,2L1673.7,250.7L1673.7,250.7z\"},RW:{d:\"M1147.6,579.4l-3.3,1.9l-1.4-0.6l-1.6,1.8l-0.2,3.8l-0.8,0.4l-0.6,3.5l3.5,0.5l1.7-3.6l3,0.4l0,0l1.6-0.8l0.4-3.7 L1147.6,579.4L1147.6,579.4z\"},KN:{d:\"M629.9,463.2v-0.3l-0.2-0.2h-0.3v0.5l0.2,0.2L629.9,463.2z M629.4,462.5l-0.1-0.2l-0.1-0.1l-0.2-0.4l-0.4-0.4 l-0.2,0.1l-0.1,0.2v0.1l0,0l0.3,0.3l0.4,0.1l0.2,0.4L629.4,462.5L629.4,462.5z\"},LC:{d:\"M637.4,484.2l0.1-1.2l-0.1-0.5l-0.2,0.1l-0.3,0.4l-0.4,0.6l-0.1,0.3v0.6l0.6,0.4L637.4,484.2L637.4,484.2z\"},VC:{d:\"M634.5,491.4L634.5,491.4v-0.1h0.1v-0.1l0,0v-0.1h-0.1v0.1l0,0v0.1h-0.1L634.5,491.4L634.5,491.4L634.5,491.4 L634.5,491.4z M635.2,489.5l0.1-0.2l0.1-0.1l0,0l0,0l-0.1-0.1l0,0v0.1l-0.2,0.1l0,0v0.1l0,0v0.1H635h-0.1l0,0h0.1l0,0l0.1,0.1l0,0 l0,0l0,0L635.2,489.5L635.2,489.5z M635.5,488.4l0.3-0.2l0.1-0.6l-0.1-0.4h-0.2l-0.3,0.1l-0.2,0.3l-0.1,0.5L635.5,488.4L635.5,488.4 L635.5,488.4z\"},SM:{d:\"M1040.3,293.5l-0.7,0.1l-0.2-0.9l0.9-0.3L1040.3,293.5z\"},ST:{d:\"M1014.1,571.4l0.5-0.8v-0.5l-0.3-0.5h-0.4l-0.5,0.4l-0.3,0.4v0.3l0.1,0.7l0.1,0.3l0.3,0.2L1014.1,571.4 L1014.1,571.4z M1018.4,562.2l0.2-0.4v-0.2l-0.1-0.1l-0.1-0.1l-0.2,0.1l-0.3,0.5l0.1,0.2l0.2,0.2L1018.4,562.2L1018.4,562.2z\"},SA:{d:\"M1228.7,387l-10.2-0.5l-16.7-12.7l-8.5-4.5l-6.7-1.7l-0.9,1l-10.4,3.1l6.1,6.4l-1.7,1l-0.7,2.2l-4,0.8l-1.1,2.3 l-2.1,2l-6.1-1l-0.5,2.5v2.2l-0.6,3.5h2.7l3.2,4.4l3.7,5.1l2.5,4.7l1.7,1.5l1.7,3.3l-0.2,1.4l2.1,3.7l3,1.3l2.8,2.5l3.6,7v3.8 l0.9,4.4l4,6.1l2.5,1l4.1,4.4l1.9,5.2l3.2,5.3l3,2.3l0.6,2.5l1.8,1.9l0.9,2.8l2.3-2.1l-0.7-2.7l1.2-3.1l2.4,1.7l1.5-0.6l6.4-0.2 l1,0.7l5.4,0.6l2.1-0.3l1.6,2.1l2.5-1l3.5-6.7l5-2.9l15.7-2.4l16.1-6.4l2.6-12.7l-2.9-4.5l-1,1.3l-16.8-3.2l-2.6-6.4l-0.4-1.5 l-1.2-2.4l-1.5,0.4l-1.8-1.2l-1-1.6l-0.9-2.1l-1.7-1.8l-1-2.1l0.4-2.1l-0.6-2.7l-4-2.6l-1.2-2.3l-2.9-1.4l-2.7-5.5l-3.8,0.2 l-1.7-3.1L1228.7,387L1228.7,387z\"},SN:{d:\"M908.9,479.2l-3.6-4.4l-3.2-4.7l-3.7-1.7l-2.6-1.8h-3.1l-2.8,1.4l-2.7-0.5l-2,2l-1.3,3.3l-2.8,4.4l-2.5,1.2l2.7,2.3 l2.2,5l6.1-0.2l1.3-1.5l1.8-0.1l2.1,1.5l1.8,0.1l1.8-1.1l1.1,1.8l-2.4,1.5l-2.4-0.1l-2.4-1.4l-2.1,1.5h-1l-1.4,0.9l-5-0.1l0.8,4.9 l3-1.1l1.8,0.2l1.5-0.7l10.3,0.3l2.7,0.1l4,1.5l1.3-0.1l0.4-0.7l3,0.5l0.8-0.4l0.3-2l-0.4-2.4l-2.1-1.8l-1.1-3.7L908.9,479.2 L908.9,479.2z\"},RS:{d:\"M1084.8,285.2l-3.2-1.5l-0.8-1.9l-2.9-2.5l-3.2-0.2l-3.7,1.6l0,0l1.5,2.4l1.7,1.8l-1.7,2.3l0,0h1.8l-1,2.7l2.7,2.3 l-0.5,2.9l-1.2,0.3l1.5,1.1l0.8,0.8l1.8,0.7l2,1.2l-0.4,0.6l1.2-0.5l0.5-2l0.9-0.4l0.8,0.9l1,0.4l0.8,1l0.8,0.3l1.1,1.1h0.8 l-0.5,1.5l-0.5,0.7l0.2,0.5l1.7-0.4l2.4-0.1l0.7-0.9l-0.6-0.7l0.7-2l1.7-1.9l-2.8-2.6l-0.7-2.3l1.1-1.4l-1-1l1.1-1.1l-1.4-0.7 l-1.4,1.3l-3.1-1.8L1084.8,285.2L1084.8,285.2z\"},SC:{d:\"M1288.5,602l-0.5-0.8l-0.4,0.3l0.2,0.3l0.3,0.2l0.1,0.4l0.3,0.2V602L1288.5,602z\"},SL:{d:\"M919.4,518.7l-1.5,0.3v-2.3L917,515l0.2-1.8l-1.2-2.7l-1.5-2.3H910l-1.3,1.2l-1.5,0.2l-1,1.4l-0.7,1.7l-3,2.8 l0.7,4.7l0.9,2.3l2.9,3.5l4.1,2.5l1.5,0.5l1.3-2l0.3-1.9l2.6-3.4L919.4,518.7L919.4,518.7z\"},SG:{d:\"M1561,563.7l0.1-0.2l-0.2-0.2l-0.3-0.1l-0.5-0.2l-0.6,0.1l-0.3,0.6l0.9,0.4L1561,563.7L1561,563.7z\"},SX:{d:\"M627.1,457.2L627.1,457.2l0.2,0.2l0.3,0.1l0.1-0.1v-0.2H627.1z\"},SK:{d:\"M1087.4,260.9l-4.9-2.3l-3.4,0.8l-2.4-0.6l-2.8,1.3l-2.7-2.2l-1.9,0.9l-0.3-0.4h-1.5l-0.6,1.1l-1.1,0.3l-0.2,1.4 l-0.9,0.3l-0.1,0.6l-1.6,0.6l-2.2-0.1l-0.6,1.4l-0.3,0.8l0.7,2.1l2.6,1.6l1.9,0.7l4.1-0.8l0.3-1.2l1.9-0.2l2.3-1l0.6,0.4l2.2-0.7 l1-1.5l1.6-0.4l5.5,1.9l1-0.6l0.7-2.5L1087.4,260.9L1087.4,260.9z\"},SI:{d:\"M1059.4,277l-1.2-2.1l-0.8-0.1l-0.9,1.1l-4.3,0.1l-2.4,1.4l-4.2-0.4l-0.3,3l1.4,2.7l-1.1,0.5l3.5,0.2l0.8-1l1.8,1 l2,0.1l-0.2-1.7l1.7-0.6l0.3-2.5L1059.4,277L1059.4,277z\"},SB:{d:\"M1909.1,646.4l-0.2-0.2l-0.1-0.4h-0.3l-0.3,0.1l0.2,0.6h0.2L1909.1,646.4L1909.1,646.4z M1873.5,647.2l-0.1-0.2 l-0.5-0.4l-1.9-1.3l-0.4-0.1l-0.1,0.1l-0.1,0.3l0.1,0.2l0.5,0.1v0.1l0.3,0.2l0.7,0.2l0.4,0.3l0.1,0.5l0.3,0.1l0.3,0.1L1873.5,647.2 L1873.5,647.2z M1905.5,640.6L1905.5,640.6l0.2-0.4l-0.2-0.1l-0.5-0.1l-0.7,0.1l-0.3,0.2l-0.2,0.3h-0.2v0.2l0.1,0.4l0.2-0.1l0.2,0.1 l0.5-0.5h0.3h0.1L1905.5,640.6L1905.5,640.6z M1881.1,638.3l-0.1-0.2l-0.2-0.1l-0.9-0.7l-0.5-0.2h-0.5l-0.1,0.5v0.3h0.6l0.4,0.2v0.6 l0.2,0.2v0.5l1.2,0.9l0.7,0.4l0.7,0.1l0.4,0.2l0.5-0.1l0.5,0.2l0.4-0.1l-0.4-0.3v-0.4l-0.5-1.3l-0.3-0.3l-0.5,0.1l-0.5-0.2h-0.4 L1881.1,638.3L1881.1,638.3z M1880.7,633.4l-0.6-1.6l-0.2-0.1l0.1,0.6l0.1,0.4l-0.1,0.5l-0.1,0.6l0.2,0.2l0.2-0.2l0.4,0.5v-0.2 V633.4z M1870.9,631.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l-0.1,0.7v0.4l0.3,0.7l0.3,0.5l0.3,0.3l0.2,0.2l0.9,0.1l1.7,0.1l0.9,0.4l0.9,0.2 l0.4-0.1l0.5-0.2l0.1-0.1l-0.1-0.6l-0.2-0.3l-0.4-0.2l-0.2-0.6l-0.5-0.4l-0.9-0.7h-1.6l-0.6,0.1L1870.9,631.2L1870.9,631.2z M1873.5,629.4l-0.5,0.2v0.3l0.4,0.1l0.4,0.2l0.1,0.3l0,0l0.2-0.1l0.4,0.2l0.2-0.3l-0.4-0.5l-0.4-0.3h-0.1L1873.5,629.4 L1873.5,629.4z M1867.9,630.2l0.3-0.2v-0.4h-0.3l-0.1-0.2h-0.2l-0.3,0.2l-0.2,0.3l0.1,0.2h0.4L1867.9,630.2L1867.9,630.2 L1867.9,630.2z M1859.5,627.9l-0.1-0.2l-0.3-0.2h-0.2l-0.5,0.1l0.1,0.1l0.6,0.3l0.3,0.1L1859.5,627.9L1859.5,627.9z M1862.6,628.3 l0.3-0.2l-0.1-0.2l-0.1-0.5l-0.4,0.7l0.1,0.2H1862.6z M1862.1,627.4v-0.2V627l-0.2-0.1l0.4-0.3l-0.1-0.1l-0.6-0.2l-0.2,0.2l-0.2,0.1 l-0.1,0.1l-0.1,0.1l-0.1,0.5l0.2,0.4l0.4,0.2L1862.1,627.4L1862.1,627.4z M1858.1,627.6l-0.3-0.4l0.1-0.5l0.2-0.1l0.2-0.5l-0.1-0.4 l-0.2,0.1l-0.7,0.6l-0.1,0.3l0.6,0.8L1858.1,627.6L1858.1,627.6L1858.1,627.6z M1871.1,626.3l-0.2-0.4v-0.2l-0.3-0.2l-0.2,0.1 l-0.1,0.3l0.1,0.2l0.4,0.3L1871.1,626.3L1871.1,626.3z M1877.1,625.1h-0.2l-0.1,0.1h-0.2h-0.3l-0.1,0.2l0.6,1.1l-0.3,0.5l0.4,2.2 l0.4,1.2l0.8,0.8v0.2l0.8,0.5l0.6,1.3l0.2,0.1l0.1-0.2v-0.6l-0.5-1.1l0.1-0.8l-0.2-0.3V630l-0.2-0.8l-0.6-0.7l-0.3-0.1l-0.2-0.3 l0.2-0.6l0.2-0.2l0.1-0.3L1877.1,625.1L1877.1,625.1z M1860.5,624.6l-0.6-0.2l-0.2-0.3v-1l-0.6-0.3l-0.3,0.2l-0.6,0.7l-0.2,0.4 l-0.5,0.3l-0.1,0.3v0.4l0.4,0.1l0.3-0.4l0.9-0.1l0.3,0.1v0.4l0.1,0.7l0.3,0.3l0.5,0.2l0.4,0.6l0.1-0.3h0.2l0.2-0.4l-0.3-1.2 L1860.5,624.6L1860.5,624.6z M1854,624.2l0.1-0.5l-0.1-0.9l-0.2,0.1v0.2l-0.1,0.4L1854,624.2L1854,624.2z M1857.2,623.8l0.2-0.2 v-0.4v-0.5l-0.2-0.4l-0.2-0.2l-0.5,0.1l-0.4,0.5v0.5l0.4,0.6L1857.2,623.8L1857.2,623.8L1857.2,623.8z M1854.6,622.6l0.2-0.3 l0.5-0.7l0.1-0.3l-0.5-0.2l-0.4-0.5l-0.4-0.2l-0.3,0.4v0.4l0.5,0.6l-0.1,0.4l0.2,0.1l0.1,0.4L1854.6,622.6L1854.6,622.6z M1872.1,626.5l-0.1-0.5l-0.3-0.4l0.4-0.5l-2.2-1.9l-0.3-0.2l-0.4-0.1l-0.5-0.4l-0.5-0.1l-0.5-0.4l-0.2-0.3l-0.6-0.4l-0.6-0.8 l-1.5-0.3l0.1,0.2l0.4,0.4l0.1,0.7l0.5,0.4l0.5,0.6l0.2,0.1l0.2,0.2l0.4,0.5l0.8,0.4l0.8,0.6l0.3,0.1l0.3,0.3l1.5,0.7l0.5,0.7 L1872.1,626.5L1872.1,626.5L1872.1,626.5z M1850.3,617.3l0.2-0.3l-0.7-0.5l-0.2,0.3l-0.2,0.5l0.4,0.2L1850.3,617.3L1850.3,617.3z M1859.4,618.8L1859.4,618.8l-0.4-0.1l-0.4-0.2l-0.7-0.8l-0.2-0.3l-0.2-1l-0.4-0.4l-1.4-0.8l-0.8-0.8l-0.7-0.2l-0.2,0.2v0.5l0.2,0.3 l1,0.9l1.1,1.7l1,1l0.8,0.1h0.4v0.1l0.1,0.2l0.5,0.2l0.5-0.4L1859.4,618.8L1859.4,618.8z\"},SO:{d:\"M1223.4,505.7l-2.6-2.7l-1.2-2.6l-1.8-1.2l-2,3.4l-1.1,2.3l2.2,3.5l2.1,3.1l2.2,2.2l18.5,7.6l4.8-0.1l-15.4,19.1 l-7.4,0.3l-4.9,4.5l-3.6,0.1l-1.5,2l-4.8,7.2l0.2,23.2l3.3,5.3l1.3-1.5l1.3-3.4l6.1-7.7l5.3-4.8l8.3-6.4l5.6-5.1l6.4-8.7l4.7-7.1 l4.6-9.3l3.2-8.2l2.5-7.1l1.3-6.8l1.1-2.3l-0.2-3.4l0.4-3.7l-0.2-1.7h-2.1l-2.6,2.2l-2.9,0.6l-2.5,0.9l-1.8,0.2l0,0l-3.2,0.2 l-1.9,1.1l-2.8,0.5l-4.8,1.9l-6.1,0.8l-5.2,1.6L1223.4,505.7L1223.4,505.7z\"},ZA:{d:\"M1148.2,713.7l-2.9-0.6l-1.9,0.8l-2.6-1.1l-2.2-0.1l-8,4.7l-5.2,4.7l-2,4.3l-1.7,2.4l-3,0.5l-1.2,3l-0.6,2l-3.6,1.5 l-4.4-0.3l-2.5-1.8l-2.3-0.8l-2.7,1.5l-1.5,3.1l-2.7,1.9l-2.8,2.8l-4,0.7l-1.1-2.3l0.7-3.8l-3-6.1l-1.4-1l-1.1,23.6l-5,3.2l-2.9,0.5 l-3.3-1.2l-2.4-0.5l-0.8-2.7l-2.1-1.8l-2.7,3.2l3.5,8.2v0.1l2.5,5.3l3.2,6l-0.2,4.8l-1.7,1.2l1.4,4.2l-0.2,3.8l0.6,1.7l0.3-0.9 l2.1,2.9l1.8,0.1l2.1,2.3l2.4-0.2l3.5-2.4l4.6-1l5.6-2.5l2.2,0.3l3.3-0.8l5.7,1.2l2.7-1.2l3.2,1l0.8-1.8l2.7-0.3l5.8-2.5l4.3-2.9 l4.1-3.8l6.7-6.5l3.4-4.6l1.8-3.2l2.5-3.3l1.2-0.9l3.9-3.2l1.6-2.9l1.1-5.2l1.7-4.7h-4.1l-1.3,2.8l-3.3,0.7l-3-3.5l0.1-2.2l1.6-2.4 l0.7-1.8l1.6-0.5l2.7,1.2l-0.4-2.3l1.4-7.1l-1.1-4.5L1148.2,713.7L1148.2,713.7z M1128.1,766.5l-2,0.6l-3.7-4.9l3.2-4l3.1-2.5 l2.6-1.3l2.3,2l1.7,1.9l-1.9,3.1l-1.1,2.1l-3.1,1L1128.1,766.5L1128.1,766.5z\"},KR:{d:\"M1637.3,331.7l6.2,5.5l-3.4,1.1l5.2,6.8l1.1,4.8l2.1,3.5l4.5-0.5l3.2-2.7l4.2-1.2l0.5-3.6l-3.4-7.5l-3.3-4.2 l-8.2-7.6l0.1,1.6l-2.1,0.4l-3.5,0.3l-0.7,2.9l-2.4-0.2L1637.3,331.7L1637.3,331.7z\"},SS:{d:\"M1166,508.7l-0.7-2.2l-2.9-2.5l-0.8-4.6l0.5-4.7l-2.6-0.5l-0.3,1.5l-3.4,0.3l1.4,1.8l0.6,3.9l-3,3.5l-2.7,4.5 l-2.8,0.7l-4.8-3.7l-2.1,1.3l-0.5,1.9l-2.9,1.2l-0.2,1.3h-5.5l-0.8-1.3l-4.1-0.3l-2,1.1l-1.5-0.5l-3-3.7l-1-1.8l-4,0.9l-1.5,2.9 l-1.3,5.7l-1.9,1.2l-1.7,0.7l3.8,2.5l3.1,2.6l0.1,2l3.8,3.4l2.4,2.7l1.5,3.8l4.2,2.5l0.9,2.1l3.5,5.2l2.5,0.8l1.5-1.1l2.6,0.4 l3.1-1.3l1.4,2.7l5,4.2l0,0l2.3-1.7l3.5,1.4l4.5-1.5l4,0.1l3.4-3l3.4-3.8l3.8-4.2l-3.5-6.9l-2.6-1.5l-1-2.5l-2.9-3.1l-3.4-0.5 l1.8-3.6l3-0.1l0.8-2l-0.2-5l-0.8-0.1L1166,508.7L1166,508.7z\"},ES:{d:\"M888.3,390.4l1-0.1v0.3l-1.2,1l-0.5,1.4l-0.4,0.6l-0.3,0.2l-0.6,0.2l-0.7-0.9l-0.4-1l-0.2-0.3l0.4-0.2h0.5l1-0.1 l0.3-0.1L888.3,390.4z M883.3,392.7h-0.2l-0.2,0.2l-0.2,0.4l0.3,0.5l0.2,0.1h0.2l0.5-0.4v-0.2l-0.1-0.3L883.3,392.7z M880.6,389 l-0.3-0.4h-0.7l-0.4,0.6l0.6,1.2l0.1,0.5h0.1l0.5-0.5l0.1-0.3l-0.1-0.5l0.2-0.2L880.6,389z M878.7,395.5h-0.6l0.1,0.2l0.1,0.2 l0.7,0.4l0.6-1.1l-0.2-0.2L878.7,395.5z M901.1,389.3l-0.3,0.2l-0.1,0.6l-0.7,1.3l-0.5,1.2l-0.7,0.6l-0.7,0.2l0.1,0.1l0.7,0.1 l0.8-0.7l1.5-0.5l0.3-1l0.3-1.1v-0.7l-0.3-0.3L901.1,389.3L901.1,389.3z M893.1,393.1L893.1,393.1L893.1,393.1h-0.2l-1.3-0.1 l-0.2,0.6l-0.5,0.4v0.7l0.5,0.7l0.3,0.1l0.5,0.1l0.7-0.4l0.2-0.4l0.1-0.8l-0.1-0.4V393.1z M994.3,318.7l-0.3-0.1l-0.5,0.2l-0.5-0.2 l0.1-0.3l0.1-0.2l0.1-0.1l-0.2-0.2v-0.1l0.2-0.2l-0.2-0.1l-1.3,0.4l-0.7,0.4l-2.1,1.5v0.3l0.1,0.2h0.4l0.2,0.4l0.4-0.4l0.3-0.1 l0.3,0.1l0.3,0.2l0.1,0.6l0.1,0.2l0.6,0.1l0.9,0.4l0.4-0.2l0.5-0.3l0.2-0.6l0.3-0.5l0.3-0.5l0.3-0.4l-0.1-0.4L994.3,318.7z M998.6,317.1l-0.9-0.3l-1,0.1l-0.1,0.1v0.4l0.1,0.1l0.6,0.1l1.6,0.7h0.1l0.1-0.4v-0.1L998.6,317.1z M992,301.9l-6,0.8l-1.3-0.7 l-0.2,0.1h-0.4l-0.1-0.2v-0.2l-3.7-1.8l-1.9,1.3l-9.4-2.8l-2-2.4l-8.2-0.2l-4.2,0.3l-5.4-1h-6.8l-6.2-1.1l-7.4,4.5l2,2.6l-0.4,4.4 l1.9-1.6l2.1-0.9l1.2,3.1h3l0.9-0.8l3,0.2l1.3,3.1l-2.4,1.7l-0.2,4.9l-0.9,0.9l-0.3,3l-2.2,0.5l2,3.8l-1.6,4.3l1.8,1.9l-0.8,1.7 l-2,2.5l0.4,2.1l4.8,1l1.4,3.7l2,2.2l2.5,0.6l2.1-2.5l3.3-2.3l5,0.1h6.7l3.8-5l3.9-1.3l1.2-4.2l3-2.9l-2-3.7l2-5.1l3.1-3.5l0.5-2.1 l6.6-1.3l4.8-4.2L992,301.9z M903.7,386.3l-0.2,0.4l-0.6,0.2l-0.8,0.4l-0.2,0.3l-0.2,0.9l0.4,0.1l0.3-0.4l0.9-0.3l0.5-0.3l0.1-0.9 l0.2-0.3l-0.2-0.3L903.7,386.3z M983.7,323.1l-0.2,0.3v0.3l-0.3,0.1l-0.1,0.4l0.1,0.2l0.8,0.1l0.2-0.4h0.3l0.6-0.7v-0.3l-0.3-0.2 L983.7,323.1z M984.2,325.1l-0.1,0.2l-0.1,0.2v0.2h0.5l0.4,0.1l0.1-0.1v-0.2h-0.5L984.2,325.1z\"},LK:{d:\"M1432.2,532.7l2.3-1.8l0.6-6.6l-3-6.6l-2.9-4.5l-4.1-3.5l-1.9,10.3l1.4,9.1l2.8,5.1L1432.2,532.7L1432.2,532.7z\"},SD:{d:\"M1180.8,468.5l0.4-4.2l1.6-2l4-1l2.6-3.6l-3.1-2.4l-2.2-1.6l-2.5-7.6l-1.1-6.5l1.1-1.2l-2.1-6.2h-21.8h-21.4h-22.1 l0.5,12.7h-6.3v2.7l1.1,25.2l-4.8-0.4l-2.4,4.7l-1.4,3.9l1.2,1.5l-1.8,1.9l0.7,2.7l-1.4,2.6l-0.5,2.4l2-0.4l1.2,2.5l0.1,3.7l2.1,1.8 v1.6l0.7,2.7l3.3,4v2.6l-0.8,2.6l0.3,2l2,1.8l0.5,0.3l1.7-0.7l1.9-1.2l1.3-5.7l1.5-2.9l4-0.9l1,1.8l3,3.7l1.5,0.5l2-1.1l4.1,0.3 l0.8,1.3h5.5l0.2-1.3l2.9-1.2l0.5-1.9l2.1-1.3l4.8,3.7l2.8-0.7l2.7-4.5l3-3.5l-0.6-3.9l-1.4-1.8l3.4-0.3l0.3-1.5l2.6,0.5l-0.5,4.7 l0.8,4.6l2.9,2.5l0.7,2.2v3.1l0.8,0.1v-0.7l1.4-6.7l2.6-1.8l0.5-2.6l2.3-4.8l3.2-3.2l2.1-6.2l0.7-5.5l-0.7-2.5L1180.8,468.5 L1180.8,468.5z\"},SR:{d:\"M668,533.8l-4.6,0.5l-0.6,1.1l-6.7-1.2l-1,5.7l-3.5,1.6l0.3,1.5l-1.1,3.3l2.4,4.6l1.8,0.1l0.7,3.5l3.3,5.6l3.1,0.5 l0.5-1.3l-0.9-1.3l0.5-1.8l2.3,0.6l2.7-0.7l3.2,1.4l1.4-2.7l0.6-2.9l1-2.8l-2.1-3.7l-0.4-4.4l3.1-5.5L668,533.8L668,533.8z\"},SZ:{d:\"M1150.5,736.6l-2.7-1.2l-1.6,0.5l-0.7,1.8l-1.6,2.4l-0.1,2.2l3,3.5l3.3-0.7l1.3-2.8l-0.3-2.8L1150.5,736.6 L1150.5,736.6z\"},SE:{d:\"M1077.7,161.1l-1.9-2.2l-1.7-8.4l-7.2-3.7l-5.9-2.7l-2.5,0.3v3.5l-7.9-0.9l-0.6,3.1l-4-0.1l-2.2,3.9l-3.4,6.1 l-5.7,7.9l1.8,1.9l-1.3,2.2l-4.3-0.1l-2.3,5.3l1,7.6l3.1,2.9l-0.9,6.9l-3.4,4l-1.7,3.3l4.2,8.4l4.4,6.7l2,5.7l5.3-0.3l2.2-4.7 l5.7,0.5l2-5.5l0.6-10l4.6-1.3l3.3-6.6l-4.8-3.3l-3.6-4l2.1-8.1l7.7-4.9l6.1-4.5l-1.2-3.5l3.4-3.9L1077.7,161.1L1077.7,161.1z\"},CH:{d:\"M1024.3,270.6l-5.4-1.9l-1,1.4h-4.2l-1.3,1l-2.3-0.6l0.2,1.6l-3.5,3.5v2.8l2.4-0.9l1.8,2.7l2.2,1.3l2.4-0.3l2.7-2.1 l0.9,1l2.4-0.2l0.9-2.5l3.8,0.8l2.1-1.1l0.3-2.5l-2.6-0.2l-2.3-1.1l0.7-1.6L1024.3,270.6L1024.3,270.6z\"},SY:{d:\"M1183.5,359.9l11-6.7l0.9-7.8l-1.2-4.7l2.7-1.6l2.1-4.1l-5.9,1.1l-2.8-0.2l-5.7,2.5h-4.3l-3-1.2l-5.5,1.8l-1.9-1.3 l0.1,3.6l-1.2,1.5l-1.2,1.4l-1,2.6l1.1,5l2.4,0.3l1.2,2.5l-2.6,2.4l-0.9,3.5l0.3,2.6l-0.6,1h0.1l6.3,2.5L1183.5,359.9L1183.5,359.9z \"},TW:{d:\"M1642.3,427.2l1.2-10.2l0.1-3.9l-2.9-1.9l-3.3,4.8l-1.9,6.3l1.5,4.7l4,5.4L1642.3,427.2L1642.3,427.2z\"},TJ:{d:\"M1344.1,315.7l-2.1,0.2l-1.3-1.8l0.2-2.9l-6.4,1.5l-0.5,4l-1.5,3.5l-4.4-0.3l-0.6,2.8l4.2,1.6l2.4,4.7l-1.3,6.6 l1.8,0.8l3.3-2.1l2.1,1.3l0.9-3l3.2,0.1l0.6-0.9l-0.2-2.6l1.7-2.3l3.2,1.5v2l1.6,0.3l1,5.4l2.6,2.1l1.5-1.3l2.1-0.7l2.5-2.9l3.8,0.5 h5.4l-1.8-3.7l-0.6-2.5l-3.5-1.4l-1.6,0.6l-3-5.9l-9.5,0.9l-7.1-2l-5.4,0.5l-0.6-3.7l5.9,1.1L1344.1,315.7L1344.1,315.7z\"},TZ:{d:\"M1149.6,578.6l-2,0.8l2.3,3.6l-0.4,3.7l-1.6,0.8l0,0l0.3,2.5l1.2,1.5v2l-1.4,1.4l-2.2,3.3l-2.1,2.3l-0.6,0.1 l-0.3,2.7l1.1,0.9l-0.2,2.7l1,2.6l-1.3,2.4l4.5,4.3l0.3,3.9l2.7,6.5l0,0l0.3,0.2l2.2,1.1l3.5,1.1l3.2,1.9l5.4,1.2l1.1,1.7l0,0 l0.4-1.2l2.8,3.4l0.3,6.7l1.8,2.4v0.1l2.1-0.3l6.7,1.8l1.4-0.8l3.9-0.1l2.1-1.9l3.3,0.1l6.2-2.5l4.6-3.7l0,0l-2-1.4l-2.2-6.3 l-1.8-3.9l0.4-3.1l-0.3-1.9l1.7-3.9l-0.2-1.6l-3.5-2.3l-0.3-3.6l2.8-7.9l-8-6.3l-0.4-3.7l-20.2-13l0,0l-2.8,2.8l-1.9,2.9l2.2,2.2 l-3.2,1.6l-0.7-0.8l-3.2,0.4l-2.5,1.4l-1.6-2.4l1.1-4.5l0.2-3.8l0,0l0,0L1149.6,578.6L1149.6,578.6z\"},TH:{d:\"M1562.7,481.4l1.5-2.9l-0.5-5.4l-5.2-5.5l-1.3-6.3l-4.9-5.2l-4.3-0.4l-0.8,2.2l-3.2,0.2l-1.8-1.2l-5.3,3.8l-1-5.7 l0.4-6.7l-3.8-0.3l-0.9-3.8l-2.6-1.9l-3,1.4l-2.8,2.8l-3.9,0.3l-1.5,6.9l-2.2,1.1l3.5,5.6l4.1,4.6l2.9,4.2l-1.4,5.6l-1.7,1.1 l1.7,3.2l4.2,5.1l1,3.5l0.2,3l2.8,5.8l-2.6,5.9l-2.2,6.6l-1.3,6.1l-0.3,3.9l1.2,3.6l0.7-3.8l2.9,3.1l3.2,3.5l1.1,3.2l2.4,2.4 l0.9-1.1l4.7,2.8l0.6,3.3l3.7-0.8l1.7-2.6l-3.1-3.3l-3.4-0.8l-3.3-3.6l-1.4-5.5l-2.6-5.8l-3.7-0.2l-0.7-4.6l1.4-5.6l2.2-9.3l-0.2-7 l4.9-0.1l-0.3,5l4.7-0.1l5.3,2.9l-2.1-7.7l3-5.2l7.1-1.3L1562.7,481.4L1562.7,481.4z\"},TL:{d:\"M1676.8,631.9l4.9-1.8l6-2.8l2.2-1.7l-2-0.8l-1.8,0.8l-4,0.2l-4.9,1.4l-0.8,1.5l0.5,1.3L1676.8,631.9L1676.8,631.9z \"},TG:{d:\"M981.7,502.2l-4.9-0.1l-0.4,1.9l2.4,3.3l-0.1,4.6l0.6,5.1l1.4,2.3l-1.2,5.7l0.4,3.2l1.5,4l1.2,2.2l4.6-1.3l-1.4-4.4 l0.2-14.6l-1.1-1.3l-0.2-3.1l-2-2.3l-1.7-1.9L981.7,502.2L981.7,502.2z\"},TO:{d:\"M13.3,707.7L13.3,707.7l-0.2,0.3v0.2l0.4,0.4L13.3,707.7z M11.7,706.8h-0.2H11.7l-0.4-0.3h-0.4l-0.2-0.1v-0.2 l-0.2,0.3l0.2,0.3l0.9,0.4l0.3,0.2l0.2-0.6v-0.2l-0.3,0.1v0.1H11.7z M14.2,690.8l0.1-0.2v-0.2l-0.3-0.1h-0.1l-0.3,0.5l0.1,0.1 l0.3,0.2h0.1L14.2,690.8z\"},TT:{d:\"M635.4,507.7l0.1-0.2v-0.6l0.2-0.4l-0.2-0.4l-0.1-0.6l0.1-0.5v-0.7l0.2-0.3l0.5-0.8h-0.9l-0.6,0.2l-1.1,0.1 l-0.5,0.2l-0.7,0.1L632,504l0.1,0.1l0.5,0.2l0.2,0.2l0.1,0.2l0.1,0.4l-0.3,1.7l-0.1,0.1L632,507l-0.2,0.3l-1.4,0.8l0.8-0.1l0.9,0.1 l2.4-0.1L635.4,507.7L635.4,507.7z M637.2,501l1.2-0.5l0.1-0.4h-0.2l-0.8,0.3l-0.6,0.5v0.2L637.2,501z\"},TN:{d:\"M1038,361.4l-2-1l-1.5-3l-2.8-0.1l-1.1-3.5l3.4-3.2l0.5-5.6l-1.9-1.6l-0.1-3l2.5-3.2l-0.4-1.3l-4.4,2.4l0.1-3.3 l-3.7-0.7l-5.6,2.6l-1,3.3l1,6.2l-1.1,5.3l-3.2,3.6l0.6,4.8l4.5,3.8v1.5l3.4,2.6l2.6,11.3l2.6-1.4l0.4-2.7l-0.7-2.6l3.7-2.5l1.5-2 l2.6-1.8L1038,361.4L1038,361.4z\"},TR:{d:\"M1166.6,308.9l-9.7-4.4l-8.5,0.2l-5.7,1.7l-5.6,4l-9.9-0.8l-1.6,4.8l-7.9,0.2l-5.1,6.1l3.6,3l-2,5l4.2,3.6l3.7,6.4 l5.8-0.1l5.4,3.5l3.6-0.8l0.9-2.7l5.7,0.2l4.6,3.5l8-0.7l3.1-3.7l4.6,1.5l3.2-0.6l-1.7,2.4l2.3,3l1.2-1.4l1.2-1.5l-0.1-3.6l1.9,1.3 l5.5-1.8l3,1.2h4.3l5.7-2.5l2.8,0.2l5.9-1.1l2.1-1l6.2,0.9l2.1,1.6l2.3-1.1l0,0l-3.7-5.2l0.7-2l-2.9-7.3l3.3-1.8l-2.4-1.9l-4.2-1.5 v-3.1l-1.3-2.2l-5.6-3l-5.4,0.3l-5.5,3.2l-4.5-0.6l-5.8,1L1166.6,308.9L1166.6,308.9z M1117,312.9l2-1.9l6.1-0.4l0.7-1.5l-4.7-2 l-0.9-2.4l-4.5-0.8l-5,2l2.7,1.6l-1.2,3.9l-1.1,0.7l0.1,1.3l1.9,2.9L1117,312.9L1117,312.9z\"},TM:{d:\"M1325.6,334.2l-0.8-4l-7.7-2.7l-6.2-3.2l-4.2-3l-7-4.4l-4.3-6.4l-2-1.2l-5.5,0.3l-2.3-1.3l-1.9-4.9l-7.8-3.3 l-3.3,3.6l-3.8,2.2l1.6,3.1l-5.8,0.1l-2.5,0.3l-4.9-4.9l-3.8-1.7l-5.5,1.3l-1.8,2l2.5,4l-0.5-4.5l3.7-1.6l2.4,3.6l4.6,3.7l-4,2 l-5.3-1.5l0.1,5.2l3.5,0.4l-0.4,4.4l4.5,2.1l0.7,6.8l1.8,4.5l4.4-1.2l3-3.7l3.5,0.2l2.1-1.2l3.8,0.6l6.5,3.3l4.3,0.7l7.3,5.7 l3.9,0.2l1.6,5.5l5.9,2.4l3.9-0.8l0.4-3l4-0.9l2.5-2l-0.1-5.2l4.1-1.2l0.3-2.3l2.9,1.7L1325.6,334.2L1325.6,334.2z\"},TC:{d:\"M578.7,433.1l-0.1,0.4v0.2l0.2,0.1l0.6-0.1l0.1-0.1l0.2-0.1v-0.1l-0.4,0.1L578.7,433.1z M582.3,433.7l0.2-0.2 l-0.2-0.2l-0.7-0.2l-0.2,0.1v0.3h0.6L582.3,433.7L582.3,433.7L582.3,433.7z M581.2,433.2l-0.1-0.1l-0.1-0.6h-0.5v0.2l0.1,0.2h0.1 l0.1,0.2l0.3,0.2L581.2,433.2L581.2,433.2z\"},UG:{d:\"M1167.6,545.1l-3.4,3l-4-0.1l-4.5,1.5l-3.5-1.4l-2.3,1.7l0,0l-0.3,7.5l2.3,0.8l-1.8,2.3l-2.2,1.7l-2.1,3.3l-1.2,3 l-0.3,5.1l-1.3,2.4l-0.1,4.8l1.4,0.6l3.3-1.9l2-0.8l6.2,0.1l0,0l-0.3-2.5l2.6-3.7l3.5-0.9l2.4-1.5l2.9,1.2l0.3,0.5v-0.3l1.6-2.6 l2.7-4.2l2.1-4.7l-2.6-7.3l-0.7-3.2L1167.6,545.1L1167.6,545.1z\"},UA:{d:\"M1138.5,241l-4.8,0.5l-1.5-0.3l-1,1.4l-1.8-0.2l0,0l-4.1,0.3l-1.2,1.4l0.2,3.1l-2-0.6l-4.3,0.3l-1.5-1.5l-1.6,1.1 l-2-0.9l-3.8-0.1l-5.6-1.5l-5-0.5l-3.7,0.2l-2.4,1.6l-2.2,0.3l3.1,5.3l-0.3,1.8l-2.3,0.7l-3.8,5.1l1.6,2.8l-1.1-0.4l-1.1,1.7 l-0.7,2.5l2.9,1.7l0.6,1.6l1.9-1.3l3.2,0.7h3.2l2.4,1.5l1.6-0.9l3.6-0.6l1-1.5h2.1l1.1-0.9l3.2-0.6l3.9,1.9l2,0.3l2.5,1.6v2.1 l1.9,1.1l1.1,2.6l2,1.5l-0.2,1l1,0.6l-1.2,0.5l-3-0.2l-0.6-0.9l-1,0.5l0.5,1.1l-1.1,2l-0.5,2.1l-1.2,0.7l2.4,1.1l2.2-1l2.4,1.1 l3.3-4.6l1.3-3.4l4.5-0.8l0.7,2.4l8,1.5l1.7,1.4l-4.5,2.1l-0.7,1.2l5.8,1.8l-0.6,2.9l3,1.3l6.3-3.6l5.3-1.1l0.6-2.2l-5.1,0.4 l-2.7-1.5l-1-3.9l3.9-2.3l4.6-0.3l3-2l3.9-0.5l-0.4-2.8l2.2-1.7l4.7-0.5l0.3-2.1l-1.8-3.4l1.3-3.2l-0.4-1.9l-7.6-2l-2.9,0.1 l-3.6-2.9l-3.5,1l-6.6-2.2l-0.2-1.2l-2.2-2.7l-4-0.2l-0.7-1.9l0.9-1.3L1138.5,241L1138.5,241z\"},AE:{d:\"M1283.9,408.6l-1.3-2.2l-3,3.9l-3.7,4.1l-3.3,4.3l-3.3-0.2l-4.6-0.2l-4.2,1l-0.3-1.7l-1,0.3l0.4,1.5l2.6,6.4 l16.8,3.2l1-1.3l-0.1-2.6l1.4-2.6l-0.3-2.6l2.4-1.3l-1.1-0.8l0.1-4.2h2.8L1283.9,408.6L1283.9,408.6z\"},GB:{d:\"M950,227.5l-4.9-3.7l-3.9,0.3l0.8,3.2l-1.1,3.2l2.9-0.1l3.5,1.3L950,227.5z M963,203.2l-5.5,0.5l-3.6-0.4l-3.7,4.8 l-1.9,6.1l2.2,3l0.1,5.8l2.6-2.8l1.4,1.6l-1.7,2.7l1,1.6l5.7,1.1h0.1l3.1,3.8l-0.8,3.5l0,0l-7.1-0.6l-1,4l2.6,3.3l-5.1,1.9l1.3,2.4 l7.5,1l0,0l-4.3,1.3l-7.3,6.5l2.5,1.2l3.5-2.3l4.5,0.7l3.3-2.9l2.2,1.2l8.3-1.7l6.5,0.1l4.3-3.3l-1.9-3.1l2.4-1.8l0.5-3.9l-5.8-1.2 l-1.3-2.3l-2.9-6.9l-3.2-1l-4.1-7.1l-0.4-0.6l-4.8-0.4l4.2-5.3l1.3-4.9h-5l-4.7,0.8L963,203.2L963,203.2z\"},US:{d:\"M116.7,450.7l2-0.9l2.5-1.4l0.2-0.4l-0.9-2.2l-0.7-0.8l-0.8-0.6l-1.9-1.1l-0.4-0.1l-0.4,0.6v1.3l-1.2,1l-0.4,0.7 l0.4,2.3l-0.6,1.8l1.2,0.9L116.7,450.7L116.7,450.7z M116.1,440.8l0.6-0.7l-1.2-1l-1.8-0.6L113,439v0.4l0.5,0.5l0.6,1.4L116.1,440.8 L116.1,440.8z M113.1,437.4l-2.6-0.2l-0.6,0.7l2.9,0.2L113.1,437.4z M108.4,436.5l-1.1-2.1L107,434l-1.7,0.9l0.1,0.2l0.4,1.5 l1.8,0.2l0.4,0.1L108.4,436.5L108.4,436.5z M100.1,432.3l0.3-1.5l-1.3-0.1l-1,0.6l-0.4,0.5l1.6,1.1L100.1,432.3z M512.2,259.1h-1.6 l-1.3,2.4h-10.1h-16.8h-16.7h-14.8h-14.7h-14.5h-15h-4.8h-14.6h-13.9l-1.6,5.1l-2.4,5.1l-2.3,1.6l1.1-5.9l-5.8-2.1l-1.4,1.2 l-0.4,2.9l-1.8,5.4l-4.2,8.3l-4,5.6l-4,5.6l-5.4,5.8l-1.1,4.7l-2.8,5.3l-3.9,5.2l1,3.4l-1.9,5.2l1.5,5.4l1.3,2.2l-0.8,1.5l0.4,9 l2.5,6.5l-0.8,3.5l1,1l4.6,0.7l1.3,1.7l2.8,0.3l-0.1,1.9l2.2,0.7l2.1,3.7l-0.3,3.2l6.3-0.5l7-0.7l-1,1.3l7.1,3.1l10.7,4.4H391h4.3 l0.8-2.6h9.3l1.3,2.2l2.1,2l2.4,2.8l0.8,3.3l0.4,3.5l2.2,1.9l4,1.9l4.8-5l4.4-0.1l3.1,2.5l1.6,4.4l1,3.7l2.4,3.6l0.2,4.5l0.8,3 l3.9,2l3.6,1.4l2.1-0.2l-0.6-2.2l0.4-3.1l1-4.4l1.9-2.8l3.7-3.1l6-2.7l6.1-4.7l4.9-1.5l3.5-0.4l3.5,1.4l4.9-0.8l3.3,3.4l3.8,0.2 l2.4-1.2l1.7,0.9l1.3-0.8l-0.9-1.3l0.7-2.5l-0.5-1.7l2.4-1l4.2-0.4l4.7,0.7l6.2-0.8l3,1.5l2,3l0.9,0.3l6.1-2.9l1.9,1l3,5.3l0.8,3.5 l-2,4.2l0.4,2.5l1.6,4.9l2,5.5l1.8,1.4l0.4,2.8l2.6,0.8l1.7-0.8l2-3.9l0.7-2.5l0.9-4.3l-1.2-7.4l0.5-2.7l-1.5-4.5l-0.7-5.4l0.1-4.4 l1.8-4.5l3.5-3.8l3.7-3l6.9-4.1l1.3-2.2l3.3-2.3l2.8-0.4l4.4-3.8l6-1.9l4.6-4.8l0.9-6.5l0.1-2.2l-1.4-0.4l1.5-6.2l-3-2.1l3.2,1v-4.1 l1.9-2.7l-1,5.3l2,2.5l-2.9,4.4l0.4,0.2l4.4-5.1l2.4-2.5l0.6-2.5l-0.9-1.1l-0.1-3.5l1.2,1.6l1.1,0.4l-0.1,1.6l5.2-4.9l2.5-4.5 l-1.4-0.3l2.1-1.8l-0.4,0.8h3.3l7.8-1.9l-1.1-1.2l-7.9,1.2l4.8-1.8l3.1-0.3l2.4-0.3l4.1-1.1l2.4,0.1l3.8-1l1-1.7l-1.1-1.4l-0.2,2.2 L615,306l-0.6-3.3l1.1-3.3l1.4-1.3l3.9-3.7l5.9-1.8l6-2.1l6.3-3l-0.2-2l-2.1-3.5l2.8-8.5l-1.5-1.8l-3.7,1.1l-1.1-1.7l-5.5,4.7 l-3.2,4.9l-2.7,2.8l-2.5,0.9l-1.7,0.3l-1,1.6h-9.3h-7.7l-2.7,1.2l-6.7,4.2l0.2,0.9l-0.6,2.4l-4.6,2l-3.9-0.5l-4-0.2l-2.6,0.7 l-0.3,1.8l0,0l-0.1,0.6l-5.8,3.7l-4.5,1.8l-2.9,0.8l-3.7,1.7l-4,0.9l-2.5-0.3l-2.7-1.3l2.7-2.4l0,0l2-2.2l3.7-3.4l0,0l0,0l0.7-2.5 l0.5-3.5l-1.6-0.7l-4.3,2.8l-0.9-0.1l0.3-1.5l3.8-2.5l1.6-2.8l0.7-2.8l-2.7-2.4l-3.7-1.3l-1.7,2.4l-1.4,0.6l-2.2,3.1l0.4-2.1 l-2.6,1.5l-2.1,2l-2.6,3.1l-1.3,2.6l0.1,3.8l-1.8,4l-3.3,3l-1.4,0.9l-1.6,0.7h-1.8l-0.3-0.4l-0.1-3.3l0.7-1.6l0.7-1.5l0.6-3l2.5-3.5 l2.9-4.3l4.6-4.7h-0.7l-5.4,4l-0.4-0.7l2.9-2.3l4.7-4l3.7-0.5l4.4-1.3l3.7,0.7h0.1l4.7-0.5l-1.5-2.5l0,0l-1.2-0.2l0,0l0,0l-1.4-0.3 l-0.4-1.7l-5.1,0.5l-5,1.4l-2.5-2.3l-2.5-0.8l3.1-3.3l-5.3,2l-4.9,2.1l-4.6,1.5l-2.1-2.1l-5.5,1.3l0.4-0.9l4.6-2.6l4.7-2.5l5.9-2.1 l0,0l0,0l-5.3-1.6l-4.4,0.8l-3.8-1.9l-4.6-1l-3.2-0.4l-1-1L512.2,259.1L512.2,259.1z M271.6,212.2l6.9-2.8v-1.8l-2.6-0.4l-3.4,0.9 l-6.4,2.1l-2.2,2.7l0.7,1.6L271.6,212.2z M232.9,195.8l2.3-2.3l-2.9-0.5l-5.7,1l0.8,1.6l1.6,1.1L232.9,195.8L232.9,195.8z M234.1,173.5l-3.1,2.2l0.4,0.5l4.2-0.4l0.3,1.1l1.7,1.2l4.9-1.2l1.2-0.6l-3.3-0.8l-1.6-1.5l-3.4,0.6L234.1,173.5L234.1,173.5z M359,133.3l-4.4-1.1l-10.2,2.8l-3.2-0.3l-11,2.3l-4.8,0.6l-7.8,2.5l-4.8,2.6l-8.6,2.5l-7.6,0.1l-6.3,2.9l3.2,1.7l0.7,2.3l-0.8,2.7 l2.3,2.1l-1.2,3.5l-9.2,0.2l4.3-2.8h-3.4l-13.1,2.7l-9.1,2.3l1,3.3l-1.2,2.2l4.5,1.4l6.9-0.7l1.8,1.3l2.9-1.3l6.1-1.2h2.7l-5.9,2.1 l1.1,1l-2.5,2.6l-5.5,1.8l-2.5-0.5l-7,2.7l-1.8-0.9l-4.1,0.4l-5.3,3l-7.6,3.1l-5.8,3.4l0.3,2.4l-4,3.3l1.4,1.4l0.5,2.7l7.2-1.1 l0.4,2.1l-3.3,2.1l-3.6,3.5h2.8l7.2-2.3l-1.6,2.9l3.6-2.1l-0.4,3l4.8-2.2l0.4,1.1l7.2-1.8l-6.2,3.4l-5.7,4.5l-5.7,2.1l-2.3,1.2 l-10.3,3.6l-4.9,2.4l-6.5,0.7l-8.5,3.3l-6.6,1.8l-8.1,2.8l-0.4,1l10-1.7l6-2l6.9-2l6.1-1.7l2.8,0.5l8.1-2.6l4.5-2.8l10.5-3.1 l3.9-2.6l6.6-1.8l7.6-2.5l8.9-4.2l-0.2-2.9l11.1-4.1l7.4-3.9l9.2-3.2l-0.4,1.4l-6.7,1.8l-8.3,5.7l-3.2,3.5l6.4-1.3l6.1-1.9l6.5-1.3 l2.9-0.3l3.5-4.1l6.3-1.2l2.6,2.5l6,2.7l6.7-0.5l5.7,2l3.2,1.1l3.3,6.1l3.7,1.7l7.1,0.2l4.1,0.4l-2.7,5.5l1.6,4.9l-3.3,5.2l2.5,1.9 l0.6,2.2l0,0l5.1-2.9l3.1-3.7l-4.6-3.8l1.5-6.8l1.1-4.2l-1.7-2.7l-0.7-2.4l0.5-3l-6.4,1.9l-7.6,3.3l-0.2-3.9l-0.6-2.6l-2.7-1.6 l-4.2-0.1l35.4-32.4l24.3-20.2l0,0l0,0l-3.5-0.7l-4.1-1.6l-6.5,0.8l-2.2-0.7l-7.1-0.5l-6.2-1.6l-4.8,0.5l-4.9-0.9l2-1.2l-6.3-0.3 l-3.3,1L359,133.3L359,133.3z\"},VI:{d:\"M617.9,458.9l-0.7,0.2l-0.1,0.4h1.1l0.7-0.3h-0.6L617.9,458.9L617.9,458.9z M618.8,455.4l-0.5-0.1l-0.2,0.2l0,0 l0.3,0.1L618.8,455.4z M617.7,455.5l-0.2-0.2l-0.3-0.1l-0.4,0.1l0.5,0.3L617.7,455.5L617.7,455.5z\"},UY:{d:\"M692.5,787l-2.1-3.7l1.9-3l-3.8-4.3l-4.8-3.5l-6.2-4.1l-1.9,0.2l-6.2-4.9l-3.4,0.7l-0.5,5.1l-0.3,6.5l1.1,6.3 l-0.9,1.4l0.4,4.2l3.9,3.5l3.6-0.2l5.4,2.7l2.7-0.6l4.2,1.2l5.3-3.5L692.5,787L692.5,787z\"},UZ:{d:\"M1339.8,303.1l-2.5,1.2l-5.4,4.3l-0.9,4.5h-1.9l-2.3-3l-6.6-0.2l-2.6-5l-2.5-0.1l-1.5-6.2l-7.5-4.5l-8.6,0.5 l-5.7,0.9l-6.5-5.5l-4.8-2.3l-9.1-4.5l-1.1-0.5l-11.9,3.6l6.2,22.8l5.8-0.1l-1.6-3.1l3.8-2.2l3.3-3.6l7.8,3.3l1.9,4.9l2.3,1.3 l5.5-0.3l2,1.2l4.3,6.4l7,4.4l4.2,3l6.2,3.2l7.7,2.7l0.8,4h2.9l4.3,1.4l1.3-6.6l-2.4-4.7l-4.2-1.6l0.6-2.8l4.4,0.3l1.5-3.5l0.5-4 l6.4-1.5l-0.2,2.9l1.3,1.8l2.1-0.2l4.1,0.6l5.2-4.5l-7.1-3.3l-3.2,1.6l-4.6-2.3l3.1-4.1L1339.8,303.1L1339.8,303.1z\"},VU:{d:\"M1908.6,676.9l-2.7-3.6l-0.6,1.7l1.3,2.8L1908.6,676.9L1908.6,676.9z M1906.6,667.2l-2.3-2l-0.9,4.9l0.5,1.8 l1.2-0.4l1.3,0.8L1906.6,667.2L1906.6,667.2z\"},VA:{d:\"M1039.5,304.8l0.6-0.1l0.1,0.6h-0.9L1039.5,304.8z\"},VE:{d:\"M642,518.9l-2.2-1.5l-2.9,0.2l-0.7-5.1l-4.1-3.2l-4.4-0.4l-1.8-3l4.8-1.9l-6.7,0.1l-6.9,0.4l-0.2,1.6l-3.2,1.9 l-4.2-0.7l-3.1-2.9l-6,0.7l-5-0.1l-0.1-2.1l-3.5-3.5l-3.9-0.1l-1.7-4.5l-2.1,2l0.6,3l-7.1,2.6v4.8l1.6,2.2l-1.5,4.6l-2.4,0.4l-1.9-5 l2.7-3.7l0.3-3.3l-1.7-2.9l3.3-0.8l0.3-1.5l-3.7,1.1l-1.6,3.2l-2.2,1.8l-1.8,2.4l-0.9,4.5l-1.8,3.7l2.9,0.5l0.6,2.9l1.1,1.4l0.4,2.5 l-0.8,2.4l0.2,1.3l1.3,0.6l1.3,2.2l7.2-0.6l3.2,0.8l3.8,5.5l2.3-0.7l4,0.3l3.2-0.7l2,1.1l-1.2,3.4l-1.3,2.1l-0.5,4.6l1,4.2l1.5,1.9 l0.2,1.5l-2.9,3.1l2,1.4l1.4,2.2l1.7,6.4l3,3.4l4.4-0.5l1.1-1.9l4.2-1.5l2.3-1l0.7-2.7l4.1-1.8l-0.3-1.4l-4.8-0.5l-0.7-4l0.3-4.3 l-2.4-1.6l1-0.6l4.2,0.8l4.4,1.6l1.7-1.5l4-1l6.4-2.4l2.1-2.4l-0.7-1.8l-3.7-4.8l1.6-1.8v-2.9l3.4-1.1l1.5-1.2l-1.9-2.3l0.6-2.3 L642,518.9L642,518.9z\"},VN:{d:\"M1571.6,435l-5.9-1.6l-3-2.6l0.2-3.7l-5.2-1.1l-3-2.4l-4.1,3.4l-5.3,0.7h-4.3l-2.7,1.5l4,5.1l3.4,5.7l6.8,0.1l3,5.5 l-3.3,1.7l-1.3,2.3l7.3,3.8l5.7,7.5l4.3,5.6l4.8,4.4l2,4.5l-0.2,6.4l1.8,4.2l0.1,7.7l-8.9,4.9l2.8,3.8l-5.8,0.5l-4.7,2.5l4.5,3.7 l-1.3,4.3l2.3,4l6.6-5.9l4.1-5.3l6.1-4.1l4.3-4.2l-0.4-11.2l-4-11.7l-4.1-5.1l-5.6-4l-6.4-8.3l-5.3-6.7l0.5-4.4l3.7-6L1571.6,435z\"},EH:{d:\"M928.8,396.2h0.8v0.4l-0.1,1.2l-0.2,9.7l-17.9-0.3l-0.2,16.3L906,424l-1.4,3.3l0.9,9.2l-21.6-0.1l-1.2,2.2l0.3-2.7 h0.1l12.4-0.5l0.7-2.3l2.3-2.9l2-8.8l7.8-6.8l2.8-8.1l1.7-0.4l1.9-5l4.6-0.7l1.9,0.9h2.5l1.8-1.5l3.4-0.2L928.8,396.2z\"},YE:{d:\"M1271.5,466.2l-2.1-4.4l-5.2-10.5l-15.7,2.4l-5,2.9l-3.5,6.7l-2.5,1l-1.6-2.1l-2.1,0.3l-5.4-0.6l-1-0.7l-6.4,0.2 l-1.5,0.6l-2.4-1.7l-1.2,3.1l0.7,2.7l-2.3,2.1l0.4,2.7l-0.6,1.3l0.7,2.9l-1.1,0.3l1.7,2.6l1.3,4.7l1,1.9v3.4l1.6,3.8l3.9,0.3 l1.8-0.9l2.7,0.2l0.8-1.7l1.5-0.4l1.1-1.7l1.4-0.4l4.7-0.3l3.5-1.2l3.1-2.7l1.7,0.4l2.4-0.3l4.7-4.5l8.8-3l5.3-2.7v-2.1l0.9-2.9 L1271.5,466.2L1271.5,466.2z\"},ZM:{d:\"M1149.2,626.7l-1.9-0.5l0.4-1.3l-1-0.3l-7.5,1.1l-1.6,0.7l-1.6,4.1l1.2,2.8l-1.2,7.5l-0.8,6.4l1.4,1.1l3.9,2.5 l1.5-1.2l0.3,6.9h-4.3l-2.1-3.5l-2-2.8l-4.3-0.8l-1.2-3.4l-3.4,2l-4.5-0.9l-1.8-2.8l-3.5-0.6l-2.6,0.1l-0.3-2l-1.9-0.1l0.5,2l-0.7,3 l0.9,3l-0.9,2.4l0.5,2.2l-11.6-0.1l-0.8,20.3l3.6,5.2l3.5,4l4.6-1.5l3.6,0.4l2.1,1.4v0.5l1,0.5l6.2,0.7l1.7,0.7l1.9-0.1l3.2-4.1 l5.1-5.3l2-0.5l0.7-2.2l3.3-2.5l4.2-0.9l-0.3-4.5l17.1-5.2l-2.9-1.7l1.9-5.9l1.8-2.2l-0.9-5.3l1.2-5.1l1-1.8l-1.2-5.4l-2.6-2.8 l-3.2-1.9l-3.5-1.1l-2.2-1.1l-0.3-0.2l0,0l0.5,1.1l-1,0.4L1149.2,626.7L1149.2,626.7z\"},ZW:{d:\"M1148.2,713.7l6.2-7.2l1.6-4.6l0.9-0.6l0.8-3.7l-0.8-1.9l0.5-4.7l1.3-4.4l0.3-8.1l-2.8-2l-2.6-0.5l-1.1-1.6 l-2.6-1.3l-4.6,0.1l-0.3-2.4l-4.2,0.9l-3.3,2.5l-0.7,2.2l-2,0.5l-5.1,5.3l-3.2,4.1l-1.9,0.1l-1.7-0.7l-6.2-0.7l1.9,5.1l1.1,1.1 l1.6,3.7l6,7l2.3,0.7l-0.1,2.2l1.5,4.1l4.2,0.9l3.4,2.9l2.2,0.1l2.6,1.1l1.9-0.8L1148.2,713.7L1148.2,713.7z\"},XK:{d:\"M1080,299.8l1.2-0.5l0.5-2l0.9-0.4l0.8,0.9l1,0.4l0.8,1l0.8,0.3l1.1,1.1h0.8l-0.5,1.5l-0.5,0.7l0.2,0.5l-1.1,0.2l-2.9,1l-0.1,1.2h-0.7l-0.5-2.3l-1.3-0.6l-1.3-1.6L1080,299.8z\"},\"MA-EH\":{d:\"M969.3,363.1l-1.8-6.7l-0.3-3.9l-2-4.1l-2.3-0.1l-5.5-1.4l-5,0.4l-3.1-2.7h-3.9l-1.8,3.9l-3.7,6.7l-4,2.6 l-5.4,2.9L927,365l-0.9,3.4l-2.1,5.4l1.1,7.9l-4.7,5.3l-2.7,1.7l-4.4,4.4l-5.1,0.7l-2.8,2.4l-0.1,0.1l-3.6,6.5l-3.7,2.3l-2.1,4 l-0.2,3.3l-1.6,3.8l-1.9,1l-3.1,4l-2,4.5l0.3,2.2l-1.9,3.3l-2.2,1.7l-0.3,3l-0.3,2.7l1.2-2.2l21.6,0.1l-0.9-9.2l1.4-3.3l5.2-0.5 l0.2-16.3l17.9,0.3l0.2-9.7l0.1-1.2v-0.4l0,0l0,0l0,0l0.1-7.5l8.9-4.7l5.4-1l4.4-1.7l2.1-3.2l6.3-2.5l0.3-4.7l3.1-0.5l2.5-2.4l7-1 l1-2.5L969.3,363.1z\"},\"RU-WITH-CRIMEA\":{d:\"M1145,281l-4.5,2.1l-0.7,1.2l5.8,1.8l-0.6,2.9l3,1.3l6.3-3.6l5.3-1.1l0.6-2.2l-5.1,0.4l-2.7-1.5L1145,281z M1332.3,95.1l-4.5-4l-13.6-4.1l-9.4-2.1l-6.2,0.9l-5.3,2.9l5.8,0.8l6.6,3.2l8,1.7l11.5,1.3C1325.2,95.7,1332.3,95.1,1332.3,95.1z M1153.6,87.8l0.9-0.6l-5.7-0.9L1146,87l-1.3,1l-1.5-1.2l-5.2,0.1l-6.2,0.8l7.7,0.1l-1.1,1.3l4.4,1l3.6-0.7l0.1-0.7l2.9-0.3C1149.4,88.4,1153.6,87.8,1153.6,87.8z M1354.1,97.7l-1.5-1.8l-12.5-2.6l-3-0.3l-2.2,0.5l1.2,6C1336.1,99.5,1354.1,97.7,1354.1,97.7z M1369.3,104l-9.2-0.7l3.4-1.2l-8.2-1.5l-6.1,1.9l-1,2l1.5,2.1l-6.9-0.1l-5.3,2.6l-4.3-1.1l-9.3,0.5l0.3,1.3l-9.2,0.7l-4.9,2.4l-4.2,0.2l-1.2,3.3l5.5,2.6l-7.7,0.7l-9.5-0.3l-5.8,1.1l4.8,5.4l6.9,4.3l-9.6-3l-7.9,0.3l-5.1,2l4.5,3.8l-4.9-1l-2.1-5l-4.2-2.8l-1.8,0.1l3.6,3.7l-4.6,3.5l8.1,4.2l0.4,5.4l2.9,2.9l4.7,0.5l0.4,3.5l4.4,3.1l-1.9,2.6l0.5,2.7l-3.7,1.4l-0.5,2l-5.3-0.8l3.5-7.8l-0.5-3.6l-6.7-3.3l-3.8-7.3l-3.7-3.7l-3.6-1.6l0.8-4.2l-2.9-2.9l-11.3-1.4l-2.1,1l0.5,4.7l-4.3,4.7l1.2,1.7l4.7,4.1l0.1,2.6l5.3,0.5l0.8,1.1l5.8,2.9l-1,2.8l-18.5-6.1l-6.6-1.7l-12.8-1.6l-1.2,1.7l5.9,3.1l-2.7,3.6l-6.4-3.2l-5,2.2l-7.6,0.1l-2.1,1.9l-5.3-0.6l2.5-3.3l-3.2-0.2l-12.3,4.6l-7.6,2.6l0.4,3.5l-6,1.2l-4-1.9l-1.2-3l5-0.7l-3.6-3l-12.2-1.8l4.3,3.4l-0.8,3.2l4.7,3.3l-1.1,3.8l-4.6-1.9l-4-0.3l-8,5.4l4.2,4.1l-3.2,1.4l-11.4-3.5l-2.1,2.1l3.3,2.4l0.2,2.7l-3.8-1.4l-6-1.7l-1.9-5.8l-1-2.6l-8-4l2.9-0.7l20.1,4.2l6.4-1.5l3.7-2.9l-1.6-3.6l-4-2.6l-17.6-6.1l-11.6-1.3l-7.6-3.2l-3.6,1.8l0,0l-6.4,2.2l-3.2,0.5l0.4,3.7l7.2,3.7l-2.8,4.1l6.4,6.3l-1.7,4.8l4.9,4.1l-0.9,3.7l7.3,3.9l-0.9,2.9l-3.3,3.3l-7.9,7.4l0,0l5.3,2.8l-4.5,3.2l0,0l0.9,1l-2.6,3.4l2.5,5.5l-1.6,1.9l2.4,1.4l1,2.8l2.1,3.6l5.2,1.5l1,1.4l2.3-0.7l4.8,1.4l1,2.9l-0.6,1.6l3.7,3.9l2.2,1.1l-0.1,1.1l3.4,1.1l1.7,1.6l-1.6,1.3l-3.9-0.2l-0.8,0.6l1.5,2l2,3.9l0,0l1.8,0.2l1-1.4l1.5,0.3l4.8-0.5l3.8,3.4l-0.9,1.3l0.7,1.9l4,0.2l2.2,2.7l0.2,1.2l6.6,2.2l3.5-1l3.6,2.9l2.9-0.1l7.6,2l0.4,1.9l-1.3,3.2l1.8,3.4l-0.3,2.1l-4.7,0.5l-2.2,1.7l0.4,2.8l4.2-1l0.4,1.3l-6.8,2.6l3.2,2.4l-3.2,5.2l-3.4,1l5,3.6l6.2,2.4l7.4,5.1l0.5-0.7l4.5,1.1l7.7,1l7.5,2.9l1.1,1.2l2.9-1l5.1,1.3l2.1,2.5l3.5,1.4l1.5,0.2l4.3,3.8l2.4,0.4l0.5-1.5l2.6-2.5l0,0l-7.3-7.3l-0.4-4.1l-5.9-5.9l3.5-6.3l4.6-1.1l1.4-3.7l-2.8-1l-0.2-3.2l-4.2-4.1l-3.6,0.2l-5.3-4.3l1.7-4.7l-1.7-1.2l2.1-6.8l6,3.6l-0.7-4.6l8.1-6.6l7.5-0.2l11.9,4.3l6.6,2.4l4.3-2.5l7.6-0.2l7.3,3.2l0.8-1.8l6.9,0.3l0.2-3l-9.4-4.2l3.6-2.9l-1.5-1.7l3.9-1.6l-5-4.1l1.4-2.1l16.8-2.1l1.7-1.5l10.8-2.2l3.1-2.5l9,1.3l4.3,6.3l4.3-1.5l7,2.1l1.2,3.3l4.4-0.4l9.1-5.7l-0.8,1.9l8.3,4.7l18.1,15.5l1.1-3.3l8.3,3.6l6.2-1.6l3.2,1.1l4.1,3.6l3.9,1.2l3.3,2.6l6-0.9l4.3,3.8l1.7-0.5l4.7-1l6.6-5.4l5.9-2.9l5.3,1.9l5.1,0.1l4.7,2.9l5,0.2l7.9,1.6l2.4-4.3l-4-3.6l1.3-6.4l6.9,2.5l4.8,0.8l6.6,1.5l3.7,4.6l8.4,2.6l3.9-1.1l5.7-0.8l5.4,0.8l6.5,3l4.9,3.1h4.5l6.7,1l3.6-1.6l5.8-1l4.5-4.4l3.3,0.7l3.9,2.1l5.5-0.5l7.3,2.3l4.4-3.9l-1.9-2.7l-0.1-6.5l1.2-2l-2.5-3.3l-3.7-1.5l1.7-3l5.1-1.1l6.2-0.2l8.5,1.8l5.9,2.3l7.7,6.1l3.8,2.7l4.4,3.7l6.1,6.1l9.9,1.9l8.9,4.5l6,5.8h7.5l2.6-2.5l6.9-1.8l1.3,5.6l-0.4,2.3l2.8,6.8l0.6,6l-6.8-1.1l-2.9,2.2l4.7,5.3l3.8,7.3l-2.5,0.1l1.9,3.1l0,0l1.4,1.1l0,0l0,0l0,0l-0.4-2l4-4.5l5.1,3l3.2-0.1l4.4-3.6l1-3.7l2.1-7.1l1.9-7.2l-1.3-4.3l1-9l-5.2-9.9l-5.5-7.3l-1.3-6.2l-4.7-5.1l-12.7-6.7l-5.6-0.4l-0.3,3l-5.8-1.3l-5.7-3.8l-8-0.7l4.9-14.1l3.5-11.5l13.1-1.8l14.9,1l2.5-2.8l7.9,0.8l4.3,4.3l6.4-0.6l8.4-1.6l-7.7-3.5v-9.8l9.1-1.9l12.1,7.1l3.6-6.4l-3.2-4.7l4.7-0.5l6.5,8.1l-2.4,4.6l-0.8,6l0.3,7.5l-5.7,1.3l2.8,2.7l-0.1,3.6l6.4,8.3l16,13.4l10.5,8.8l5.7,4.3l1.6-5.7l-4.5-6.2l5.7-1.5l-5.4-6.9l5-3.1l-4.7-2.6l-3.4-5l4.1-0.2l-9-8.6l-6.7-1.4l-2.9-2.4l-1.1-5.6l-3.1-3.9l7,0.8l1.3-2.5l4.7,2.2l6.1-4.6l11.4,4l-1.7-2.6l2-3.6l1.5-4l3.1-0.7l6.5-4.3l9.8,1.2l-0.9-1.5l-3.8-2.3l-4.1-1.6l-9.1-4.6l-8.1-3l6.1,0.4l2-2.5l0,0l-32.9-21.9l-9.4-2.3l-15.7-2.6l-7.9,0.3l-15.2-1.4l1.8,2.3l8.5,3.4l-2.5,1.8l-14.2-4.8l-6.8,0.6l-9.2-1.1l-7,0.2l-3.9,1.1l-7.2-1.6l-5.1-3.8l-6.5-2.2l-9.2-0.9l-14.7,1l-16.1-4l-7.8-3l-40.1-3.4l-2.1,2.2l9.3,4.8l-7.5-0.7l-1,1.5l-9.7-1.6l-5,1.4l-9.3-2.4l3,5.5l-8.9-2.1l-10-4.1l-0.4-2.2l-6-3.3l-9.8-2.6h-6.1l-9.3-0.9l4.7,3.9l-17.2-0.8l-3.9-2.3l-13.3-0.9l-5.3,0.8l-0.1,1.3l-5.8-3.2l-2.3,0.9l-7.2-1.2l-5.6-0.7l1.1-1.5l6.6-2.8l2.3-1.5l-2.4-2.5l-5.5-1.9l-11.5-2.3l-10.8-0.1l-1.9,1.2L1369.3,104L1369.3,104z M1207.1,135.6l-9.9-4.3l-3.1-4.3l3.3-4.9l2.8-5l8.6-4.7l9.8-2.4l11.3-2.4l1.3-1.5l-4.2-1.9l-6.6,0.6l-4.9,1.8l-11.7,0.9l-10.1,3.1l-6.8,2.7l2.5,2.2l-6.6,4.4l3.9,0.7l-5.4,4.3l1.6,2.8l-3.4,1.1l1.9,2.8l7.9,1.4l2.2,2.3l13.4,0.7L1207.1,135.6L1207.1,135.6z M1521.1,110.9l-17.9-2.6l-10.2-0.2l-3.4,0.9l3.4,3.4l12.4,3.2l4.5-1.2l14.2,0.2C1524.1,114.6,1521.1,110.9,1521.1,110.9z M1546.3,113.2l-11.7-1.3l-8.2-0.7l1.7,1.6l10.3,2l6.8,0.4L1546.3,113.2L1546.3,113.2z M1533.8,122.7l-2.5-1.4l-8.3-1.9l-4.1,0.5l-0.8,2l1.1,0.2l8.8,0.6C1528,122.7,1533.8,122.7,1533.8,122.7z M1696.4,135l-6-3.6l-1.4,2.2l3.5,1.6L1696.4,135z M1084,228.9l-0.6-1.5l0.2-1.7l-2.2-0.9l-5-1.1l-6.3,2l-0.7,2.6l5.9,0.7L1084,228.9z M1673.7,250.7l-7.2-6.2l-5.1-6l-6.8-5.8l-4.9-4l-1.3,0.8l4.4,2.8l-1.9,2.8l6.8,8.3l7.8,6l6.4,8.3l2.4,4.6l5.5,6.8l3.8,6l4.6,5.2l-0.1-4.8l6.5,3.8l-3-4.4l-9.5-6.3l-3.7-9l8.9,2L1673.7,250.7L1673.7,250.7z\"},\"UA-WITHOUT-CRIMEA\":{d:\"M1138.5,241l-4.8,0.5l-1.5-0.3l-1,1.4l-1.8-0.2l0,0l-4.1,0.3l-1.2,1.4l0.2,3.1l-2-0.6l-4.3,0.3l-1.5-1.5l-1.6,1.1l-2-0.9l-3.8-0.1l-5.6-1.5l-5-0.5l-3.7,0.2l-2.4,1.6l-2.2,0.3l3.1,5.3l-0.3,1.8l-2.3,0.7l-3.8,5.1l1.6,2.8l-1.1-0.4l-1.1,1.7l-0.7,2.5l2.9,1.7l0.6,1.6l1.9-1.3l3.2,0.7h3.2l2.4,1.5l1.6-0.9l3.6-0.6l1-1.5h2.1l1.1-0.9l3.2-0.6l3.9,1.9l2,0.3l2.5,1.6v2.1l1.9,1.1l1.1,2.6l2,1.5l-0.2,1l1,0.6l-1.2,0.5l-3-0.2l-0.6-0.9l-1,0.5l0.5,1.1l-1.1,2l-0.5,2.1l-1.2,0.7l2.4,1.1l2.2-1l2.4,1.1l3.3-4.6l1.3-3.4l4.5-0.8l0.7,2.4l8,1.5l1.7,1.4l7.4,1.3l-1-3.9l3.9-2.3l4.6-0.3l3-2l3.9-0.5l-0.4-2.8l2.2-1.7l4.7-0.5l0.3-2.1l-1.8-3.4l1.3-3.2l-0.4-1.9l-7.6-2l-2.9,0.1l-3.6-2.9l-3.5,1l-6.6-2.2l-0.2-1.2l-2.2-2.7l-4.7-2.1l0.9-1.3L1138.5,241L1138.5,241z\"}},a.prototype.createTooltip=function(){if(this.tooltip)return!1;this.tooltip=this.createElement(\"div\",\"svgMap-tooltip\",document.getElementsByTagName(\"body\")[0]),this.tooltipContent=this.createElement(\"div\",\"svgMap-tooltip-content-wrapper\",this.tooltip),this.tooltipPointer=this.createElement(\"div\",\"svgMap-tooltip-pointer\",this.tooltip)},a.prototype.setTooltipContent=function(l){this.tooltip&&(this.tooltipContent.innerHTML=\"\",this.tooltipContent.append(l))},a.prototype.showTooltip=function(l){this.tooltip.classList.add(\"svgMap-active\"),this.moveTooltip(l)},a.prototype.hideTooltip=function(){this.tooltip.classList.remove(\"svgMap-active\")},a.prototype.moveTooltip=function(l){var t,e,o,i,a=l.pageX||(l.touches&&l.touches[0]?l.touches[0].pageX:null),L=l.pageY||(l.touches&&l.touches[0]?l.touches[0].pageY:null);null!==a&&null!==L&&(t=window.innerWidth,e=this.tooltip.offsetWidth,o=this.tooltip.offsetHeight,(i=a-e/2)<=6?(a=6+e/2,this.tooltipPointer.style.marginLeft=i-6+\"px\"):t-6<=i+e?(a=t-6-e/2,this.tooltipPointer.style.marginLeft=-1*(t-6-l.pageX-e/2)+\"px\"):this.tooltipPointer.style.marginLeft=\"0px\",L-12-o<=6?(this.tooltip.classList.add(\"svgMap-tooltip-flipped\"),L+=32):(this.tooltip.classList.remove(\"svgMap-tooltip-flipped\"),L-=12),this.tooltip.style.left=a+\"px\",this.tooltip.style.top=L+\"px\")},a.prototype.error=function(l){(console.error||console.log)(\"svgMap error: \"+(l||\"Unknown error\"))},a.prototype.createElement=function(l,t,e,o){var i=document.createElement(l);return t&&(t=t.split(\" \")).forEach(function(l){i.classList.add(l)}),o&&(i.innerHTML=o),e&&e.appendChild(i),i},a.prototype.numberWithCommas=function(l,t){return l.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,t||\",\")},a.prototype.getColor=function(l,t,e){l=l.slice(-6),t=t.slice(-6),e=parseFloat(e).toFixed(1);var o=Math.ceil(parseInt(l.substring(0,2),16)*e+parseInt(t.substring(0,2),16)*(1-e)),i=Math.ceil(parseInt(l.substring(2,4),16)*e+parseInt(t.substring(2,4),16)*(1-e)),e=Math.ceil(parseInt(l.substring(4,6),16)*e+parseInt(t.substring(4,6),16)*(1-e));return\"#\"+this.getHex(o)+this.getHex(i)+this.getHex(e)},a.prototype.getHex=function(l){return(\"0\"+(l=l.toString(16))).slice(-2)},a.prototype.getCountryName=function(l){return(this.options.countryNames&&this.options.countryNames[l]?this.options.countryNames:this.countries)[l]},a}!function(t,e){\"function\"==typeof define&&define.amd?define([\"svg-pan-zoom\"],function(l){return t.svgMap=e(l)}):\"object\"==typeof module&&module.exports?module.exports=t.svgMap=e(require(\"svg-pan-zoom\")):t.svgMap=e(t.svgPanZoom)}(this,function(l){return svgMapWrapper(l)});"],
  "mappings": "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AAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBAAO,IAAG,sBA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",
  "names": ["l", "i", "a", "t", "e", "o"]
}
